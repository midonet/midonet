{
  "comments": [
    {
      "key": {
        "uuid": "facab960_543370aa",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/BgpModelTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 129,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-06-23T17:12:56Z",
      "side": 1,
      "message": "! ...exists(cidr.equals) is more poetic",
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_6e426369",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 176,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-23T14:05:12Z",
      "side": 1,
      "message": "For v2,it would be nice if the model translator would take an rx observer as argument (rather than a function), or ideally be an rx operator. The way we designed v2 so far is that all updates from zk arrive on a single stream. Currently the BGP mapper notifies port, BGP and adevrtised route updates, as well as error notifications (e.g. for zk connection loss) and completion notifications (e.g. for port deletion). The cleanup - e.g. removing the routes when a port becomes inactive or is deleted is also included on the same stream.",
      "range": {
        "startLine": 174,
        "startChar": 16,
        "endLine": 176,
        "endChar": 88
      },
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_517b828b",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 176,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-06-23T14:19:14Z",
      "side": 1,
      "message": "Sure, for v2 we can do it that way. The translator has two purposes: a) make v1 model look like a v2 model to the RoutingHandler (the BgpConfig classes are v2 model-like). And b) isolate the interface between the RoutingHandler and the cluster layer. So we can change b) at the translator as needed.",
      "parentUuid": "facab960_6e426369",
      "range": {
        "startLine": 174,
        "startChar": 16,
        "endLine": 176,
        "endChar": 88
      },
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_6e10a359",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 229,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-23T14:05:12Z",
      "side": 1,
      "message": "Note: in V2 we don\u0027t use UUIDs to identify the learned routes but rather the routes themselves. In my patch of the RoutingHandler here I used a Map[Route, Route} and added the ID to the route.",
      "range": {
        "startLine": 229,
        "startChar": 48,
        "endLine": 229,
        "endChar": 52
      },
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_91718aaa",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 229,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-06-23T14:19:14Z",
      "side": 1,
      "message": "Map[Route, Route]? why not a Set?",
      "parentUuid": "facab960_6e10a359",
      "range": {
        "startLine": 229,
        "startChar": 48,
        "endLine": 229,
        "endChar": 52
      },
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_3160bea4",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 229,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-23T14:40:05Z",
      "side": 1,
      "message": "The route weight was not available on remove: so I used\n\n  peerRoutes.remove(route) match {\n    case Some(rt) \u003d\u003e ...\n  }\n\nwould give the actual route that was added. But a set can be used too.",
      "parentUuid": "facab960_91718aaa",
      "range": {
        "startLine": 229,
        "startChar": 48,
        "endLine": 229,
        "endChar": 52
      },
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_83c858a9",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 248,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-06-24T11:24:19Z",
      "side": 1,
      "message": "ohh, asymmetric names! the horror!",
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_a3cd5cb9",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 287,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-06-24T11:24:19Z",
      "side": 1,
      "message": "isConnected or isActive?",
      "range": {
        "startLine": 287,
        "startChar": 29,
        "endLine": 287,
        "endChar": 35
      },
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_0e2ab78f",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 320,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-23T14:05:12Z",
      "side": 1,
      "message": "Nice: in the v2 state ops are asynchronous, this would work really well.",
      "range": {
        "startLine": 320,
        "startChar": 12,
        "endLine": 320,
        "endChar": 35
      },
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_88db174e",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingWorkflow.scala",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2015-06-24T09:48:16Z",
      "side": 1,
      "message": "Why use a jetty class (why does midolman even pull in jetty?) when you can use Collections.newSetFromMap(new ConcurrentHashMap?",
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_e394c48c",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingWorkflow.scala",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-06-24T11:17:30Z",
      "side": 1,
      "message": "ooooh, this was intellij, hadn\u0027t noticed.\n\nwill fix.",
      "parentUuid": "facab960_88db174e",
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}