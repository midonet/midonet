{
  "comments": [
    {
      "key": {
        "uuid": "facab960_543370aa",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/BgpModelTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 129,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-06-23T17:12:56Z",
      "side": 1,
      "message": "! ...exists(cidr.equals) is more poetic",
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_c373407e",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-06-24T11:36:46Z",
      "side": 1,
      "message": "i wouldn\u0027t import this as it brings the implicit in scope, may cause confusion with the singlethreadYaddaYadda?",
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_f529db9b",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-06-24T16:33:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_c373407e",
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_6e426369",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 176,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-23T14:05:12Z",
      "side": 1,
      "message": "For v2,it would be nice if the model translator would take an rx observer as argument (rather than a function), or ideally be an rx operator. The way we designed v2 so far is that all updates from zk arrive on a single stream. Currently the BGP mapper notifies port, BGP and adevrtised route updates, as well as error notifications (e.g. for zk connection loss) and completion notifications (e.g. for port deletion). The cleanup - e.g. removing the routes when a port becomes inactive or is deleted is also included on the same stream.",
      "range": {
        "startLine": 174,
        "startChar": 16,
        "endLine": 176,
        "endChar": 88
      },
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_517b828b",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 176,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-06-23T14:19:14Z",
      "side": 1,
      "message": "Sure, for v2 we can do it that way. The translator has two purposes: a) make v1 model look like a v2 model to the RoutingHandler (the BgpConfig classes are v2 model-like). And b) isolate the interface between the RoutingHandler and the cluster layer. So we can change b) at the translator as needed.",
      "parentUuid": "facab960_6e426369",
      "range": {
        "startLine": 174,
        "startChar": 16,
        "endLine": 176,
        "endChar": 88
      },
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_6e10a359",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 229,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-23T14:05:12Z",
      "side": 1,
      "message": "Note: in V2 we don\u0027t use UUIDs to identify the learned routes but rather the routes themselves. In my patch of the RoutingHandler here I used a Map[Route, Route} and added the ID to the route.",
      "range": {
        "startLine": 229,
        "startChar": 48,
        "endLine": 229,
        "endChar": 52
      },
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_91718aaa",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 229,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-06-23T14:19:14Z",
      "side": 1,
      "message": "Map[Route, Route]? why not a Set?",
      "parentUuid": "facab960_6e10a359",
      "range": {
        "startLine": 229,
        "startChar": 48,
        "endLine": 229,
        "endChar": 52
      },
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_3160bea4",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 229,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-23T14:40:05Z",
      "side": 1,
      "message": "The route weight was not available on remove: so I used\n\n  peerRoutes.remove(route) match {\n    case Some(rt) \u003d\u003e ...\n  }\n\nwould give the actual route that was added. But a set can be used too.",
      "parentUuid": "facab960_91718aaa",
      "range": {
        "startLine": 229,
        "startChar": 48,
        "endLine": 229,
        "endChar": 52
      },
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_83c858a9",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 248,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-06-24T11:24:19Z",
      "side": 1,
      "message": "ohh, asymmetric names! the horror!",
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_98144645",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 248,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-06-24T16:33:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_83c858a9",
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_a3cd5cb9",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 287,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-06-24T11:24:19Z",
      "side": 1,
      "message": "isConnected or isActive?",
      "range": {
        "startLine": 287,
        "startChar": 29,
        "endLine": 287,
        "endChar": 35
      },
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_b8110a54",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 287,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-06-24T16:33:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_a3cd5cb9",
      "range": {
        "startLine": 287,
        "startChar": 29,
        "endLine": 287,
        "endChar": 35
      },
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_0e2ab78f",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 320,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-23T14:05:12Z",
      "side": 1,
      "message": "Nice: in the v2 state ops are asynchronous, this would work really well.",
      "range": {
        "startLine": 320,
        "startChar": 12,
        "endLine": 320,
        "endChar": 35
      },
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_a35b9cf4",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 418,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-06-24T11:36:46Z",
      "side": 1,
      "message": "is this not the implicit in scope?",
      "range": {
        "startLine": 418,
        "startChar": 10,
        "endLine": 418,
        "endChar": 38
      },
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_f8171243",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 418,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-06-24T16:33:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_a35b9cf4",
      "range": {
        "startLine": 418,
        "startChar": 10,
        "endLine": 418,
        "endChar": 38
      },
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_e3c20484",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 557,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-06-24T11:28:55Z",
      "side": 1,
      "message": "this will call syncPeerRoutes in case of an error, which i think will populate peerRoutes, which we clear below. is this correct? (i\u0027ll review with more detail tomorrow, because i need to check out the code and navigate).",
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_382dfa95",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 3
      },
      "lineNbr": 557,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-06-24T16:33:24Z",
      "side": 1,
      "message": "That\u0027s correct. syncPeerRoutes will make sure that what\u0027s in ZK matches the up-to-date state of the RoutingHandler in that moment (not now).\n\nIn this case, stop(), if we fail to delete routes, because they disappear from the routing handler state, when the we reconnect to ZK and syncPeerRoutes runs, it will delete all the routes that were learned on BGP and go through this port. Which is correct.",
      "parentUuid": "facab960_e3c20484",
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_88db174e",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingWorkflow.scala",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2015-06-24T09:48:16Z",
      "side": 1,
      "message": "Why use a jetty class (why does midolman even pull in jetty?) when you can use Collections.newSetFromMap(new ConcurrentHashMap?",
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_e394c48c",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingWorkflow.scala",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-06-24T11:17:30Z",
      "side": 1,
      "message": "ooooh, this was intellij, hadn\u0027t noticed.\n\nwill fix.",
      "parentUuid": "facab960_88db174e",
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_4339f0a2",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingWorkflow.scala",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-06-24T11:36:46Z",
      "side": 1,
      "message": "toRoutingInfo?",
      "range": {
        "startLine": 41,
        "startChar": 8,
        "endLine": 41,
        "endChar": 31
      },
      "revId": "07407007ab7bab7ba0c785d0b1c61bc92f65c1da",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}