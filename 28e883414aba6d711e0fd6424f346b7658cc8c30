{
  "comments": [
    {
      "key": {
        "uuid": "5ac4a560_8a72d7e3",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/DeviceWatcher.scala",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-11-24T11:39:05Z",
      "side": 1,
      "message": "Thanks Galo: I think the class is useful the way it is. My only comment is related to start/stop idiom that doesn\u0027t work well with observables: could this class be a DeviceObservable such as:\n\n  DeviceObservable extends Observable[Update[T]]\n\nUpdate can be Modify(t), Delete(id) - or other names\nStart, stop would be implicit by subscribing/unsubscribing to/from this observable.",
      "range": {
        "startLine": 78,
        "startChar": 14,
        "endLine": 78,
        "endChar": 27
      },
      "revId": "28e883414aba6d711e0fd6424f346b7658cc8c30",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}