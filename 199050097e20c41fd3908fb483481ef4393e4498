{
  "comments": [
    {
      "key": {
        "uuid": "baa041b7_ce479d1b",
        "filename": "midonet-util/src/main/scala/org/midonet/util/Retriable.scala",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2016-10-18T08:24:12Z",
      "side": 1,
      "message": "given the way how handleRetry is supposed to be overridden by the implementation classes, doesn\u0027t it make more sense to call super.handleRetry before await?",
      "revId": "199050097e20c41fd3908fb483481ef4393e4498",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_8ec0754b",
        "filename": "midonet-util/src/main/scala/org/midonet/util/Retriable.scala",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-10-18T08:34:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "baa041b7_ce479d1b",
      "revId": "199050097e20c41fd3908fb483481ef4393e4498",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_ae5219dc",
        "filename": "midonet-util/src/main/scala/org/midonet/util/Retriable.scala",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2016-10-18T08:24:12Z",
      "side": 1,
      "message": "ditto",
      "revId": "199050097e20c41fd3908fb483481ef4393e4498",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_6ea2d1af",
        "filename": "midonet-util/src/main/scala/org/midonet/util/Retriable.scala",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-10-18T08:34:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "baa041b7_ae5219dc",
      "revId": "199050097e20c41fd3908fb483481ef4393e4498",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_9d79cdc7",
        "filename": "midonet-util/src/main/scala/org/midonet/util/Retriable.scala",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-10-17T15:15:22Z",
      "side": 1,
      "message": "I\u0027m open to suggestions for a better name.",
      "range": {
        "startLine": 141,
        "startChar": 6,
        "endLine": 141,
        "endChar": 22
      },
      "revId": "199050097e20c41fd3908fb483481ef4393e4498",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_00fb14c2",
        "filename": "midonet-util/src/main/scala/org/midonet/util/Retriable.scala",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2016-10-17T16:36:33Z",
      "side": 1,
      "message": "why can\u0027t this be pushed into Retriable trait?",
      "parentUuid": "baa041b7_9d79cdc7",
      "range": {
        "startLine": 141,
        "startChar": 6,
        "endLine": 141,
        "endChar": 22
      },
      "revId": "199050097e20c41fd3908fb483481ef4393e4498",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_0e57c501",
        "filename": "midonet-util/src/main/scala/org/midonet/util/Retriable.scala",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-10-18T07:42:10Z",
      "side": 1,
      "message": "this is because I want to mix-in multiple implementations of the same method, so only the top trait can provide the implementation while in the remaining the method is abstract override.\n\nalternatively, we could have provided separate methods, one to override in ImmediateRetriable, ... traits, and another to be available to override by the user. But I wanted to keep the interface similar to the original patch.",
      "parentUuid": "baa041b7_00fb14c2",
      "range": {
        "startLine": 141,
        "startChar": 6,
        "endLine": 141,
        "endChar": 22
      },
      "revId": "199050097e20c41fd3908fb483481ef4393e4498",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_cef55dcb",
        "filename": "midonet-util/src/main/scala/org/midonet/util/Retriable.scala",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2016-10-18T08:24:12Z",
      "side": 1,
      "message": "thank you for explanation.\n\ni didn\u0027t know this was a common pattern in scala.\nhttp://www.artima.com/scalazine/articles/stackable_trait_pattern.html",
      "parentUuid": "baa041b7_0e57c501",
      "range": {
        "startLine": 141,
        "startChar": 6,
        "endLine": 141,
        "endChar": 22
      },
      "revId": "199050097e20c41fd3908fb483481ef4393e4498",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}