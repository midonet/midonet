#!/bin/bash

# Copyright 2014 Midokura SARL
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -xe

echo $0 called at `date` with args $*

# update apt
sudo apt-get update

# Install basic tools
sudo apt-get install curl screen tmux python-dev libncurses5-dev openjdk-7-jdk -y

# Bring in newer version of iproute, which fixes "Cannot remove <namespace>: Device or resource busy":
# https://bugs.launchpad.net/ubuntu/+source/iproute/+bug/1238981
sudo apt-get install iproute -y

# add midokura apt source
echo 'deb http://repo.midonet.org/midonet/current unstable main' |sudo tee -a /etc/apt/sources.list.d/midokura.list
echo 'deb http://repo.midonet.org/misc stable main' |sudo tee -a /etc/apt/sources.list.d/midokura.list
curl -k http://repo.midonet.org/packages.midokura.key | sudo apt-key add -

# add cloud archive for icehouse
sudo apt-get install python-software-properties -y

if [ $(lsb_release  -cs) == "trusty" ] ; then
    sudo add-apt-repository cloud-archive:juno -y
else
    sudo add-apt-repository cloud-archive:icehouse -y
fi

# add apt source for cassandra
echo "deb http://debian.datastax.com/community stable main" | sudo tee -a /etc/apt/sources.list.d/cassandra.sources.list
curl -L http://debian.datastax.com/debian/repo_key | sudo apt-key add -

# update apt
sudo apt-get update

# Install zookeeper
if [ $(lsb_release  -cs) == "trusty" ] ; then
    sudo apt-get -y --force-yes install zookeeper zookeeperd
else
    sudo apt-get -y --force-yes install zookeeper
    sudo sed -i 's/\(JAVA_HOME=\).*$/\1\/usr\/lib\/jvm\/java-1.7.0-openjdk-amd64/' /etc/zookeeper/zookeeper-env.sh
fi

sudo update-rc.d zookeeper defaults
sudo service zookeeper stop || true

# Install cassandra
sudo apt-get -o Dpkg::Options::=--force-confnew -y --force-yes install dsc21

sudo update-rc.d cassandra enable
CASSANDRA_CONF_FILE='/etc/cassandra/cassandra.yaml'
sudo sed -i -e "s/^cluster_name:.*$/cluster_name: \'midonet\'/g" $CASSANDRA_CONF_FILE

CASSANDRA_ENV_FILE='/etc/cassandra/cassandra-env.sh'
sudo sed -i 's/#\(MAX_HEAP_SIZE=\).*$/\1128M/' $CASSANDRA_ENV_FILE
sudo sed -i 's/#\(HEAP_NEWSIZE=\).*$/\164M/' $CASSANDRA_ENV_FILE

sudo service cassandra stop
sudo rm -rf /var/lib/cassandra/*
sudo service cassandra stop
sudo bash -c "echo $(hostname|sed 's/ip-//;s/-/./g') $(hostname -f) $(hostname) >>/etc/hosts"


# Install ovs kmod
if [ $(lsb_release  -cs) == "trusty" ] ; then
   : # Trusy kernel is new enough that it has kmod in kernel package
else
    sudo  apt-get install -y --force-yes openvswitch-datapath-dkms=1.10.2-0ubuntu2~cloud0
fi

# Install haproxy
sudo apt-get -y install haproxy

# Install midolman
sudo apt-get install -y --force-yes midolman

# Install python-midonetclient from source
MMM_PMC_SOURCE_DIR=${MMM_PMC_SOURCE_DIR:-../../python-midonetclient}
sudo rm -rf /usr/local/lib/python2.7/dist-packages/midonetclient* /usr/local/bin/midonet-cli
[ -d $MMM_PMC_SOURCE_DIR ] || { echo $MMM_PMC_SOURCE_DIR is invalid; exit 1 ;}
cd $MMM_PMC_SOURCE_DIR
sudo python setup.py develop
cd -

# Install midonet-api
sudo apt-get install -y --force-yes tomcat7
sudo apt-get -o Dpkg::Options::="--force-confnew" install -y --force-yes midonet-api
sudo apt-get install -y --force-yes python-httplib2

sudo service tomcat7 stop
sudo sed -i 's/#\(JAVA_HOME=\).*$/\1\/usr\/lib\/jvm\/java-1.7.0-openjdk-amd64/' /etc/default/tomcat7
sleep 5
sudo service tomcat7 start
sudo update-rc.d tomcat7 enable

# use java7 by default for mm-dpctl
sudo update-alternatives --set java /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java

sudo apt-get install -y --force-yes dnsmasq-base

# Install tools
sudo apt-get install -y --force-yes zkdump

# Install dependencies for MDTS
bash -xe ../mdts/install_deps.sh

sudo bash -c 'cd scripts && bash -xe init'
