#!/bin/bash -x

# Copyright 2014 Midokura SARL
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


IMAGE_ID=mdts:vtep-emulator
BRIDGE=br0

VTEP_MANAGEMENT_ADRESSES=(10.0.0.128/24 10.0.0.129/24)
VTEP_DEFAULT_GATEWAYS=(10.0.0.240 10.0.0.240)
HOST_INTERFACES=(vtepemu0 vtepemu1)
PEERS_BEHIND_VTEP=(10.0.2.26/24 10.0.2.27/24)
VLAN_OF_PEERS=(5 6)


for i in $(seq 0 $((${#VTEP_MANAGEMENT_ADRESSES[*]} - 1))); do
    echo ${VTEP_MANAGEMENT_ADRESSES[i]}

    container_id=$(sudo docker run --net=none --privileged  -v $(pwd):/opt/vtep  -tid $IMAGE_ID)
    pid=$(sudo docker inspect -f '{{.State.Pid}}' $container_id)

    netns_name=$pid
    sudo mkdir -p /var/run/netns
    sudo ln -s /proc/$pid/ns/net /var/run/netns/$netns_name

    # veth interface names, A in the host and B in the container.
    A=${HOST_INTERFACES[i]}
    B=$A.ns

    sudo ip link add $A type veth peer name $B
    sudo brctl addif $BRIDGE $A
    sudo ip link set $A up

    # Place B inside the container's network namespace,
    # rename to eth0, and activate it with a free IP
    sudo ip link set $B netns $netns_name
    sudo ip netns exec $netns_name ip link set dev $B name eth0
    sudo ip netns exec $netns_name ip link set eth0 address 00:00:0$i:BE:EE:EF
    sudo ip netns exec $netns_name ip link set eth0 up
    sudo ip netns exec $netns_name ip addr add ${VTEP_MANAGEMENT_ADRESSES[i]} dev eth0
    sudo ip netns exec $netns_name ip route add default via ${VTEP_DEFAULT_GATEWAYS[i]}
    sudo rm /var/run/netns/$netns_name


    # configure vtep emulater inside the container
    sleep 3 # need some nap before ovs becomes ready
    sudo docker exec $container_id /opt/vtep/vtep.sh config vtep0 ${VTEP_MANAGEMENT_ADRESSES[i]%/*} ${VTEP_MANAGEMENT_ADRESSES[i]%/*}

    sudo docker exec $container_id /opt/vtep/vtep.sh add_port vtep0 port0 ${PEERS_BEHIND_VTEP[i]} ${VLAN_OF_PEERS[i]}

done
