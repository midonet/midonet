#!/bin/bash -x
# This script is a hack that allows running MDTS based on the new storage stack, with the
# compat implemented in the MidoNet Cluster, and agents relying on the new stack and
# mappers.

echo "Running at `pwd` `whoami`"
echo "We assume that a) you're inside tests/mmm and b) your code is already compiled"

HOST_ID_FILE="`pwd`/midonet_host_id.properties"
CONF_FILE="`pwd`/midonet-cluster.conf"
ZK="10.0.0.2:2181,10.0.0.3:2181,10.0.0.4:2181"

echo "Stop midolmans.."
pushd scripts/midolman
sudo ./stop
popd

sudo service tomcat7 stop

sleep 10

echo "Now we tell agents to run on the new stack.."
echo "zookeeper.use_new_stack : true" | MIDO_ZOOKEEPER_HOSTS="10.0.0.2:2181" mn-conf set -h 00000000-0000-0000-0000-000000000001
echo "zookeeper.use_new_stack : true" | MIDO_ZOOKEEPER_HOSTS="10.0.0.2:2181" mn-conf set -h 00000000-0000-0000-0000-000000000002
echo "zookeeper.use_new_stack : true" | MIDO_ZOOKEEPER_HOSTS="10.0.0.2:2181" mn-conf set -h 00000000-0000-0000-0000-000000000003

# This file is used by the cluster to connect to ZK and bootstrap the configuration
cat > $CONF_FILE << EOF
[zookeeper]
zookeeper_hosts = $ZK
root_key = /midonet/v1
EOF

echo "Let's now run the cluster.."
cd ../../
# Make the dev logback visible so we can see what's going on..
cp cluster/midonet-cluster/conf/logback.xml.dev cluster/midonet-cluster/src/main/resources/logback.xml
# Run the cluster in a new screen session running the cluster process, that
# won't attach or fork a new process so that the session terminates if the
# command ends.  We do not run as sudo as that way we'll use the same
# gradle dep. repo as was used in the previous compilation
screen -d -m -S cluster sh -c "./gradlew -Pconf=$CONF_FILE -Dmidonet.host_id_filepath=$HOST_ID_FILE cluster:midonet-cluster:run"

pushd tests

times=0
until midonet-cli --midonet-url=http://localhost:8181/midonet-api -A -e "bridge list"
do
  let times=times+1
  echo "MidoNet cluster isn't up yet"
  if [ $times -gt 10 ]
  then
    echo "Giving up!"
    exit -1
  fi
  sleep 10
done

echo "MidoNet cluster should be running now"

echo "Point the Python Client to the Compat API.."
sed "s/8080/8181/" -i mdts/tests/config.py
sed "s/8080/8181/" -i mdts/lib/topology_manager.py
sed "s/'admin',.*/None, None)/" -i mdts/lib/topology_manager.py

echo "And reboot the agents.."
pushd mmm/scripts/midolman/
sudo ./start
popd
popd

sleep 30
