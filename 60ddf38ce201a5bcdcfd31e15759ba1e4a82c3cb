{
  "comments": [
    {
      "key": {
        "uuid": "5ac4a560_c27ca575",
        "filename": "tests/mdts/tests/functional_tests/test_load_balancer.py",
        "patchSetId": 29
      },
      "lineNbr": 327,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2015-11-27T07:54:06Z",
      "side": 1,
      "message": "Nit (FYI). Having the src_port here would allow us to later implement long running connections test by specifying always the same port. What you could do inside this function is: if src_port is None, pick a sequential port (like you do now). If src_port is not None, use this src_port.\n\nCan be re-added in a later patch if we ever implement the long running connections test.",
      "revId": "60ddf38ce201a5bcdcfd31e15759ba1e4a82c3cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac4a560_60bbc90e",
        "filename": "tests/mdts/tests/functional_tests/test_load_balancer.py",
        "patchSetId": 29
      },
      "lineNbr": 327,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-11-27T15:58:55Z",
      "side": 1,
      "message": "I re-introduced the src_port.",
      "parentUuid": "5ac4a560_c27ca575",
      "revId": "60ddf38ce201a5bcdcfd31e15759ba1e4a82c3cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac4a560_02969d94",
        "filename": "tests/mdts/tests/functional_tests/test_load_balancer.py",
        "patchSetId": 29
      },
      "lineNbr": 434,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2015-11-27T07:56:51Z",
      "side": 1,
      "message": "This should be uncommented as alex already fixed it by awaiting member status at the beginning of the test.",
      "revId": "60ddf38ce201a5bcdcfd31e15759ba1e4a82c3cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac4a560_c07c9d75",
        "filename": "tests/mdts/tests/functional_tests/test_load_balancer.py",
        "patchSetId": 29
      },
      "lineNbr": 434,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-11-27T15:58:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ac4a560_02969d94",
      "revId": "60ddf38ce201a5bcdcfd31e15759ba1e4a82c3cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac4a560_628d917b",
        "filename": "tests/mdts/tests/functional_tests/test_load_balancer.py",
        "patchSetId": 29
      },
      "lineNbr": 459,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2015-11-27T07:56:51Z",
      "side": 1,
      "message": "You are considering here only with equal weights. What about different weights? Can we estimate a safe number considering the current weights we currently use? (20,10,5 IIRC).",
      "revId": "60ddf38ce201a5bcdcfd31e15759ba1e4a82c3cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac4a560_20c1d180",
        "filename": "tests/mdts/tests/functional_tests/test_load_balancer.py",
        "patchSetId": 29
      },
      "lineNbr": 459,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-11-27T15:58:55Z",
      "side": 1,
      "message": "It gives the expected number of requests for non-uniform probability distribution of the coupons on the wiki page. We can write: we leave the generalization to the reader as an exercise ;-)",
      "parentUuid": "5ac4a560_628d917b",
      "revId": "60ddf38ce201a5bcdcfd31e15759ba1e4a82c3cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}