{
  "comments": [
    {
      "key": {
        "uuid": "fafc7978_85c70245",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/NeutronPollingMinion.scala",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2014-12-08T09:35:58Z",
      "side": 1,
      "message": "Do we want to construct C3POStorageManager via Guice?",
      "revId": "a0614342e73a1985c2fa10d4433c22d67725aebd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_cbf2bb99",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/NeutronPollingMinion.scala",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2014-12-09T02:46:44Z",
      "side": 1,
      "message": "Not sure. Galo told me to do it here. We need to add translator registrations, so it\u0027s going to end up being a significant chunk of code. If we need to use the C3POStorageManager anywhere else, we should reconsider using Guice, but I think it\u0027s fine as is if this ends up being the only place it\u0027s used.",
      "parentUuid": "fafc7978_85c70245",
      "revId": "a0614342e73a1985c2fa10d4433c22d67725aebd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_e5552ec7",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/NeutronPollingMinion.scala",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2014-12-08T05:58:05Z",
      "side": 1,
      "message": "May be unnecessary as similar logs would also be generated from C3POStorageManager or NeutronService, but did you consider turning this into INFO? This also applies to the following two more log statements.",
      "range": {
        "startLine": 48,
        "startChar": 12,
        "endLine": 48,
        "endChar": 21
      },
      "revId": "a0614342e73a1985c2fa10d4433c22d67725aebd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_0564b2b7",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/NeutronPollingMinion.scala",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2014-12-08T06:15:30Z",
      "side": 1,
      "message": "This is definitely debug-level, and might be worth removing completely. I was using this for actual debugging when it was crashing and I couldn\u0027t figure out where. This will run once per second, and it isn\u0027t useful unless there\u0027s a crash in lastProcessedC3POTaskId, since we log the result immediately afterwards. Hence debug.",
      "parentUuid": "fafc7978_e5552ec7",
      "range": {
        "startLine": 48,
        "startChar": 12,
        "endLine": 48,
        "endChar": 21
      },
      "revId": "a0614342e73a1985c2fa10d4433c22d67725aebd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_65593efe",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/NeutronPollingMinion.scala",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2014-12-08T06:15:30Z",
      "side": 1,
      "message": "This and the next one might be info-worthy, depending on what our threshold for info is.",
      "range": {
        "startLine": 50,
        "startChar": 16,
        "endLine": 50,
        "endChar": 21
      },
      "revId": "a0614342e73a1985c2fa10d4433c22d67725aebd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_85c1c282",
        "filename": "cluster/src/main/proto/commons.proto",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2014-12-08T05:58:05Z",
      "side": 1,
      "message": "Those are enum values, so shouldn\u0027t we keep in upper cases? Or are you changing them to make them consistent with the json field names? If so, you should probably upper-case them when passing to desc.findValueByName().",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 49,
        "endChar": 11
      },
      "revId": "a0614342e73a1985c2fa10d4433c22d67725aebd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_455ebae7",
        "filename": "cluster/src/main/proto/commons.proto",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2014-12-08T06:15:30Z",
      "side": 1,
      "message": "Consistency with JSON. I guess I could upper-case it, though.",
      "parentUuid": "fafc7978_85c1c282",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 49,
        "endChar": 11
      },
      "revId": "a0614342e73a1985c2fa10d4433c22d67725aebd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_e5becefe",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronDeserializer.scala",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2014-12-08T05:58:05Z",
      "side": 1,
      "message": "These seem to be out-of-order. Could you please sort them?",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 32,
        "endChar": 42
      },
      "revId": "a0614342e73a1985c2fa10d4433c22d67725aebd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_2538d69f",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronDeserializer.scala",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2014-12-08T05:58:05Z",
      "side": 1,
      "message": "Can we collapse those into 1 line for readability?",
      "range": {
        "startLine": 67,
        "startChar": 12,
        "endLine": 68,
        "endChar": 39
      },
      "revId": "a0614342e73a1985c2fa10d4433c22d67725aebd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_e51a4e16",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronDeserializer.scala",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2014-12-08T06:15:30Z",
      "side": 1,
      "message": "Sure.",
      "parentUuid": "fafc7978_2538d69f",
      "range": {
        "startLine": 67,
        "startChar": 12,
        "endLine": 68,
        "endChar": 39
      },
      "revId": "a0614342e73a1985c2fa10d4433c22d67725aebd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_6542de11",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronService.scala",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2014-12-08T05:58:05Z",
      "side": 1,
      "message": "Those org.midonet imports should come at the end.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 26,
        "endChar": 43
      },
      "revId": "a0614342e73a1985c2fa10d4433c22d67725aebd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_b6487e5c",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronService.scala",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2014-12-09T06:59:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fafc7978_6542de11",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 26,
        "endChar": 43
      },
      "revId": "a0614342e73a1985c2fa10d4433c22d67725aebd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_8548a22e",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronService.scala",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2014-12-08T05:58:05Z",
      "side": 1,
      "message": "Can / should this also be passed via a constructor argument? Is there anything specific to mysql with this implementation?",
      "range": {
        "startLine": 122,
        "startChar": 31,
        "endLine": 122,
        "endChar": 54
      },
      "revId": "a0614342e73a1985c2fa10d4433c22d67725aebd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_85cb8271",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronService.scala",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2014-12-08T07:52:31Z",
      "side": 1,
      "message": "You mean just the driver class name? I guess, but since we\u0027re very unlikely to change to a different relational database, there doesn\u0027t seem to be much point.",
      "parentUuid": "fafc7978_8548a22e",
      "range": {
        "startLine": 122,
        "startChar": 31,
        "endLine": 122,
        "endChar": 54
      },
      "revId": "a0614342e73a1985c2fa10d4433c22d67725aebd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_2b3b873b",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronService.scala",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2014-12-09T06:59:48Z",
      "side": 1,
      "message": "I asked Ryu, and it turns out that they already do support other RDBMS\u0027s. I\u0027ll change it.",
      "parentUuid": "fafc7978_85cb8271",
      "range": {
        "startLine": 122,
        "startChar": 31,
        "endLine": 122,
        "endChar": 54
      },
      "revId": "a0614342e73a1985c2fa10d4433c22d67725aebd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_4547da1f",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronService.scala",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2014-12-08T05:58:05Z",
      "side": 1,
      "message": "Should be called in side a try-finally clause?",
      "range": {
        "startLine": 198,
        "startChar": 8,
        "endLine": 198,
        "endChar": 19
      },
      "revId": "a0614342e73a1985c2fa10d4433c22d67725aebd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_c5c58a5c",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronService.scala",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2014-12-08T07:52:31Z",
      "side": 1,
      "message": "Yes. I did it for the other one but missed this one.",
      "parentUuid": "fafc7978_4547da1f",
      "range": {
        "startLine": 198,
        "startChar": 8,
        "endLine": 198,
        "endChar": 19
      },
      "revId": "a0614342e73a1985c2fa10d4433c22d67725aebd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}