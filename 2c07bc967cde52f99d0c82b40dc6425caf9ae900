{
  "comments": [
    {
      "key": {
        "uuid": "1a106d94_ef2fec86",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/InMemoryMergedMap.scala",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-05-18T16:30:19Z",
      "side": 1,
      "message": "isn\u0027t it better to keep a map in memory with the winner map, and update it upon opinion changes?",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 38,
        "endChar": 5
      },
      "revId": "2c07bc967cde52f99d0c82b40dc6425caf9ae900",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_c5912c54",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/InMemoryMergedMap.scala",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-05-19T15:30:54Z",
      "side": 1,
      "message": "Yes, but I thought that the performance of the in-memory version is not so important. I may adopt your solution in the upcoming patch set once I perform the merging using the observable of private maps.",
      "parentUuid": "1a106d94_ef2fec86",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 38,
        "endChar": 5
      },
      "revId": "2c07bc967cde52f99d0c82b40dc6425caf9ae900",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}