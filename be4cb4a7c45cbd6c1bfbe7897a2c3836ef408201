{
  "comments": [
    {
      "key": {
        "uuid": "5ac4a560_44b161f7",
        "filename": "midonet-cluster/src/main/java/org/midonet/cluster/rest_api/models/ServiceContainer.java",
        "patchSetId": 5
      },
      "lineNbr": 88,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-12-04T15:36:15Z",
      "side": 1,
      "message": "Nit: I think this is not really needed, since absoluteUri does this check.",
      "range": {
        "startLine": 86,
        "startChar": 8,
        "endLine": 88,
        "endChar": 9
      },
      "revId": "be4cb4a7c45cbd6c1bfbe7897a2c3836ef408201",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac4a560_4488811f",
        "filename": "midonet-cluster/src/test/scala/org/midonet/cluster/services/rest_api/resources/TestServiceContainersApi.scala",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-12-04T15:36:15Z",
      "side": 1,
      "message": "Unrelated question: so is it then possible to create a container that is not part of a group?",
      "range": {
        "startLine": 114,
        "startChar": 8,
        "endLine": 114,
        "endChar": 78
      },
      "revId": "be4cb4a7c45cbd6c1bfbe7897a2c3836ef408201",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac4a560_e4b6eddb",
        "filename": "python-midonetclient/src/bin/midonet-cli",
        "patchSetId": 5
      },
      "lineNbr": 1822,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-12-04T15:36:15Z",
      "side": 1,
      "message": "Can this be `container` (without \"s\") for consistency (see below)?",
      "range": {
        "startLine": 1822,
        "startChar": 41,
        "endLine": 1822,
        "endChar": 51
      },
      "revId": "be4cb4a7c45cbd6c1bfbe7897a2c3836ef408201",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}