{
  "comments": [
    {
      "key": {
        "uuid": "fabf19d9_72c6e717",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2017-02-28T09:06:07Z",
      "side": 1,
      "message": "I think the idea was that we\u0027re going to deprecate the portAddress field and no longer use it in MidoNet 5.4+",
      "range": {
        "startLine": 13,
        "startChar": 17,
        "endLine": 14,
        "endChar": 46
      },
      "revId": "10a78e22c6418b6a1b3c74ea10a96739d491a391",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fabf19d9_72bb8776",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 1003629
      },
      "writtenOn": "2017-02-28T09:20:14Z",
      "side": 1,
      "message": "Right, but it looks like it\u0027s still in use?  Otherwise, is there a reason we are setting it in afterFromProto?  Should this patch remove it from use completely, or can we do that in a subsequent patch?",
      "parentUuid": "fabf19d9_72c6e717",
      "range": {
        "startLine": 13,
        "startChar": 17,
        "endLine": 14,
        "endChar": 46
      },
      "revId": "10a78e22c6418b6a1b3c74ea10a96739d491a391",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fabf19d9_45d43b46",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2017-02-28T09:45:24Z",
      "side": 1,
      "message": "in the afterFromProto we set the field in the JSON, such that it\u0027s still available for legacy clients that use the 5.4 API (we want to keep the API compatible)\n\nlikewise, for writing we use the portAddress only if set explicitly by the client (meaning a legacy client that still uses the portAddress field)\n\nbtw, I see what bug you\u0027re trying to solve, maybe we should just alter that createFilter to use portSubnet instead",
      "parentUuid": "fabf19d9_72bb8776",
      "range": {
        "startLine": 13,
        "startChar": 17,
        "endLine": 14,
        "endChar": 46
      },
      "revId": "10a78e22c6418b6a1b3c74ea10a96739d491a391",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fabf19d9_56b3d00a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 1003629
      },
      "writtenOn": "2017-03-01T00:19:07Z",
      "side": 1,
      "message": "Alex, I agree.  Shall we do that in an immediate subsequent patch, or should I abandon this one to fix?  Also, this patch will fix the update problem (which is the one case where the logic you mentioned has a slight issue, because pulling from ZK will set the portAddress so that when pushing back to ZK, that portAddress will override the portSubnet setting), so that\u0027s still an outstanding bug, should we abandon this patch.\n\nI suggest we push this patch in, then change the createFilter to loop portSubnet and fix the multiple port route bug (there should be a port route for each valid IPv4 CIDR, but now only one gets created) at the same time.",
      "parentUuid": "fabf19d9_45d43b46",
      "range": {
        "startLine": 13,
        "startChar": 17,
        "endLine": 14,
        "endChar": 46
      },
      "revId": "10a78e22c6418b6a1b3c74ea10a96739d491a391",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fabf19d9_ef1fb007",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-02-28T04:43:41Z",
      "side": 1,
      "message": "doesn\u0027t this break api compatibility?",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 32,
        "endChar": 65
      },
      "revId": "10a78e22c6418b6a1b3c74ea10a96739d491a391",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fabf19d9_d285b3ad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1003629
      },
      "writtenOn": "2017-02-28T09:20:14Z",
      "side": 1,
      "message": "It shouldn\u0027t.  The beforeToProto and afterFromProto functions have no effect on the API side.  What was being received and sent before this patch should still be the case.",
      "parentUuid": "fabf19d9_ef1fb007",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 32,
        "endChar": 65
      },
      "revId": "10a78e22c6418b6a1b3c74ea10a96739d491a391",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fabf19d9_76a5b4b3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2017-03-01T00:26:03Z",
      "side": 1,
      "message": "i thought an address update with old api usage should make the port have a single address. this change prevents it, doesn\u0027t it?",
      "parentUuid": "fabf19d9_d285b3ad",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 32,
        "endChar": 65
      },
      "revId": "10a78e22c6418b6a1b3c74ea10a96739d491a391",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fabf19d9_96ede890",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1003629
      },
      "writtenOn": "2017-03-01T04:43:25Z",
      "side": 1,
      "message": "I don\u0027t see how it would change anything as far as the CLI or API is concerned.  The CLI hasn\u0027t changed, nor has the API side (the only thing that has changed is the interface with ZK).  The input and output to the REST API is the same as before, so both old and new API versions should work.  The only possible difference I could see is if the API gets sent both portAddress AND portSubnet at the same time, which I don\u0027t think ever happens (old sets portAddress only, while new sets portSubnet).",
      "parentUuid": "fabf19d9_76a5b4b3",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 32,
        "endChar": 65
      },
      "revId": "10a78e22c6418b6a1b3c74ea10a96739d491a391",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fabf19d9_d2693327",
        "filename": "midonet-cluster/src/main/java/org/midonet/cluster/rest_api/models/RouterPort.java",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2017-02-28T09:06:07Z",
      "side": 1,
      "message": "we usually don\u0027t use methods with underscore",
      "range": {
        "startLine": 109,
        "startChar": 17,
        "endLine": 109,
        "endChar": 18
      },
      "revId": "10a78e22c6418b6a1b3c74ea10a96739d491a391",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fabf19d9_52c083e0",
        "filename": "midonet-cluster/src/main/java/org/midonet/cluster/rest_api/models/RouterPort.java",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 1003629
      },
      "writtenOn": "2017-02-28T09:20:14Z",
      "side": 1,
      "message": "Okay, I will change.",
      "parentUuid": "fabf19d9_d2693327",
      "range": {
        "startLine": 109,
        "startChar": 17,
        "endLine": 109,
        "endChar": 18
      },
      "revId": "10a78e22c6418b6a1b3c74ea10a96739d491a391",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}