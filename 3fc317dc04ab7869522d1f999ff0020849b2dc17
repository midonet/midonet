{
  "comments": [
    {
      "key": {
        "uuid": "9a245df4_50a4e256",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectMapper.scala",
        "patchSetId": 21
      },
      "lineNbr": 463,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-01-20T10:06:47Z",
      "side": 1,
      "message": "Rather than explaining what the code does why not explaining why it does it?",
      "range": {
        "startLine": 461,
        "startChar": 23,
        "endLine": 463,
        "endChar": 51
      },
      "revId": "3fc317dc04ab7869522d1f999ff0020849b2dc17",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a245df4_dba9137d",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectMapper.scala",
        "patchSetId": 21
      },
      "lineNbr": 463,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-01-20T11:43:47Z",
      "side": 1,
      "message": "The comment for the ops field above explains how we build the list of ZK transaction ops starting from the user transaction ops, i.e. consolidating a new op in a previous one, when it targets the same object.\n\nDo you refer to this explanation?",
      "parentUuid": "9a245df4_50a4e256",
      "range": {
        "startLine": 461,
        "startChar": 23,
        "endLine": 463,
        "endChar": 51
      },
      "revId": "3fc317dc04ab7869522d1f999ff0020849b2dc17",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a245df4_7b5aa784",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectMapper.scala",
        "patchSetId": 21
      },
      "lineNbr": 463,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-01-20T13:28:21Z",
      "side": 1,
      "message": "I was thinking more of a higher-level explanation like: \"We add a delete owner op followed by a create owner op to refresh the ownership of the object. This occurs when the previous owner got disconnected and we want to take over ownership under the same identity.\"",
      "parentUuid": "9a245df4_dba9137d",
      "range": {
        "startLine": 461,
        "startChar": 23,
        "endLine": 463,
        "endChar": 51
      },
      "revId": "3fc317dc04ab7869522d1f999ff0020849b2dc17",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a245df4_d69baa70",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectMapper.scala",
        "patchSetId": 21
      },
      "lineNbr": 463,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-01-20T17:01:18Z",
      "side": 1,
      "message": "I understand: let\u0027s add this comment to the in-memory patch, which moves this code out of the ZookeeperObjectMapper class. Is that okay?",
      "parentUuid": "9a245df4_7b5aa784",
      "range": {
        "startLine": 461,
        "startChar": 23,
        "endLine": 463,
        "endChar": 51
      },
      "revId": "3fc317dc04ab7869522d1f999ff0020849b2dc17",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a245df4_9085baaf",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectMapper.scala",
        "patchSetId": 21
      },
      "lineNbr": 469,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-01-20T10:06:47Z",
      "side": 1,
      "message": "Same comment",
      "range": {
        "startLine": 467,
        "startChar": 20,
        "endLine": 469,
        "endChar": 51
      },
      "revId": "3fc317dc04ab7869522d1f999ff0020849b2dc17",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a245df4_10c1cae4",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectMapper.scala",
        "patchSetId": 21
      },
      "lineNbr": 529,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-01-20T10:06:47Z",
      "side": 1,
      "message": "same comment",
      "range": {
        "startLine": 526,
        "startChar": 23,
        "endLine": 529,
        "endChar": 29
      },
      "revId": "3fc317dc04ab7869522d1f999ff0020849b2dc17",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a245df4_70b6468c",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectMapper.scala",
        "patchSetId": 21
      },
      "lineNbr": 542,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-01-20T10:06:47Z",
      "side": 1,
      "message": "same comment",
      "range": {
        "startLine": 539,
        "startChar": 23,
        "endLine": 542,
        "endChar": 67
      },
      "revId": "3fc317dc04ab7869522d1f999ff0020849b2dc17",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a245df4_50bb4272",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectMapper.scala",
        "patchSetId": 21
      },
      "lineNbr": 556,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-01-20T10:06:47Z",
      "side": 1,
      "message": "same comment",
      "range": {
        "startLine": 552,
        "startChar": 20,
        "endLine": 556,
        "endChar": 61
      },
      "revId": "3fc317dc04ab7869522d1f999ff0020849b2dc17",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}