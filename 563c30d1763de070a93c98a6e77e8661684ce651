{
  "comments": [
    {
      "key": {
        "uuid": "baa041b7_34d36106",
        "filename": "docs/neutron_translation.md",
        "patchSetId": 10
      },
      "lineNbr": 774,
      "author": {
        "id": 1007112
      },
      "writtenOn": "2016-04-28T13:48:58Z",
      "side": 1,
      "message": "Considering non-router pattern in bgp_speaker,\nthere is possibility that multiple peers are already related to a bgp_speaker before adding network.\nShould plugin request update_bgp_speaker multiple times?\nOr it should be add_bgp_peer_ids?",
      "range": {
        "startLine": 774,
        "startChar": 1,
        "endLine": 774,
        "endChar": 49
      },
      "revId": "563c30d1763de070a93c98a6e77e8661684ce651",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_34fa4176",
        "filename": "docs/neutron_translation.md",
        "patchSetId": 10
      },
      "lineNbr": 774,
      "author": {
        "id": 1002740
      },
      "writtenOn": "2016-04-28T16:43:03Z",
      "side": 1,
      "message": "I think it\u0027s easier if you send it every time to simplify the case of router interface add.  We want all the BGP resources to be created when that API is invoked.",
      "parentUuid": "baa041b7_34d36106",
      "range": {
        "startLine": 774,
        "startChar": 1,
        "endLine": 774,
        "endChar": 49
      },
      "revId": "563c30d1763de070a93c98a6e77e8661684ce651",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_8a456871",
        "filename": "docs/neutron_translation.md",
        "patchSetId": 10
      },
      "lineNbr": 774,
      "author": {
        "id": 1007112
      },
      "writtenOn": "2016-04-29T03:17:19Z",
      "side": 1,
      "message": "My comment is when the operation is as follows.\n1. neutron bgp_speaker_create without router_id.\n2. neutron bgp-peer-create peer1\n3. neutron bgp-peer-create peer2\n4. neutron bgp-speaker-peer-add peer1\n5. neutron bgp-speaker-peer-add peer2\n6. neutron bgp-speaker-network-add ext-net\n\nIn this case, I assume that router is located in procedure 6.\nMultiple peers are already related to a bgp_speaker at this time.\nIf we accomplish informing to backend only once, plugin should send multiple peers to backend.\nI wonder it should be \"add_bgp_peers\", not \"add_bgp_peer\".\n\nBy the way, let me confirm.\nDid you suggest that plugin should send \"bgp_speaker_update\" with \"add_network_id\" when interface is attached to router?",
      "parentUuid": "baa041b7_34fa4176",
      "range": {
        "startLine": 774,
        "startChar": 1,
        "endLine": 774,
        "endChar": 49
      },
      "revId": "563c30d1763de070a93c98a6e77e8661684ce651",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_2c8b15c5",
        "filename": "docs/neutron_translation.md",
        "patchSetId": 10
      },
      "lineNbr": 774,
      "author": {
        "id": 1002740
      },
      "writtenOn": "2016-04-30T13:51:08Z",
      "side": 1,
      "message": "It\u0027s true, we need to send a list of BGP peers.  I will change it to add_bgp_peers.\n\nAs for router interface, I don\u0027t think it is necessary for the plugin to do anything extra.  MidoNet should be able to add a new route based on what\u0027s already stored in Zookeeper.",
      "parentUuid": "baa041b7_8a456871",
      "range": {
        "startLine": 774,
        "startChar": 1,
        "endLine": 774,
        "endChar": 49
      },
      "revId": "563c30d1763de070a93c98a6e77e8661684ce651",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_ecabed1b",
        "filename": "docs/neutron_translation.md",
        "patchSetId": 10
      },
      "lineNbr": 774,
      "author": {
        "id": 1002740
      },
      "writtenOn": "2016-04-30T14:41:47Z",
      "side": 1,
      "message": "I think the input should look like this:\n\n{\"id\": \u003cbgp_speaker_id\u003e,\n \"routers\": [{\"id\": \u003crouter_id\u003e,\n              \"peers\": [{\"id\": \u003cpeer_id\u003e, ...}, ...],\n              \"networks\": [{\"id\": \u003cnetwork_id\u003e, ...}, ...],\n            ], ...}",
      "parentUuid": "baa041b7_2c8b15c5",
      "range": {
        "startLine": 774,
        "startChar": 1,
        "endLine": 774,
        "endChar": 49
      },
      "revId": "563c30d1763de070a93c98a6e77e8661684ce651",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_5486e513",
        "filename": "docs/neutron_translation.md",
        "patchSetId": 10
      },
      "lineNbr": 812,
      "author": {
        "id": 1007112
      },
      "writtenOn": "2016-04-28T13:48:58Z",
      "side": 1,
      "message": "If bgp_speaker that is related to network and peer is deleted,\nshould plugin request update_bgp_speaker with \"del_network_id\" and \"del_bgp_peer_id\"to backend?\nThen container will be elased by deleting peers on bgp_speaker. \nIn this case, bgp peer and network for deletion can be more than one. This means \"del_network_id\" and \"del_bgp_peer_id\" should be list.\nHow about just sending UUID of bgp_speaker from plugin?",
      "range": {
        "startLine": 812,
        "startChar": 4,
        "endLine": 812,
        "endChar": 10
      },
      "revId": "563c30d1763de070a93c98a6e77e8661684ce651",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_cf9ca2c2",
        "filename": "docs/neutron_translation.md",
        "patchSetId": 10
      },
      "lineNbr": 812,
      "author": {
        "id": 1002740
      },
      "writtenOn": "2016-04-28T16:43:03Z",
      "side": 1,
      "message": "Good point.\n\nThere are cases where a BGP speaker is associated with multiple routers in Neutron.  When a BGP speaker is deleted, we basically need to find these routers in MidoNet and clean up the BGP resources including the containers.\n\nCurrently in networking-midonet bgp spec, we do not keep the router-bgp speaker associations when router-less BGP speaker creation API is called.  I am thinking we should change that.  Just store the router-BGP speaker association in DB, and send the list of associated routers on BGP speaker deletion. \n\nI will update BGP Speaker as follows:\n\n* change \u0027router_id\u0027 -\u003e \u0027add_router_ids\u0027\n* add \u0027del_router_ids\u0027",
      "parentUuid": "baa041b7_5486e513",
      "range": {
        "startLine": 812,
        "startChar": 4,
        "endLine": 812,
        "endChar": 10
      },
      "revId": "563c30d1763de070a93c98a6e77e8661684ce651",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_2a5bfc55",
        "filename": "docs/neutron_translation.md",
        "patchSetId": 10
      },
      "lineNbr": 812,
      "author": {
        "id": 1007112
      },
      "writtenOn": "2016-04-29T03:17:19Z",
      "side": 1,
      "message": "Yes, your suggestion is reasonable considering future.\nProbably we support more than one routers per \"bgp_speaker\".\nBut my suggestion is WHEN bgp_speaker is deleted even though the \"bgp_speaker\" has peers and networks.\nIn this case, how should plugin send information to backend?\nIf we accomplish informing to backend only once, I assume that plugin should send multiple peers and networks for deletion.",
      "parentUuid": "baa041b7_cf9ca2c2",
      "range": {
        "startLine": 812,
        "startChar": 4,
        "endLine": 812,
        "endChar": 10
      },
      "revId": "563c30d1763de070a93c98a6e77e8661684ce651",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_0c8611b9",
        "filename": "docs/neutron_translation.md",
        "patchSetId": 10
      },
      "lineNbr": 812,
      "author": {
        "id": 1002740
      },
      "writtenOn": "2016-04-30T13:51:08Z",
      "side": 1,
      "message": "I was thinking that if we have a list of router IDs, we can simply clean up all the BGP resources in MidoNet.  \n\nI guess the question is, if a user configures BGP using Neutron on a router, and then adds BGP midonet resource outside of Neutron on the same router, when you do BGP speaker deletion, do we need to keep the midonet-only BGP data?   If so, then I think we need something like:\n\n{\"routers\": {\"id\": \u003crouter_id\u003e,\n             \"peer_ids\": [\u003cpeer_id\u003e, ...],\n             \"network_ids\": [\u003cnetwork_id\u003e, ...]}\n\nThoughts?",
      "parentUuid": "baa041b7_2a5bfc55",
      "range": {
        "startLine": 812,
        "startChar": 4,
        "endLine": 812,
        "endChar": 10
      },
      "revId": "563c30d1763de070a93c98a6e77e8661684ce651",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_0005b7ba",
        "filename": "docs/neutron_translation.md",
        "patchSetId": 10
      },
      "lineNbr": 812,
      "author": {
        "id": 1002740
      },
      "writtenOn": "2016-04-30T13:51:08Z",
      "side": 1,
      "message": "Does neutron allow bgp speaker deletion when it has associations?  Well, either way, I think it might be a good idea to implement this so that it gives us a way to \u0027clean up\u0027. \n\nOne limitation of C3PO is that deletion does not let us get the request body.  But it makes sense as that is typically the common case for REST API as well.  We could probably change this though, to facilitate cases like this.\n\nWhile we can locate the container, router and the BGP resources from BGP speaker ID, the problem is the case where a BGP speaker is associated with multiple Quagga containers (this is possible when doing the non-router association case).\n\nIn that case, we need a list o router IDs that BGP speaker is associated with which we currently don\u0027t store in the plugin side (but we could).\n\nAlternatively, if we generate the container ID using xor of bgp speaker ID and router ID, we can also search for the routers or containers from which we want to delete bgp resources from.  Less efficient but simple to do.",
      "parentUuid": "baa041b7_5486e513",
      "range": {
        "startLine": 812,
        "startChar": 4,
        "endLine": 812,
        "endChar": 10
      },
      "revId": "563c30d1763de070a93c98a6e77e8661684ce651",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_74b569ec",
        "filename": "docs/neutron_translation.md",
        "patchSetId": 10
      },
      "lineNbr": 823,
      "author": {
        "id": 1007112
      },
      "writtenOn": "2016-04-28T13:48:58Z",
      "side": 1,
      "message": "I\u0027m confusing because I haven\u0027t understood policy of document for translation.\nCould you please tell me whose \"UPDATE\" is this? neutron or MidoNet?\nIf the answer is MidoNet, it is OK.\n(bgp_peer_delete is issued to neutron, but operation for MidoNet is \"update\")",
      "range": {
        "startLine": 823,
        "startChar": 4,
        "endLine": 823,
        "endChar": 10
      },
      "revId": "563c30d1763de070a93c98a6e77e8661684ce651",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_4fb1b246",
        "filename": "docs/neutron_translation.md",
        "patchSetId": 10
      },
      "lineNbr": 823,
      "author": {
        "id": 1002740
      },
      "writtenOn": "2016-04-28T16:43:03Z",
      "side": 1,
      "message": "This is based on API verb (so this is equivalent to PUT).  This is all MidoNet.  Neutron API is based on proper REST API.  (basically you\u0027ll be calling update method of python-midonetclient, that\u0027s all).",
      "parentUuid": "baa041b7_74b569ec",
      "range": {
        "startLine": 823,
        "startChar": 4,
        "endLine": 823,
        "endChar": 10
      },
      "revId": "563c30d1763de070a93c98a6e77e8661684ce651",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_4a608001",
        "filename": "docs/neutron_translation.md",
        "patchSetId": 10
      },
      "lineNbr": 823,
      "author": {
        "id": 1007112
      },
      "writtenOn": "2016-04-29T03:17:19Z",
      "side": 1,
      "message": "understood. thanks!",
      "parentUuid": "baa041b7_4fb1b246",
      "range": {
        "startLine": 823,
        "startChar": 4,
        "endLine": 823,
        "endChar": 10
      },
      "revId": "563c30d1763de070a93c98a6e77e8661684ce651",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}