{
  "comments": [
    {
      "key": {
        "uuid": "3a6ff13c_fff4d188",
        "filename": "midolman/src/main/scala/org/midonet/midolman/simulation/Pool.scala",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2016-03-15T11:04:47Z",
      "side": 1,
      "message": "nitpick: place this in the line above",
      "range": {
        "startLine": 26,
        "startChar": 27,
        "endLine": 26,
        "endChar": 35
      },
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_9f359d48",
        "filename": "midolman/src/main/scala/org/midonet/midolman/state/FlowState.scala",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2016-03-15T11:04:47Z",
      "side": 1,
      "message": "This should appear after FlowStatePackets.",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 60
      },
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_1f90cd94",
        "filename": "midolman/src/main/scala/org/midonet/midolman/state/NATState.scala",
        "patchSetId": 5
      },
      "lineNbr": 171,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2016-03-15T10:06:54Z",
      "side": 1,
      "message": "when and how are these conversions applied? are there any extra allocations involved?",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_dfdab5e8",
        "filename": "midolman/src/main/scala/org/midonet/midolman/state/NATState.scala",
        "patchSetId": 5
      },
      "lineNbr": 171,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-15T11:16:20Z",
      "side": 1,
      "message": "Those are applied when serializing/deserialiing to/from sbe on the agent (i.e. when pushing and receiving state on the agents). Right, it will allocate a new object... Same for conntrackKey.\n\nI\u0027ll see how I can remove that new allocation (probably duplicating the encoding/decoding code).",
      "parentUuid": "3a6ff13c_1f90cd94",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_7f1701a4",
        "filename": "midolman/src/main/scala/org/midonet/midolman/state/TraceState.scala",
        "patchSetId": 5
      },
      "lineNbr": 94,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2016-03-15T11:04:47Z",
      "side": 1,
      "message": "I have the same question as Duarte for trace state.",
      "range": {
        "startLine": 76,
        "startChar": 4,
        "endLine": 94,
        "endChar": 34
      },
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_bf81794c",
        "filename": "nsdb/src/main/scala/org/midonet/packets/StateKeys.scala",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2016-03-15T10:06:54Z",
      "side": 1,
      "message": "seems awkward for this to be here since it\u0027s agent specific. should be in midolman",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_5f37a5b0",
        "filename": "nsdb/src/main/scala/org/midonet/packets/StateKeys.scala",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-03-15T10:18:15Z",
      "side": 1,
      "message": "It\u0027s the expiration used in cassandra too, no?",
      "parentUuid": "3a6ff13c_bf81794c",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_7f30e156",
        "filename": "nsdb/src/main/scala/org/midonet/packets/StateKeys.scala",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-15T11:16:20Z",
      "side": 1,
      "message": "Yes, it is (FlowStateStorage.scala:214)",
      "parentUuid": "3a6ff13c_5f37a5b0",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_df955589",
        "filename": "nsdb/src/main/scala/org/midonet/packets/StateKeys.scala",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2016-03-15T10:06:54Z",
      "side": 1,
      "message": "isn\u0027t this just the NatKey?",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_9fb03ddf",
        "filename": "nsdb/src/main/scala/org/midonet/packets/StateKeys.scala",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-15T11:16:20Z",
      "side": 1,
      "message": "yeah :/ I need to replicate the data structure because NatKey extends FlowStateKey that extends FlowStateTag that extends BackChannelMessage which is used in simulation... That\u0027s the only way I found to move the FlowStatePackets into nsdb for sharing with cluster without moving the whole agent.\n\nThen have converstions from the agent dto to the storage (cluster dto that does not depend on FlowStateTag.",
      "parentUuid": "3a6ff13c_df955589",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_bf8899e8",
        "filename": "nsdb/src/main/scala/org/midonet/packets/StateKeys.scala",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2016-03-15T11:04:47Z",
      "side": 1,
      "message": "Also include the deviceId?",
      "range": {
        "startLine": 64,
        "startChar": 21,
        "endLine": 64,
        "endChar": 29
      },
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_5fe96519",
        "filename": "nsdb/src/main/scala/org/midonet/packets/StateKeys.scala",
        "patchSetId": 5
      },
      "lineNbr": 93,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2016-03-15T10:06:54Z",
      "side": 1,
      "message": "this is agent specific, shouldn\u0027t really be here",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_ff221100",
        "filename": "nsdb/src/main/scala/org/midonet/packets/StateKeys.scala",
        "patchSetId": 5
      },
      "lineNbr": 93,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-15T11:16:20Z",
      "side": 1,
      "message": "Do you mean the IdleExpiration or the whole TraceState? True, I didn\u0027t look much into flow tracing, I\u0027ll do.",
      "parentUuid": "3a6ff13c_5fe96519",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}