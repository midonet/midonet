{
  "comments": [
    {
      "key": {
        "uuid": "3a6ff13c_fff4d188",
        "filename": "midolman/src/main/scala/org/midonet/midolman/simulation/Pool.scala",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2016-03-15T11:04:47Z",
      "side": 1,
      "message": "nitpick: place this in the line above",
      "range": {
        "startLine": 26,
        "startChar": 27,
        "endLine": 26,
        "endChar": 35
      },
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_9f359d48",
        "filename": "midolman/src/main/scala/org/midonet/midolman/state/FlowState.scala",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2016-03-15T11:04:47Z",
      "side": 1,
      "message": "This should appear after FlowStatePackets.",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 60
      },
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_1f90cd94",
        "filename": "midolman/src/main/scala/org/midonet/midolman/state/NATState.scala",
        "patchSetId": 5
      },
      "lineNbr": 171,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2016-03-15T10:06:54Z",
      "side": 1,
      "message": "when and how are these conversions applied? are there any extra allocations involved?",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_dfdab5e8",
        "filename": "midolman/src/main/scala/org/midonet/midolman/state/NATState.scala",
        "patchSetId": 5
      },
      "lineNbr": 171,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-15T11:16:20Z",
      "side": 1,
      "message": "Those are applied when serializing/deserialiing to/from sbe on the agent (i.e. when pushing and receiving state on the agents). Right, it will allocate a new object... Same for conntrackKey.\n\nI\u0027ll see how I can remove that new allocation (probably duplicating the encoding/decoding code).",
      "parentUuid": "3a6ff13c_1f90cd94",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_7f1701a4",
        "filename": "midolman/src/main/scala/org/midonet/midolman/state/TraceState.scala",
        "patchSetId": 5
      },
      "lineNbr": 94,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2016-03-15T11:04:47Z",
      "side": 1,
      "message": "I have the same question as Duarte for trace state.",
      "range": {
        "startLine": 76,
        "startChar": 4,
        "endLine": 94,
        "endChar": 34
      },
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_7ff38173",
        "filename": "midolman/src/main/scala/org/midonet/midolman/state/TraceState.scala",
        "patchSetId": 5
      },
      "lineNbr": 94,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-15T11:19:50Z",
      "side": 1,
      "message": "It\u0027s the same as NatBinding, etc. Replied there.",
      "parentUuid": "3a6ff13c_7f1701a4",
      "range": {
        "startLine": 76,
        "startChar": 4,
        "endLine": 94,
        "endChar": 34
      },
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_bf81794c",
        "filename": "nsdb/src/main/scala/org/midonet/packets/StateKeys.scala",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2016-03-15T10:06:54Z",
      "side": 1,
      "message": "seems awkward for this to be here since it\u0027s agent specific. should be in midolman",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_5f37a5b0",
        "filename": "nsdb/src/main/scala/org/midonet/packets/StateKeys.scala",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-03-15T10:18:15Z",
      "side": 1,
      "message": "It\u0027s the expiration used in cassandra too, no?",
      "parentUuid": "3a6ff13c_bf81794c",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_7f30e156",
        "filename": "nsdb/src/main/scala/org/midonet/packets/StateKeys.scala",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-15T11:16:20Z",
      "side": 1,
      "message": "Yes, it is (FlowStateStorage.scala:214)",
      "parentUuid": "3a6ff13c_5f37a5b0",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_aa405957",
        "filename": "nsdb/src/main/scala/org/midonet/packets/StateKeys.scala",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2016-03-15T14:18:42Z",
      "side": 1,
      "message": "oh, that\u0027s wrong. expires after should be used by the ingress host to determine how long the piece of flow state lives. everything else, including cassandra, should expire state and flows after 1 minute, and get refreshed data from the ingress host.",
      "parentUuid": "3a6ff13c_7f30e156",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_a525eaac",
        "filename": "nsdb/src/main/scala/org/midonet/packets/StateKeys.scala",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2016-03-15T14:33:34Z",
      "side": 1,
      "message": "actually, scratch that.\n\nthe expiresAfter value refers to the grace time the piece of flow state will remain alive after all flows unreference it. so, the C* expiration should not be expiresAfter, but expiresAfter + the flow expiration time.",
      "parentUuid": "3a6ff13c_aa405957",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_c553c66a",
        "filename": "nsdb/src/main/scala/org/midonet/packets/StateKeys.scala",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-15T16:18:54Z",
      "side": 1,
      "message": "So we have a bug in the current implementation, we specify a TTL for cassandra entries to only expiresAfter. Where can I find the flow expiration time?\n\nOh... maybe we need to add the expiration time also to the sbe so the cluster knows what\u0027s the actual expiration time...",
      "parentUuid": "3a6ff13c_a525eaac",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_df955589",
        "filename": "nsdb/src/main/scala/org/midonet/packets/StateKeys.scala",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2016-03-15T10:06:54Z",
      "side": 1,
      "message": "isn\u0027t this just the NatKey?",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_9fb03ddf",
        "filename": "nsdb/src/main/scala/org/midonet/packets/StateKeys.scala",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-15T11:16:20Z",
      "side": 1,
      "message": "yeah :/ I need to replicate the data structure because NatKey extends FlowStateKey that extends FlowStateTag that extends BackChannelMessage which is used in simulation... That\u0027s the only way I found to move the FlowStatePackets into nsdb for sharing with cluster without moving the whole agent.\n\nThen have converstions from the agent dto to the storage (cluster dto that does not depend on FlowStateTag.",
      "parentUuid": "3a6ff13c_df955589",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_bf8899e8",
        "filename": "nsdb/src/main/scala/org/midonet/packets/StateKeys.scala",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2016-03-15T11:04:47Z",
      "side": 1,
      "message": "Also include the deviceId?",
      "range": {
        "startLine": 64,
        "startChar": 21,
        "endLine": 64,
        "endChar": 29
      },
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_9fe83d7e",
        "filename": "nsdb/src/main/scala/org/midonet/packets/StateKeys.scala",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-15T11:19:50Z",
      "side": 1,
      "message": "It\u0027s replicating the information on the NatKey object of the agent side. I wonder why it wasn\u0027t there in the first place (if it was a mistake, we can add it now, but not sure if it was intentional).",
      "parentUuid": "3a6ff13c_bf8899e8",
      "range": {
        "startLine": 64,
        "startChar": 21,
        "endLine": 64,
        "endChar": 29
      },
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_5fe96519",
        "filename": "nsdb/src/main/scala/org/midonet/packets/StateKeys.scala",
        "patchSetId": 5
      },
      "lineNbr": 93,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2016-03-15T10:06:54Z",
      "side": 1,
      "message": "this is agent specific, shouldn\u0027t really be here",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_ff221100",
        "filename": "nsdb/src/main/scala/org/midonet/packets/StateKeys.scala",
        "patchSetId": 5
      },
      "lineNbr": 93,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-15T11:16:20Z",
      "side": 1,
      "message": "Do you mean the IdleExpiration or the whole TraceState? True, I didn\u0027t look much into flow tracing, I\u0027ll do.",
      "parentUuid": "3a6ff13c_5fe96519",
      "revId": "53e6031c5d4c99a90386f45140a41dc62fdc39ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}