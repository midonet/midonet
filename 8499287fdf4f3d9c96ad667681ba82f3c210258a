{
  "comments": [
    {
      "key": {
        "uuid": "5aa745d1_8def16b0",
        "filename": "midolman/src/main/scala/org/midonet/midolman/simulation/DhcpImpl.scala",
        "patchSetId": 1
      },
      "lineNbr": 545,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2016-12-09T03:50:01Z",
      "side": 1,
      "message": "does this need to be synchronous?",
      "revId": "8499287fdf4f3d9c96ad667681ba82f3c210258a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aa745d1_085d34e9",
        "filename": "midolman/src/main/scala/org/midonet/midolman/simulation/DhcpImpl.scala",
        "patchSetId": 1
      },
      "lineNbr": 545,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-12-09T08:52:00Z",
      "side": 1,
      "message": "it shouldn\u0027t be, but because the continuation here should done in the packet worker thread it can\u0027t complete asynchronously here (that thread does not allow enqueuing work items)\n\nthe solution is to have the Dhcp object cached in the virtual topology, as suggested by a comment in DhcpConfigFromNsdb, and use tryGet to fetch it (in case the object has to be loaded from storage, the simulation for the current packet is interrupted and resumed later)\n\nhowever, this is a bigger change and maybe should be done separately",
      "parentUuid": "5aa745d1_8def16b0",
      "revId": "8499287fdf4f3d9c96ad667681ba82f3c210258a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aa745d1_bead5a33",
        "filename": "midolman/src/main/scala/org/midonet/midolman/simulation/DhcpImpl.scala",
        "patchSetId": 1
      },
      "lineNbr": 545,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2016-12-09T15:08:18Z",
      "side": 1,
      "message": "thank you for explanation.",
      "parentUuid": "5aa745d1_085d34e9",
      "revId": "8499287fdf4f3d9c96ad667681ba82f3c210258a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}