{
  "comments": [
    {
      "key": {
        "uuid": "9ad9bd40_15dccd11",
        "filename": "midolman/src/main/java/org/midonet/midolman/rules/MirrorRule.java",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-14T11:04:34Z",
      "side": 1,
      "message": "since the mirroring is handled in ctx.applyMirroring() I wonder if we need the MIRROR result here and we could just return CONTINUE so as to make it transparent to the rest of the simulation.",
      "revId": "15c171041bf1bd925ab093c4006548b7b6975abd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_d53fc523",
        "filename": "midolman/src/main/java/org/midonet/midolman/simulation/Chain.scala",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-14T11:04:34Z",
      "side": 1,
      "message": "why is apply quoted?",
      "revId": "15c171041bf1bd925ab093c4006548b7b6975abd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_b5396143",
        "filename": "midolman/src/main/java/org/midonet/midolman/simulation/Chain.scala",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-14T11:04:34Z",
      "side": 1,
      "message": "note for a separate patch:\n\nmake the list buffer just an int, move it to packet context and use it to globally track traversed devices, as we a have separate \u0027loop\u0027 detector in the coordinator. The packet context could unify both and avoid the garbage.",
      "revId": "15c171041bf1bd925ab093c4006548b7b6975abd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_f52129fd",
        "filename": "midolman/src/main/java/org/midonet/midolman/simulation/Chain.scala",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-14T11:04:34Z",
      "side": 1,
      "message": "checkpointAction is new, vs the old java implementation, can you document it?",
      "revId": "15c171041bf1bd925ab093c4006548b7b6975abd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_354551b3",
        "filename": "midolman/src/main/java/org/midonet/midolman/simulation/Chain.scala",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-14T11:04:34Z",
      "side": 1,
      "message": "we can stop using \u0027jlog\u0027 now that it\u0027s in Scala.",
      "revId": "15c171041bf1bd925ab093c4006548b7b6975abd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_5513b5b7",
        "filename": "midolman/src/main/java/org/midonet/midolman/simulation/Chain.scala",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-14T11:04:34Z",
      "side": 1,
      "message": "note for a separate patch: See my comment above.",
      "revId": "15c171041bf1bd925ab093c4006548b7b6975abd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_7516f9a8",
        "filename": "midolman/src/main/java/org/midonet/midolman/simulation/Chain.scala",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-14T11:04:34Z",
      "side": 1,
      "message": "note for a separate patch: see my comment above.",
      "revId": "15c171041bf1bd925ab093c4006548b7b6975abd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_b51081a9",
        "filename": "midolman/src/main/java/org/midonet/midolman/simulation/Chain.scala",
        "patchSetId": 2
      },
      "lineNbr": 145,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-14T11:04:34Z",
      "side": 1,
      "message": "ditto about quotes.",
      "revId": "15c171041bf1bd925ab093c4006548b7b6975abd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_d526e515",
        "filename": "midolman/src/main/java/org/midonet/midolman/simulation/Chain.scala",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-14T11:04:34Z",
      "side": 1,
      "message": "typo: checkpoint.",
      "revId": "15c171041bf1bd925ab093c4006548b7b6975abd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_084cb46f",
        "filename": "midolman/src/main/java/org/midonet/midolman/simulation/Chain.scala",
        "patchSetId": 2
      },
      "lineNbr": 157,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-14T14:26:36Z",
      "side": 1,
      "message": "shouldn\u0027t we do this regardless of whether dstPort is null?",
      "revId": "15c171041bf1bd925ab093c4006548b7b6975abd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_e87230e2",
        "filename": "midolman/src/main/java/org/midonet/midolman/simulation/Chain.scala",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-14T14:30:53Z",
      "side": 1,
      "message": "I\u0027m really not understanding why checkpointAction is needed, can you explain? (I also followed up on the email thread, please check that out).\n\nAlso, I don\u0027t understand why MirrorRule calls pktContext.applyMirrorring() and yet we need special code and this checkpoing here. I think i\u0027m missing something, but it looks to me that if the rule itself is calling into the packet context to apply the mirroring, there should be nothing at all left to do out here.",
      "revId": "15c171041bf1bd925ab093c4006548b7b6975abd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_0863d4dc",
        "filename": "midolman/src/main/scala/org/midonet/midolman/FlowController.scala",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-14T14:26:36Z",
      "side": 1,
      "message": "i don\u0027t understand why we use currentMatch here, it looks like this will be used as the match in the flow rule we install in the datapath. And that one should really be the real original match, otherwise packets will miss it.",
      "revId": "15c171041bf1bd925ab093c4006548b7b6975abd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_489cfcc0",
        "filename": "midolman/src/main/scala/org/midonet/midolman/FlowTranslator.scala",
        "patchSetId": 2
      },
      "lineNbr": 245,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-14T14:26:36Z",
      "side": 1,
      "message": "...or was inactive.",
      "revId": "15c171041bf1bd925ab093c4006548b7b6975abd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_15212dfb",
        "filename": "midolman/src/main/scala/org/midonet/midolman/simulation/Coordinator.scala",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-14T11:04:34Z",
      "side": 1,
      "message": "can you explain this with a comment?",
      "revId": "15c171041bf1bd925ab093c4006548b7b6975abd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_681620a9",
        "filename": "midolman/src/main/scala/org/midonet/midolman/simulation/Coordinator.scala",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-14T14:26:36Z",
      "side": 1,
      "message": "this line was less than 80 chars long, why break it?",
      "revId": "15c171041bf1bd925ab093c4006548b7b6975abd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_a85e6874",
        "filename": "midolman/src/main/scala/org/midonet/midolman/simulation/Coordinator.scala",
        "patchSetId": 2
      },
      "lineNbr": 220,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-14T14:26:36Z",
      "side": 1,
      "message": "ditto, this is not our coding style.",
      "revId": "15c171041bf1bd925ab093c4006548b7b6975abd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_4896bcf1",
        "filename": "midolman/src/main/scala/org/midonet/midolman/simulation/PacketContext.scala",
        "patchSetId": 2
      },
      "lineNbr": 242,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-14T14:26:36Z",
      "side": 1,
      "message": "i think this name is unfortunate as \u0027current\u0027 is the actual meaning that \u0027wcmatch\u0027 had in our minds up until today.\n\nwcmatch was \"what the packet looks like at this point in the topology, ___currently___\".\n\nHowever you are using current as \"the current base match from which to calculate diffs for actions\".\n\nIn otherwords: moving from origMatch/wcmatch  towards currentMatch/wcmatch is actually misleading, let\u0027s try to find better names.",
      "revId": "15c171041bf1bd925ab093c4006548b7b6975abd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_288fb8cd",
        "filename": "midolman/src/main/scala/org/midonet/midolman/simulation/PacketContext.scala",
        "patchSetId": 2
      },
      "lineNbr": 281,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-14T14:26:36Z",
      "side": 1,
      "message": "I believe this should not be currentMatch but the real original match, because the simulation is being restarted from zero.",
      "revId": "15c171041bf1bd925ab093c4006548b7b6975abd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_15c5ad3b",
        "filename": "midolman/src/test/scala/org/midonet/midolman/rules/PortMirroringTest.scala",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-14T10:36:39Z",
      "side": 1,
      "message": "i\u0027d much rather have these titles in a longer line than split like this.",
      "revId": "15c171041bf1bd925ab093c4006548b7b6975abd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_b5eb21af",
        "filename": "midolman/src/test/scala/org/midonet/midolman/rules/PortMirroringTest.scala",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-14T10:43:06Z",
      "side": 1,
      "message": "this assertion looks weak to me. We should assert on the actual actions.",
      "revId": "15c171041bf1bd925ab093c4006548b7b6975abd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}