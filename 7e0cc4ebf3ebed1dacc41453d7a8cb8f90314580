{
  "comments": [
    {
      "key": {
        "uuid": "9ad9bd40_af41173b",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 11
      },
      "lineNbr": 179,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-13T09:56:13Z",
      "side": 1,
      "message": "what about the port subscription?",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_afc4b792",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 11
      },
      "lineNbr": 179,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-07-13T10:20:37Z",
      "side": 1,
      "message": "The port notifications arrive on the same observable. That it the BGP mapper watches the port in order to update the BGP peers/routes, then the same notifications are forwarded on the same observable too.",
      "parentUuid": "9ad9bd40_af41173b",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_8faff393",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 11
      },
      "lineNbr": 179,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-13T10:30:20Z",
      "side": 1,
      "message": "got it.",
      "parentUuid": "9ad9bd40_afc4b792",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_4f86cb66",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 11
      },
      "lineNbr": 246,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-13T09:56:13Z",
      "side": 1,
      "message": "weird, make a set?",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_0f684386",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 11
      },
      "lineNbr": 246,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-07-13T10:20:37Z",
      "side": 1,
      "message": "this was kept a map, to distinguish between being aware of a learned route and having it published in storage.\n\nI guess the difference comes from not having an id for learned routes in v2 (see the comment for syncPeerRoutes below). if you think that it\u0027s necessary to add one, then these changes are not needed.",
      "parentUuid": "9ad9bd40_4f86cb66",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_cf773b3a",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 11
      },
      "lineNbr": 246,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-13T10:30:20Z",
      "side": 1,
      "message": "would it make more sense as a Map[Route, Boolean]?",
      "parentUuid": "9ad9bd40_0f684386",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_8bdbfa4d",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 11
      },
      "lineNbr": 246,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-07-30T12:58:17Z",
      "side": 1,
      "message": "The value Route differs form the key Route in that has the weight received from zebra (the weight is unknown when the key is added to the map).\n\nThe value route (with the weight) is passed to forgetLearnedRoute to prevent creating a new one (the key route + weight). This would be needed because the v2 API must match all fields.",
      "parentUuid": "9ad9bd40_cf773b3a",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_0f5e8312",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 11
      },
      "lineNbr": 310,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-13T09:56:13Z",
      "side": 1,
      "message": "does this mean this actor will remain up but disabled forever? shouldn\u0027t the actor be stopped?\n\nin which cases does an onError happen? is it recoverable?",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_cfe2db00",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 11
      },
      "lineNbr": 310,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-07-13T10:20:37Z",
      "side": 1,
      "message": "You are right, maybe the actor should be stopped.\n\nonError happens when the zk connection is lost, or there is any other unexpected exception in the processing path (e.g. corrupt data in zk/serialization error, corrupt internal state, bugs, etc).\n\nWe can add recovery code for all/certain exceptions if needed, either with onErrorResumeNext on the original observable, or by resubscribing to a new observable here, and updating the subscription.",
      "parentUuid": "9ad9bd40_0f5e8312",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_0f9be372",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 11
      },
      "lineNbr": 310,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-13T10:30:20Z",
      "side": 1,
      "message": "is \"zk connection lost\u0027 temporary or fatal (session lost, reboot upcoming)?\n\nIn any case, the lifecycle of the actor should be \"correct\", so yes, I\u0027d stop, restart or resubscribe upon errors accordingly.",
      "parentUuid": "9ad9bd40_cfe2db00",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_6bc15653",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 11
      },
      "lineNbr": 310,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-07-30T12:58:17Z",
      "side": 1,
      "message": "With the latest changes, the errors from the port BGP observable are also handled by the RoutingManagerActor. Here, we ensure bgpd is stopped.",
      "parentUuid": "9ad9bd40_0f9be372",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_2f9c27c0",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 11
      },
      "lineNbr": 314,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-13T09:56:13Z",
      "side": 1,
      "message": "ditto.",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_eff15fce",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 11
      },
      "lineNbr": 314,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-07-13T10:20:37Z",
      "side": 1,
      "message": "This should happen when the port is deleted.",
      "parentUuid": "9ad9bd40_2f9c27c0",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_4f8c0b36",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 11
      },
      "lineNbr": 314,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-13T10:30:20Z",
      "side": 1,
      "message": "then we should stop the actor, right? It\u0027s parent should learn how to handle it.",
      "parentUuid": "9ad9bd40_eff15fce",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_8bb21a04",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 11
      },
      "lineNbr": 314,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-07-30T12:58:17Z",
      "side": 1,
      "message": "The RoutingManagerActor also processes the errors and should stop the actor.",
      "parentUuid": "9ad9bd40_4f8c0b36",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_8f861312",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 11
      },
      "lineNbr": 315,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-13T10:30:20Z",
      "side": 1,
      "message": "which would make this flag redundant.",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_8b805af8",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 11
      },
      "lineNbr": 315,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-07-30T12:58:17Z",
      "side": 1,
      "message": "Agree, flag removed.",
      "parentUuid": "9ad9bd40_8f861312",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_8f80d347",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 11
      },
      "lineNbr": 415,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-13T09:56:13Z",
      "side": 1,
      "message": "this is now doing full object comparison as opposed to UUID comparison, that worries me.",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_8f5c53ef",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 11
      },
      "lineNbr": 415,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-07-13T10:20:37Z",
      "side": 1,
      "message": "To save memory for learned routes, we haven\u0027t added a route id in v2 (see class RoutingTableStorage for rationale, discussion and benchmark results). We can add it if needed but that would increase the zk client buffer requirements/bandwidth when reading a routing table by ~23.5%.\n\nHence, in v2 there is no id to compare. That is also the reason why the map[Route, UUID] was changed to a map[Route, Route]",
      "parentUuid": "9ad9bd40_8f80d347",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_af7cb721",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingHandler.scala",
        "patchSetId": 11
      },
      "lineNbr": 415,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-13T10:30:20Z",
      "side": 1,
      "message": "got it.",
      "parentUuid": "9ad9bd40_8f5c53ef",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_0c54d11f",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingManagerActor.scala",
        "patchSetId": 11
      },
      "lineNbr": 81,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2015-07-13T09:34:12Z",
      "side": 1,
      "message": "new... is a bad name, use something more specific.",
      "range": {
        "startLine": 81,
        "startChar": 36,
        "endLine": 81,
        "endChar": 53
      },
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_cf0e5b32",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingManagerActor.scala",
        "patchSetId": 11
      },
      "lineNbr": 81,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-07-13T09:47:27Z",
      "side": 1,
      "message": "How about using v1 and v2, the same as in the HostService?",
      "parentUuid": "9ad9bd40_0c54d11f",
      "range": {
        "startLine": 81,
        "startChar": 36,
        "endLine": 81,
        "endChar": 53
      },
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_ec588d58",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingManagerActor.scala",
        "patchSetId": 11
      },
      "lineNbr": 89,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2015-07-13T09:34:12Z",
      "side": 1,
      "message": "this looks dodgy. It seems that the UUID is not used at all in the routing handler.",
      "range": {
        "startLine": 89,
        "startChar": 17,
        "endLine": 89,
        "endChar": 27
      },
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_0f3043e7",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingManagerActor.scala",
        "patchSetId": 11
      },
      "lineNbr": 89,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-07-13T09:47:27Z",
      "side": 1,
      "message": "There is no id for learned routes in the new architecture. This is kept here for compatibility with the dataClient, which does return an id for newly create learned route, and with these changes the id is mainly used to determine whether a route was successfully written to the mock dataClient.\n\nWhen using dataClient, the underlying RouterZkManager.create(...) return a random UUID, which is emulated here.",
      "parentUuid": "9ad9bd40_ec588d58",
      "range": {
        "startLine": 89,
        "startChar": 17,
        "endLine": 89,
        "endChar": 27
      },
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_2c327510",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingManagerActor.scala",
        "patchSetId": 11
      },
      "lineNbr": 92,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2015-07-13T09:34:12Z",
      "side": 1,
      "message": "await? surely there\u0027s a more deterministic way to see if it completed?",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_6f58ef32",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingManagerActor.scala",
        "patchSetId": 11
      },
      "lineNbr": 92,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-07-13T09:47:27Z",
      "side": 1,
      "message": "I\u0027m not sure if I understood the comment: can you elaborate a bit?",
      "parentUuid": "9ad9bd40_2c327510",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_afdd9772",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingManagerActor.scala",
        "patchSetId": 11
      },
      "lineNbr": 92,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-13T09:56:13Z",
      "side": 1,
      "message": "I agree, those \u00275 seconds\u0027 look fishy.",
      "parentUuid": "9ad9bd40_6f58ef32",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_8fb8d3e6",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingManagerActor.scala",
        "patchSetId": 11
      },
      "lineNbr": 92,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-07-13T10:20:37Z",
      "side": 1,
      "message": "Ok, got it.",
      "parentUuid": "9ad9bd40_afdd9772",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_6c139d66",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingManagerActor.scala",
        "patchSetId": 11
      },
      "lineNbr": 94,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2015-07-13T09:34:12Z",
      "side": 1,
      "message": "there\u0027s nothing here to distinguish learned routes and statically defined routes, so syncPeerRoutes will end up deleting them.",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_0f47634c",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingManagerActor.scala",
        "patchSetId": 11
      },
      "lineNbr": 94,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-07-13T09:47:27Z",
      "side": 1,
      "message": "In v2, the learned routes are stored separately from the static ones (i.e. topology). All routes returned from the state storage are learned routes, since the agent does not modify the zoom topology.",
      "parentUuid": "9ad9bd40_6c139d66",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_efe79f3e",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingManagerActor.scala",
        "patchSetId": 11
      },
      "lineNbr": 95,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-07-13T09:56:13Z",
      "side": 1,
      "message": "ditto wrt await().",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_afce7781",
        "filename": "midolman/src/main/scala/org/midonet/midolman/routingprotocols/RoutingManagerActor.scala",
        "patchSetId": 11
      },
      "lineNbr": 95,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-07-13T10:20:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ad9bd40_efe79f3e",
      "revId": "7e0cc4ebf3ebed1dacc41453d7a8cb8f90314580",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}