{
  "comments": [
    {
      "key": {
        "uuid": "7a1969be_8dac2ca2",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/Aggregator.scala",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-02-25T17:38:56Z",
      "side": 1,
      "message": "That\u0027s a nit but should this go to the next line?",
      "range": {
        "startLine": 69,
        "startChar": 12,
        "endLine": 69,
        "endChar": 14
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_489ce2c0",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/Aggregator.scala",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 1002750
      },
      "writtenOn": "2015-02-25T18:24:04Z",
      "side": 1,
      "message": "Then it should also start one line below the double \u0027*\u0027...\nMaybe it is not fully standard, but it is more compact (I copied the style from one of master Galo\u0027s files, anyway :-p)",
      "parentUuid": "7a1969be_8dac2ca2",
      "range": {
        "startLine": 69,
        "startChar": 12,
        "endLine": 69,
        "endChar": 14
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_f593e64c",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/Aggregator.scala",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-26T10:44:05Z",
      "side": 1,
      "message": "I thought Scala style ok\u0027d this, but it actually recommends a new line. But I don\u0027t care really, I\u0027m ok to merge as it is.",
      "parentUuid": "7a1969be_489ce2c0",
      "range": {
        "startLine": 69,
        "startChar": 12,
        "endLine": 69,
        "endChar": 14
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_359e1e57",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/Aggregator.scala",
        "patchSetId": 7
      },
      "lineNbr": 72,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-26T10:44:05Z",
      "side": 1,
      "message": "Why not move this down into the IF where it gets used instead of the lazy?",
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_d5dcea14",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/Aggregator.scala",
        "patchSetId": 7
      },
      "lineNbr": 72,
      "author": {
        "id": 1002750
      },
      "writtenOn": "2015-02-26T11:11:03Z",
      "side": 1,
      "message": "Good point. It will be probably easier to read",
      "parentUuid": "7a1969be_359e1e57",
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_1884f95c",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/Aggregator.scala",
        "patchSetId": 7
      },
      "lineNbr": 72,
      "author": {
        "id": 1002750
      },
      "writtenOn": "2015-02-26T15:12:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a1969be_d5dcea14",
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_cd958441",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/Aggregator.scala",
        "patchSetId": 7
      },
      "lineNbr": 84,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-02-25T17:38:56Z",
      "side": 1,
      "message": "sources.putIfAbsent(key, SourceControl(terminator, owner)) eq null\n\nCurrently containsKey may evaluate to false and you call collector.onNext even though the key was added slightly after the check. Isn\u0027t that a problem?",
      "range": {
        "startLine": 84,
        "startChar": 12,
        "endLine": 84,
        "endChar": 37
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_08baea22",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/Aggregator.scala",
        "patchSetId": 7
      },
      "lineNbr": 84,
      "author": {
        "id": 1002750
      },
      "writtenOn": "2015-02-25T18:24:04Z",
      "side": 1,
      "message": "No, it\u0027s not a problem because this is inside a \u0027synchronized\u0027 block. But as everyone is asking the same, it means that, at least, I should put a comment clarifying it :-)\nDone.",
      "parentUuid": "7a1969be_cd958441",
      "range": {
        "startLine": 84,
        "startChar": 12,
        "endLine": 84,
        "endChar": 37
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_95a432a7",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/Aggregator.scala",
        "patchSetId": 7
      },
      "lineNbr": 94,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-26T10:44:05Z",
      "side": 1,
      "message": "this doesn\u0027t need to be synchronized, no?",
      "range": {
        "startLine": 94,
        "startChar": 32,
        "endLine": 94,
        "endChar": 39
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_b5ee8eb2",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/Aggregator.scala",
        "patchSetId": 7
      },
      "lineNbr": 94,
      "author": {
        "id": 1002750
      },
      "writtenOn": "2015-02-26T11:11:03Z",
      "side": 1,
      "message": "Yes, I think it has to be... There is a small window for race condition with \u0027add\u0027, and also with \u0027dispose\u0027 (in the case the \u0027dispose\u0027 coincides in time with an automatic drop due to observable completion). It could be avoided with some extra checking, but it would make the code less readable and I don\u0027t think the potential performance impact requires it.",
      "parentUuid": "7a1969be_95a432a7",
      "range": {
        "startLine": 94,
        "startChar": 32,
        "endLine": 94,
        "endChar": 39
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_d81ee162",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/Aggregator.scala",
        "patchSetId": 7
      },
      "lineNbr": 94,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-26T12:54:07Z",
      "side": 1,
      "message": "But the sources map should be thread safe, you\u0027re just doing a .remove here so even if other threads access the map concurrently there shouldn\u0027t be any breakage, no? The only problem I can see is that 2 threads .connect() on the terminator, but afaik that doesn\u0027t cause any problems in a ConnectableObservable",
      "parentUuid": "7a1969be_b5ee8eb2",
      "range": {
        "startLine": 94,
        "startChar": 32,
        "endLine": 94,
        "endChar": 39
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_587e716c",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/Aggregator.scala",
        "patchSetId": 7
      },
      "lineNbr": 94,
      "author": {
        "id": 1002750
      },
      "writtenOn": "2015-02-26T15:12:55Z",
      "side": 1,
      "message": "Mmm... you are right. I\u0027ve removed the \u0027synchronized\u0027. The only tricky part is making sure the \u0027add\u0027 is rolled back if the \u0027disposed\u0027 flag is set between the \u0027disposed\u0027 check and the actual insertion in the concurrenthashmap. There could also be minor issues with observable behavior (e.g. it could be possible that an onNext occurs after onComplete), but they should have no consequences in the rest of the code (a bit ugly, though...)",
      "parentUuid": "7a1969be_d81ee162",
      "range": {
        "startLine": 94,
        "startChar": 32,
        "endLine": 94,
        "endChar": 39
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_8d138c65",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/ServerState.scala",
        "patchSetId": 7
      },
      "lineNbr": 79,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-02-25T18:01:12Z",
      "side": 1,
      "message": "Are the braces needed?",
      "range": {
        "startLine": 79,
        "startChar": 33,
        "endLine": 79,
        "endChar": 34
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_08e82a0f",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/ServerState.scala",
        "patchSetId": 7
      },
      "lineNbr": 79,
      "author": {
        "id": 1002750
      },
      "writtenOn": "2015-02-25T18:24:04Z",
      "side": 1,
      "message": "I think the parenthesis are not needed, but the braces are...\nDone.",
      "parentUuid": "7a1969be_8d138c65",
      "range": {
        "startLine": 79,
        "startChar": 33,
        "endLine": 79,
        "endChar": 34
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_6d161057",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/Session.scala",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-02-25T18:01:12Z",
      "side": 1,
      "message": "Do all these methods have Unit return type?",
      "range": {
        "startLine": 34,
        "startChar": 58,
        "endLine": 34,
        "endChar": 59
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_88cb7aa4",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/Session.scala",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 1002750
      },
      "writtenOn": "2015-02-25T18:24:04Z",
      "side": 1,
      "message": "In practice yes, but it is not enforced (I guess that a particular implementation might choose to return something). Do you think it is better to specify it?",
      "parentUuid": "7a1969be_6d161057",
      "range": {
        "startLine": 34,
        "startChar": 58,
        "endLine": 34,
        "endChar": 59
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_4d7a34f2",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/SessionInventory.scala",
        "patchSetId": 7
      },
      "lineNbr": 544,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-02-25T17:38:56Z",
      "side": 1,
      "message": "You can use makeFunc1 and directly pass the function.",
      "range": {
        "startLine": 544,
        "startChar": 20,
        "endLine": 544,
        "endChar": 29
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_2886c665",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/SessionInventory.scala",
        "patchSetId": 7
      },
      "lineNbr": 544,
      "author": {
        "id": 1002750
      },
      "writtenOn": "2015-02-25T18:24:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a1969be_4d7a34f2",
      "range": {
        "startLine": 544,
        "startChar": 20,
        "endLine": 544,
        "endChar": 29
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_4dbd1468",
        "filename": "brain/midonet-brain/src/test/scala/org/midonet/brain/services/topology/server/SessionInventoryTest.scala",
        "patchSetId": 7
      },
      "lineNbr": 311,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-02-25T17:38:56Z",
      "side": 1,
      "message": "Test that updates after",
      "range": {
        "startLine": 311,
        "startChar": 8,
        "endLine": 311,
        "endChar": 34
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_a891169c",
        "filename": "brain/midonet-brain/src/test/scala/org/midonet/brain/services/topology/server/SessionInventoryTest.scala",
        "patchSetId": 7
      },
      "lineNbr": 311,
      "author": {
        "id": 1002750
      },
      "writtenOn": "2015-02-25T18:24:04Z",
      "side": 1,
      "message": "I guess you mean the scenario title is unclear...\nChanged it to \u0027watch pre-created entities\u0027.",
      "parentUuid": "7a1969be_4dbd1468",
      "range": {
        "startLine": 311,
        "startChar": 8,
        "endLine": 311,
        "endChar": 34
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_8db70c86",
        "filename": "cluster/src/main/proto/topology_api.proto",
        "patchSetId": 7
      },
      "lineNbr": 70,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-02-25T17:38:56Z",
      "side": 1,
      "message": "an",
      "range": {
        "startLine": 70,
        "startChar": 39,
        "endLine": 70,
        "endChar": 40
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_08914a99",
        "filename": "cluster/src/main/proto/topology_api.proto",
        "patchSetId": 7
      },
      "lineNbr": 70,
      "author": {
        "id": 1002750
      },
      "writtenOn": "2015-02-25T18:24:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a1969be_8db70c86",
      "range": {
        "startLine": 70,
        "startChar": 39,
        "endLine": 70,
        "endChar": 40
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_cdb0e48d",
        "filename": "cluster/src/main/proto/topology_api.proto",
        "patchSetId": 7
      },
      "lineNbr": 72,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-02-25T17:38:56Z",
      "side": 1,
      "message": "I guess this can be removed, the explanation that follows is more precise, right?",
      "range": {
        "startLine": 71,
        "startChar": 41,
        "endLine": 72,
        "endChar": 22
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_e88b0e66",
        "filename": "cluster/src/main/proto/topology_api.proto",
        "patchSetId": 7
      },
      "lineNbr": 72,
      "author": {
        "id": 1002750
      },
      "writtenOn": "2015-02-25T18:24:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a1969be_cdb0e48d",
      "range": {
        "startLine": 71,
        "startChar": 41,
        "endLine": 72,
        "endChar": 22
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_2d67f826",
        "filename": "cluster/src/main/proto/topology_api.proto",
        "patchSetId": 7
      },
      "lineNbr": 83,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-02-25T17:38:56Z",
      "side": 1,
      "message": "to?",
      "range": {
        "startLine": 83,
        "startChar": 66,
        "endLine": 83,
        "endChar": 68
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_c8dd7272",
        "filename": "cluster/src/main/proto/topology_api.proto",
        "patchSetId": 7
      },
      "lineNbr": 83,
      "author": {
        "id": 1002750
      },
      "writtenOn": "2015-02-25T18:24:04Z",
      "side": 1,
      "message": "Maybe. Changed",
      "parentUuid": "7a1969be_2d67f826",
      "range": {
        "startLine": 83,
        "startChar": 66,
        "endLine": 83,
        "endChar": 68
      },
      "revId": "4b03540f3ecc82168f29efbab49f5e144c6ba34f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}