{
  "comments": [
    {
      "key": {
        "uuid": "fafc7978_f8fe826a",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/VirtualTopologyActor.scala",
        "patchSetId": 4
      },
      "lineNbr": 213,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-02T17:06:33Z",
      "side": 1,
      "message": "why not move this case below and just do throw new Device...? This also seems to conflict with the generic case below.",
      "revId": "9be2d1cdc501eaef6863102f87e7659933d64923",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_c95e4ee9",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/VirtualTopologyActor.scala",
        "patchSetId": 4
      },
      "lineNbr": 213,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2014-12-03T15:22:04Z",
      "side": 1,
      "message": "you mean with this:\n\n                case Failure(ex) \u003d\u003e\n                    log.warn(\"Failed to get {}: {} - {}\",\n                             tag.runtimeClass.getSimpleName, id, ex)\n\nmmmm. Yeah, I\u0027ll add a no-op branch for the DeviceQueryTimeoutException.\n\n\nWRT \"move this case below and just throw\", where below are you referring to? Inside the andThen() ??? That doesn\u0027t make sense to me but I see no other place.",
      "parentUuid": "fafc7978_f8fe826a",
      "revId": "9be2d1cdc501eaef6863102f87e7659933d64923",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_51e95c7f",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/VirtualTopologyActor.scala",
        "patchSetId": 4
      },
      "lineNbr": 213,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-09T16:56:43Z",
      "side": 1,
      "message": "You are doing recoverWith returning a failed future. That\u0027s the same as doing recover and throwing the exception. Also notice that we are logging the failed futures in the DDA. so we can simply write:\n\nVirtualTopologyActor\n            .ask(requestsFactory(tag)(id))(deviceRequestTimeout)\n            .mapTo[D](tag).recover {\n                case Failure(AskTimeoutException) \u003d\u003e\n                    throw DeviceQueryTimeoutException(id, tag)\n                case Failure(ex: ClassCastException) \u003d\u003e\n                    throw new Exception(\"VirtualTopologyManager didn\u0027t return a ${\n                                     tag.runtimeClass.getSimpleName}!\")\n                case Failure(ex) \u003d\u003e\n                     throw new Exception(s\"Failed to get  \n                                                  ${tag.runtimeClass.getSimpleName} - $id\", ex)\n            }(ExecutionContext.callingThread)",
      "parentUuid": "fafc7978_c95e4ee9",
      "revId": "9be2d1cdc501eaef6863102f87e7659933d64923",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_71ad8031",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/VirtualTopologyActor.scala",
        "patchSetId": 4
      },
      "lineNbr": 213,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2014-12-09T17:13:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fafc7978_51e95c7f",
      "revId": "9be2d1cdc501eaef6863102f87e7659933d64923",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}