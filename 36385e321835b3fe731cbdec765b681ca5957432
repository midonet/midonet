{
  "comments": [
    {
      "key": {
        "uuid": "facab960_82924b9d",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/StateStorage.scala",
        "patchSetId": 8
      },
      "lineNbr": 88,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-11T15:14:57Z",
      "side": 1,
      "message": "I don\u0027t understand this, probably because of a lack of context. Why not removing it?",
      "range": {
        "startLine": 87,
        "startChar": 68,
        "endLine": 88,
        "endChar": 27
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_04b2c8e5",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/StateStorage.scala",
        "patchSetId": 8
      },
      "lineNbr": 88,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-12T09:49:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_82924b9d",
      "range": {
        "startLine": 87,
        "startChar": 68,
        "endLine": 88,
        "endChar": 27
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_22f5ffed",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/StateStorage.scala",
        "patchSetId": 8
      },
      "lineNbr": 108,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-11T15:14:57Z",
      "side": 1,
      "message": "Could you give an example of an object state and data here to make it more concrete? Are you referring to a bridge and a mac table for instance?",
      "range": {
        "startLine": 107,
        "startChar": 11,
        "endLine": 108,
        "endChar": 35
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_8af261d0",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/StateStorage.scala",
        "patchSetId": 8
      },
      "lineNbr": 108,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-06-12T01:51:37Z",
      "side": 1,
      "message": "I think that owner info is one such example. We can use more concrete examples here for sure.",
      "parentUuid": "facab960_22f5ffed",
      "range": {
        "startLine": 107,
        "startChar": 11,
        "endLine": 108,
        "endChar": 35
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_24ec2cc7",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/StateStorage.scala",
        "patchSetId": 8
      },
      "lineNbr": 108,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-12T09:49:49Z",
      "side": 1,
      "message": "I am referring to any topology object data that is written by the agent, i.e. not created via neutron. At the moment this includes:\n- host alive\n- port active\n- host interfaces\n- (it could include other ephemeral host information)\n- whether a route is learned\n- the BGP status\n\nThis may also include mac mac and ip learning, but for performance reasons we use the replicated maps for that.\nThe Host objects, since they are created by the agent, could be ephemeral. However, because we use them to store the port bindings, they are the only objects created by the agent made persistent. Anyway, it\u0027s open to discussion to find a better way of handling them.",
      "parentUuid": "facab960_22f5ffed",
      "range": {
        "startLine": 107,
        "startChar": 11,
        "endLine": 108,
        "endChar": 35
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_e264f723",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectMapper.scala",
        "patchSetId": 8
      },
      "lineNbr": 267,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-11T15:14:57Z",
      "side": 1,
      "message": "Why not looping over the state objects that need to be deleted here? This way it is more symmetrical to how things are done for the topology.",
      "range": {
        "startLine": 267,
        "startChar": 12,
        "endLine": 267,
        "endChar": 25
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_84dc1814",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectMapper.scala",
        "patchSetId": 8
      },
      "lineNbr": 267,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-12T09:49:49Z",
      "side": 1,
      "message": "One earlier comment was to separate the state implementation, and add this into a different trait.",
      "parentUuid": "facab960_e264f723",
      "range": {
        "startLine": 267,
        "startChar": 12,
        "endLine": 267,
        "endChar": 25
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_c2a61353",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-11T15:14:57Z",
      "side": 1,
      "message": "createStatePathsOps?",
      "range": {
        "startLine": 96,
        "startChar": 22,
        "endLine": 96,
        "endChar": 36
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_0ab651fa",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-06-12T01:51:37Z",
      "side": 1,
      "message": "Actually shouldn\u0027t this be createState to make it consistent with deleteState()?",
      "parentUuid": "facab960_c2a61353",
      "range": {
        "startLine": 96,
        "startChar": 22,
        "endLine": 96,
        "endChar": 36
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_ca9629f0",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-12T09:49:49Z",
      "side": 1,
      "message": "It prefer createState or createStateOps, because even though in this particular case the method only creates the path operations for a given object, that\u0027s not an exclusive requirement. It also I added `Ops` because unlike the method below, the method does not actually create any state znodes, but it returns the operations to create them.",
      "parentUuid": "facab960_0ab651fa",
      "range": {
        "startLine": 96,
        "startChar": 22,
        "endLine": 96,
        "endChar": 36
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_c268d389",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 100,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-11T15:14:57Z",
      "side": 1,
      "message": "name parameter",
      "range": {
        "startLine": 100,
        "startChar": 32,
        "endLine": 100,
        "endChar": 36
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_2aa4f555",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 100,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-12T09:49:49Z",
      "side": 1,
      "message": "For this and the following comments, can you point me to some guidelines about naming arguments? Since this has been an often comment in the past too I\u0027ve been searching for additional information, but I could only find resources on forums and one Microsoft page. From these, my take on the matter is that it makes sense to name arguments when you have many arguments and of the same type, to prevent coding errors and ease readability. However, in this particular case I would like to know where is the benefit of naming arguments for, say, the `putIfAbsent` method of a hash map.",
      "parentUuid": "facab960_c268d389",
      "range": {
        "startLine": 100,
        "startChar": 32,
        "endLine": 100,
        "endChar": 36
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_441cc513",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 100,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-15T10:01:39Z",
      "side": 1,
      "message": "It\u0027s just that it\u0027s easier to parse when you know what the null corresponds to. If it\u0027s something like map.put(null) then it\u0027s quite easy to understand but in this example it\u0027s less obvious to me.",
      "parentUuid": "facab960_2aa4f555",
      "range": {
        "startLine": 100,
        "startChar": 32,
        "endLine": 100,
        "endChar": 36
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_ba03ec0b",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 100,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-15T16:30:12Z",
      "side": 1,
      "message": "This is why I asked you: I understand for instance that it is useful when you have long sequence of actual parameters (on the forums I read it says more than 2). Is it needed otherwise?",
      "parentUuid": "facab960_441cc513",
      "range": {
        "startLine": 100,
        "startChar": 32,
        "endLine": 100,
        "endChar": 36
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_d09a4f62",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 100,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-16T07:24:23Z",
      "side": 1,
      "message": "Well it\u0027s a matter of taste :-)",
      "parentUuid": "facab960_ba03ec0b",
      "range": {
        "startLine": 100,
        "startChar": 32,
        "endLine": 100,
        "endChar": 36
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_e206b7cd",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 103,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-11T15:14:57Z",
      "side": 1,
      "message": "same comment",
      "range": {
        "startLine": 103,
        "startChar": 36,
        "endLine": 103,
        "endChar": 40
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_edbea7d3",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 103,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-12T09:49:49Z",
      "side": 1,
      "message": "See above.",
      "parentUuid": "facab960_e206b7cd",
      "range": {
        "startLine": 103,
        "startChar": 36,
        "endLine": 103,
        "endChar": 40
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_82f5ebcc",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 126,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-11T15:14:57Z",
      "side": 1,
      "message": "same comment",
      "range": {
        "startLine": 126,
        "startChar": 64,
        "endLine": 126,
        "endChar": 68
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_0db66bfa",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 126,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-12T09:49:49Z",
      "side": 1,
      "message": "See above.",
      "parentUuid": "facab960_82f5ebcc",
      "range": {
        "startLine": 126,
        "startChar": 64,
        "endLine": 126,
        "endChar": 68
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_a204afc0",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 149,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-11T15:14:57Z",
      "side": 1,
      "message": "remove",
      "range": {
        "startLine": 149,
        "startChar": 73,
        "endLine": 149,
        "endChar": 76
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_2abb1573",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 149,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-12T09:49:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_a204afc0",
      "range": {
        "startLine": 149,
        "startChar": 73,
        "endLine": 149,
        "endChar": 76
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_2ab955e9",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 167,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-06-12T01:51:37Z",
      "side": 1,
      "message": "The word \"owner\" seems to come out of nowhere, making this description a bit hard to understand, maybe.",
      "range": {
        "startLine": 167,
        "startChar": 57,
        "endLine": 167,
        "endChar": 66
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_2db96fe9",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 167,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-12T09:49:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_2ab955e9",
      "range": {
        "startLine": 167,
        "startChar": 57,
        "endLine": 167,
        "endChar": 66
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_a2ae6f83",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 179,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-11T15:14:57Z",
      "side": 1,
      "message": "I feel that the write policy names don\u0027t really convey their meanings.  What about:\nSingleFirstWriteWins -\u003e FirstWriteOrOwnerWins\nSingleLastWriteWins -\u003e OwnerUpdateOtherReplace\nMultiple stays the same",
      "range": {
        "startLine": 164,
        "startChar": 9,
        "endLine": 179,
        "endChar": 47
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_aded7ff1",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 179,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-12T09:49:49Z",
      "side": 1,
      "message": "Then why not:\nSingleFirstWriteWins -\u003e OwnerUpdateOtherFail\n\nor:\nSingleLastWriteWins -\u003e LastWriteOrOwnerWins",
      "parentUuid": "facab960_a2ae6f83",
      "range": {
        "startLine": 164,
        "startChar": 9,
        "endLine": 179,
        "endChar": 47
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_04e2bd02",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 179,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-15T10:01:39Z",
      "side": 1,
      "message": "yes that would convey the semantic more.",
      "parentUuid": "facab960_aded7ff1",
      "range": {
        "startLine": 164,
        "startChar": 9,
        "endLine": 179,
        "endChar": 47
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_ff71e6e0",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 179,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-15T16:30:12Z",
      "side": 1,
      "message": "As Tomohiko pointed out, owner is a bit out-of-context here. I tried to remove it from the scaladoc.",
      "parentUuid": "facab960_04e2bd02",
      "range": {
        "startLine": 164,
        "startChar": 9,
        "endLine": 179,
        "endChar": 47
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_309ffb51",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 179,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-16T07:24:23Z",
      "side": 1,
      "message": "ok!",
      "parentUuid": "facab960_ff71e6e0",
      "range": {
        "startLine": 164,
        "startChar": 9,
        "endLine": 179,
        "endChar": 47
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_42bbe371",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 351,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-11T15:14:57Z",
      "side": 1,
      "message": "It seems to me that this block is repeated 3 times and could be placed inside a method that takes 3 arguments:\n-a function called when the node exists and we are the owner\n-a function called when the node exists and we are not the owner\n-a function called when the node does not exist.",
      "range": {
        "startLine": 323,
        "startChar": 8,
        "endLine": 351,
        "endChar": 25
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_ea35adf7",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 351,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-12T09:49:49Z",
      "side": 1,
      "message": "I am currently working on replacing futures with observables. However, i didn\u0027t really understand well your suggestion. How will a method with 3 arguments work, given that we also need: clazz, id, key, value, promise, and the path - which is different for single and multiple value keys.",
      "parentUuid": "facab960_42bbe371",
      "range": {
        "startLine": 323,
        "startChar": 8,
        "endLine": 351,
        "endChar": 25
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_24e8a1e1",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 351,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-15T10:01:39Z",
      "side": 1,
      "message": "Well you would pass these arguments as well. If you prefer to leave it like this because that would be too many arguments, fine by me.",
      "parentUuid": "facab960_ea35adf7",
      "range": {
        "startLine": 323,
        "startChar": 8,
        "endLine": 351,
        "endChar": 25
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_5f4f32bd",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 351,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-15T16:30:12Z",
      "side": 1,
      "message": "The latest patch replaces this with observables. It is true that some code is duplicated there as well. Although I don\u0027t have a strong preference, I think it makes the workflow easier to understand because the reader doesn\u0027t have to jump between different methods.",
      "parentUuid": "facab960_24e8a1e1",
      "range": {
        "startLine": 323,
        "startChar": 8,
        "endLine": 351,
        "endChar": 25
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_90b7e7d7",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 351,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-16T07:24:23Z",
      "side": 1,
      "message": "That makes sense!",
      "parentUuid": "facab960_5f4f32bd",
      "range": {
        "startLine": 323,
        "startChar": 8,
        "endLine": 351,
        "endChar": 25
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_e24b1785",
        "filename": "nsdb/src/test/scala/org/midonet/cluster/data/storage/ZookeeperObjectStateTest.scala",
        "patchSetId": 8
      },
      "lineNbr": 43,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-11T15:14:57Z",
      "side": 1,
      "message": "1 second seems low if you\u0027re going to use curator.",
      "range": {
        "startLine": 43,
        "startChar": 32,
        "endLine": 43,
        "endChar": 40
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_8dc99b7a",
        "filename": "nsdb/src/test/scala/org/midonet/cluster/data/storage/ZookeeperObjectStateTest.scala",
        "patchSetId": 8
      },
      "lineNbr": 43,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-12T09:49:49Z",
      "side": 1,
      "message": "I already received this comment, and it was fixed in a different patch.",
      "parentUuid": "facab960_e24b1785",
      "range": {
        "startLine": 43,
        "startChar": 32,
        "endLine": 43,
        "endChar": 40
      },
      "revId": "36385e321835b3fe731cbdec765b681ca5957432",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}