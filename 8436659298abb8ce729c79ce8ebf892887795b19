{
  "comments": [
    {
      "key": {
        "uuid": "1a106d94_eeaf137b",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-05-11T11:17:59Z",
      "side": 1,
      "message": "Does it make sense to define our own thread instead?",
      "range": {
        "startLine": 98,
        "startChar": 55,
        "endLine": 98,
        "endChar": 61
      },
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_886132ab",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-05-12T16:53:00Z",
      "side": 1,
      "message": "Agree.",
      "parentUuid": "1a106d94_eeaf137b",
      "range": {
        "startLine": 98,
        "startChar": 55,
        "endLine": 98,
        "endChar": 61
      },
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_ee81d3fb",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-05-11T11:17:59Z",
      "side": 1,
      "message": "is the ID valuable to keep?",
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_6864b6b8",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-05-12T16:53:00Z",
      "side": 1,
      "message": "Initially, the host is unknown until we call the identifyHost method that reads the ID from the properties file, so actually we display host-null.",
      "parentUuid": "1a106d94_ee81d3fb",
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_5f6b7784",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-05-08T15:03:02Z",
      "side": 1,
      "message": "what threads can access this variable?",
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_77a12ff7",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-05-12T16:53:00Z",
      "side": 1,
      "message": "The thread starting the service, the zoom thread emitting notifications, and the interface scanner thread updating the interfaces. I used an atomic such that I can also use a compare and swap",
      "parentUuid": "1a106d94_5f6b7784",
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_df0e47e4",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-05-08T15:03:02Z",
      "side": 1,
      "message": "what does the set represent? why are we only interested in the first element?",
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_4e70e73f",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-05-11T11:17:59Z",
      "side": 1,
      "message": "@Alex can a node have multiple owners?",
      "parentUuid": "1a106d94_df0e47e4",
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_486bba84",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-05-12T16:53:00Z",
      "side": 1,
      "message": "Ports have multiple owners. Hosts don\u0027t, because the ownership is exclusive. They either have 0 or 1.",
      "parentUuid": "1a106d94_4e70e73f",
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_7f0bd3d5",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 129,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-05-08T15:03:02Z",
      "side": 1,
      "message": "the thread you\u0027re blocking here is not needed to complete the future?",
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_bf11cb05",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 129,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-05-08T15:03:02Z",
      "side": 1,
      "message": "should be id?",
      "range": {
        "startLine": 129,
        "startChar": 69,
        "endLine": 129,
        "endChar": 75
      },
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_680b16d6",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 129,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-05-12T16:53:00Z",
      "side": 1,
      "message": "Well, for hosts the ownerId and the hostId are the same. yes, it can be id.",
      "parentUuid": "1a106d94_bf11cb05",
      "range": {
        "startLine": 129,
        "startChar": 69,
        "endLine": 129,
        "endChar": 75
      },
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_9715cb9d",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 129,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-05-12T16:53:00Z",
      "side": 1,
      "message": "Good catch Duarte, thanks. Actually in the test, this is not a problem because the mock uses distinct threads for events and I/O. Unfortunately, we still have to improve the actual production client to do the same :(\n\nTo mitigate this, I added an:\n\n  observeOn(scheduler)\n\nfor this observer, such that notifications are executed on the HostService thread.",
      "parentUuid": "1a106d94_7f0bd3d5",
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_8e95bf34",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 133,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-05-11T11:17:59Z",
      "side": 1,
      "message": "would a store.get(..).onSuccess(if .. recreate..) be better?",
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_b2b8d575",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 133,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-05-12T16:53:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a106d94_8e95bf34",
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_2ea64bae",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 247,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-05-11T11:17:59Z",
      "side": 1,
      "message": "this reads odd (the thing to release seems to be the process itself, not the host). Maybe s/Host identifier/Host ID/ gives you room to keep the for it to be.",
      "range": {
        "startLine": 247,
        "startChar": 62,
        "endLine": 247,
        "endChar": 68
      },
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_88d65226",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 247,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-05-12T16:53:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a106d94_2ea64bae",
      "range": {
        "startLine": 247,
        "startChar": 62,
        "endLine": 247,
        "endChar": 68
      },
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_4ea747a7",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 296,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-05-11T11:17:59Z",
      "side": 1,
      "message": "Should we warn here?",
      "range": {
        "startLine": 295,
        "startChar": 7,
        "endLine": 296,
        "endChar": 23
      },
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_4819fa20",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 296,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-05-12T16:53:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a106d94_4ea747a7",
      "range": {
        "startLine": 295,
        "startChar": 7,
        "endLine": 296,
        "endChar": 23
      },
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_8ebc9fbc",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 301,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-05-11T11:17:59Z",
      "side": 1,
      "message": "id and wrap the line?",
      "range": {
        "startLine": 301,
        "startChar": 63,
        "endLine": 301,
        "endChar": 73
      },
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_28147ee7",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/services/HostService.scala",
        "patchSetId": 3
      },
      "lineNbr": 301,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-05-12T16:53:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a106d94_8ebc9fbc",
      "range": {
        "startLine": 301,
        "startChar": 63,
        "endLine": 301,
        "endChar": 73
      },
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_2ecdab66",
        "filename": "midolman/src/test/java/org/midonet/midolman/host/services/HostServiceTest.java",
        "patchSetId": 3
      },
      "lineNbr": 102,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-05-11T11:17:59Z",
      "side": 1,
      "message": "nit: some of these are not needed",
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_d26c710a",
        "filename": "midolman/src/test/java/org/midonet/midolman/host/services/HostServiceTest.java",
        "patchSetId": 3
      },
      "lineNbr": 102,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-05-12T16:53:00Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "1a106d94_2ecdab66",
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_ceb217e4",
        "filename": "midolman/src/test/java/org/midonet/midolman/host/services/HostServiceTest.java",
        "patchSetId": 3
      },
      "lineNbr": 163,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-05-11T11:17:59Z",
      "side": 1,
      "message": "nit: keep the .getInstance in the same line, and align the .getHostVersionPath with it?",
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_f2740dd0",
        "filename": "midolman/src/test/java/org/midonet/midolman/host/services/HostServiceTest.java",
        "patchSetId": 3
      },
      "lineNbr": 163,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-05-12T16:53:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a106d94_ceb217e4",
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_6ec32338",
        "filename": "nsdb/src/test/scala/org/midonet/cluster/data/storage/InMemoryStorageTest.scala",
        "patchSetId": 3
      },
      "lineNbr": 1601,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-05-11T11:17:59Z",
      "side": 1,
      "message": "nit: better description? (e.g.: test owner observable after a multi)",
      "range": {
        "startLine": 1601,
        "startChar": 18,
        "endLine": 1601,
        "endChar": 44
      },
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_72377dff",
        "filename": "nsdb/src/test/scala/org/midonet/cluster/data/storage/InMemoryStorageTest.scala",
        "patchSetId": 3
      },
      "lineNbr": 1601,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-05-12T16:53:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a106d94_6ec32338",
      "range": {
        "startLine": 1601,
        "startChar": 18,
        "endLine": 1601,
        "endChar": 44
      },
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_aee07bcd",
        "filename": "nsdb/src/test/scala/org/midonet/cluster/data/storage/ZookeeperObjectMapperTests.scala",
        "patchSetId": 3
      },
      "lineNbr": 1247,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-05-11T11:17:59Z",
      "side": 1,
      "message": "We should have an implementation-agnostic suite of zoom tests that we can reuse with both in-memory and the zk based.",
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_d23ab1e5",
        "filename": "nsdb/src/test/scala/org/midonet/cluster/data/storage/ZookeeperObjectMapperTests.scala",
        "patchSetId": 3
      },
      "lineNbr": 1247,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-05-12T16:53:00Z",
      "side": 1,
      "message": "Agree, it\u0027s on my todo list for some time now. This is getting out of hand.",
      "parentUuid": "1a106d94_aee07bcd",
      "revId": "8436659298abb8ce729c79ce8ebf892887795b19",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}