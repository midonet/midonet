{
  "comments": [
    {
      "key": {
        "uuid": "fafc7978_2210da00",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectMapper.scala",
        "patchSetId": 4
      },
      "lineNbr": 121,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2014-11-28T22:05:15Z",
      "side": 1,
      "message": "I\u0027d make this a -1, or rather UNINITIALIZED \u003d -1 to make clear that the values is not really ok, but expected to be initialized.",
      "range": {
        "startLine": 121,
        "startChar": 39,
        "endLine": 121,
        "endChar": 41
      },
      "revId": "521f4239cd29bbbf16516e7059ad894ca0b9c6c6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_62f942c8",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectMapper.scala",
        "patchSetId": 4
      },
      "lineNbr": 630,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2014-11-28T22:05:15Z",
      "side": 1,
      "message": "If racing with another node this will fail to start, it should retry instead?",
      "revId": "521f4239cd29bbbf16516e7059ad894ca0b9c6c6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_11f40af1",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectMapper.scala",
        "patchSetId": 4
      },
      "lineNbr": 640,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2014-11-27T17:04:28Z",
      "side": 1,
      "message": "Implementing the versions as children of versionNodePath seems to me to make things more complicated than they need to be. Why not just store the version number as data of versionNodePath?\n\nThen to initialize, you can just try to create the node. If a node already exists, it will fail and you can eat the exception.\n\nThen to update, you can just set the data on the node, instead of deleting one and creating another.",
      "range": {
        "startLine": 624,
        "startChar": 0,
        "endLine": 640,
        "endChar": 64
      },
      "revId": "521f4239cd29bbbf16516e7059ad894ca0b9c6c6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_d19562e5",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectMapper.scala",
        "patchSetId": 4
      },
      "lineNbr": 640,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2014-11-27T18:03:19Z",
      "side": 1,
      "message": "Thank you for the suggestion, Brandon. As discussed, I thought keeping the version number as a child leave would make debugging easier, but I guess that wasn\u0027t really true. Thanks, the code is simplified a lot now.",
      "parentUuid": "fafc7978_11f40af1",
      "range": {
        "startLine": 624,
        "startChar": 0,
        "endLine": 640,
        "endChar": 64
      },
      "revId": "521f4239cd29bbbf16516e7059ad894ca0b9c6c6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_42f6bed8",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectMapper.scala",
        "patchSetId": 4
      },
      "lineNbr": 646,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2014-11-28T22:05:15Z",
      "side": 1,
      "message": "It should watch the child at this point in order to detect changes triggered by other nodes I guess.",
      "revId": "521f4239cd29bbbf16516e7059ad894ca0b9c6c6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_51c4d291",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectMapper.scala",
        "patchSetId": 4
      },
      "lineNbr": 860,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2014-11-27T17:04:28Z",
      "side": 1,
      "message": "c \u003c- classToIdGetter.keySet",
      "range": {
        "startLine": 860,
        "startChar": 17,
        "endLine": 860,
        "endChar": 42
      },
      "revId": "521f4239cd29bbbf16516e7059ad894ca0b9c6c6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_f1a4e658",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectMapper.scala",
        "patchSetId": 4
      },
      "lineNbr": 860,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2014-11-27T18:03:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fafc7978_51c4d291",
      "range": {
        "startLine": 860,
        "startChar": 17,
        "endLine": 860,
        "endChar": 42
      },
      "revId": "521f4239cd29bbbf16516e7059ad894ca0b9c6c6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}