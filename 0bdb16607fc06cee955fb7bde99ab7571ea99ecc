{
  "comments": [
    {
      "key": {
        "uuid": "fa81d914_21bf00fd",
        "filename": "midolman/src/main/scala/org/midonet/midolman/l4lb/HealthMonitor.scala",
        "patchSetId": 6
      },
      "lineNbr": 62,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-01-20T13:01:02Z",
      "side": 1,
      "message": "haproxy?\n\nAlternatively, the methods below could take the logger as argument.",
      "range": {
        "startLine": 62,
        "startChar": 47,
        "endLine": 62,
        "endChar": 60
      },
      "revId": "0bdb16607fc06cee955fb7bde99ab7571ea99ecc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_01c03c7b",
        "filename": "midolman/src/main/scala/org/midonet/midolman/l4lb/HealthMonitor.scala",
        "patchSetId": 6
      },
      "lineNbr": 125,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-01-20T13:01:02Z",
      "side": 1,
      "message": "PID",
      "range": {
        "startLine": 125,
        "startChar": 22,
        "endLine": 125,
        "endChar": 25
      },
      "revId": "0bdb16607fc06cee955fb7bde99ab7571ea99ecc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_e14b2829",
        "filename": "midolman/src/main/scala/org/midonet/midolman/l4lb/HealthMonitor.scala",
        "patchSetId": 6
      },
      "lineNbr": 281,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-01-20T13:01:02Z",
      "side": 1,
      "message": "haproxy or l4lb",
      "range": {
        "startLine": 281,
        "startChar": 36,
        "endLine": 281,
        "endChar": 49
      },
      "revId": "0bdb16607fc06cee955fb7bde99ab7571ea99ecc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_415154d7",
        "filename": "midolman/src/main/scala/org/midonet/midolman/l4lb/HealthMonitor.scala",
        "patchSetId": 6
      },
      "lineNbr": 326,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-01-20T13:01:02Z",
      "side": 1,
      "message": "You could wait for the current operations to finish with:\n\n  executor.shutdown()\n  if (!executor.awaitTermination(... timeout...)) {\n    executor.shutdownNow()\n  }",
      "range": {
        "startLine": 326,
        "startChar": 16,
        "endLine": 326,
        "endChar": 38
      },
      "revId": "0bdb16607fc06cee955fb7bde99ab7571ea99ecc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_81626cab",
        "filename": "midolman/src/test/scala/org/midonet/midolman/util/MidolmanSpec.scala",
        "patchSetId": 6
      },
      "lineNbr": 72,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-01-20T13:01:02Z",
      "side": 1,
      "message": "Rather that disabling the check, you could ensure that the test uses the same thread executor, make it deterministic. This requires the HealthMonitor to either receive the executor as argument, or to allow you to override it inside the test.",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 72,
        "endChar": 55
      },
      "revId": "0bdb16607fc06cee955fb7bde99ab7571ea99ecc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}