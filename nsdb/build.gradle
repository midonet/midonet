/*
 * Copyright 2014 Midokura SARL
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'protobuf'
apply plugin: 'scala'

jar {
    manifest {
        attributes 'Implementation-Title': 'Midonet Cluster library',
        'Implementation-Version': version
    }
}

sourceSets {
    main {
        scala { srcDirs = ['src/main/scala', 'src/main/java'] }
        java { srcDirs = [] }
    }
    test {
        scala { srcDirs = ['src/test/scala', 'src/test/java'] }
        java { srcDirs = [] }
    }
}

dependencies {
    compile project(':midonet-util')

    compile libraries.cassandra,
            libraries.collections4,
            libraries.commons_cli,
            libraries.commons_lang3,
            libraries.commons_dbcp2,
            libraries.commons_conf,
            libraries.curator_recipes,
            libraries.guava,
            libraries.guice,
            libraries.jackson_mapper,
            libraries.logback,
            libraries.netty,
            libraries.protobuf,
            libraries.rx,
            libraries.scala,
            libraries.scala_async,
            libraries.scala_logging,
            libraries.scallop,
            libraries.typesafeconf

    testCompile libraries.commons_conf,
                libraries.curator_test,
                libraries.hamcrest,
                libraries.logback,
                libraries.scalatest,
                libraries.scala_async,
                libraries.test_frameworks
}

cobertura {
    coverageSourceDirs << sourceSets.main.java.srcDirs
    coverageSourceDirs << sourceSets.main.scala.srcDirs

    coverageExcludes = ['.*org.midonet.cluster.models.*']
}
