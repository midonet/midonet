// Copyright 2015 Midokura SARL
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// MidoNet NSDB configuration schema

nsdb {
    schemaVersion : 9
}

zookeeper {
    zookeeper_hosts : "127.0.0.1:2181"
    zookeeper_hosts_description : """
    This property should contain a comma-separated list of all ZooKeeper
    servers, as <ip>:<port>. DO CHANGE THIS: the recommended configuration for
    production is 3 ZooKeeper Nodes.

    Note that in order too bootstrap correctly, all MidoNet components (Agent
    and Cluster) will require a local configuration file located at
    /etc/midonet/midonet.conf containing the zookeeper_hosts and root_key
    properties.  All other values will be deployed automatically using the
    schemas bundled with the application.  Please check the deployment
    documentation for more details on how to run ZooKeeper as part of the
    MidoNet cluster. """

    root_key : "/midonet/v2"
    root_key_description : """
    Use this option to override the ZooKeeper path that MidoNet will use. Useful
    mainly for test environments. """

    session_timeout : 30s
    session_timeout_description : """ ZooKeeper session timeout. This value
    determines the maximum time that session will survive after
    the disconnection of the client from its ZooKeeper server. """
    session_timeout_type : "duration"

    session_gracetime : ${zookeeper.session_timeout}
    session_gracetime_description : """
    ZooKeeper session gracetime. An agent that remains disconnected from
    ZooKeeper for longer than this interval will give up reconnecting and reboot
    itself so as to start over with a fresh ZooKeeper connection. Note that
    agents will also reboot themselves if their ZooKeeper session expires."""

    max_retries : 10
    max_retries_description : """ Maximum number of reconnection attempts after
    the connection to the ZooKeeper node is interrupted. """

    base_retry : 1s
    base_retry_description : """ Interval between reconnection retries. """
    base_retry_type : "duration"

    curator_enabled : false
    curator_enabled_description : """
    DO NOT CHANGE THIS, this feature is only relevant for the MidoNet REST API.
    """
    use_new_stack : false
    use_new_stack_description : """
    DO NOT CHANGE THIS, this feature is still not supported. """

    buffer_size : 4194304
    buffer_size_description : """
    The ZooKeeper client buffer size into which data is read. The buffer size
    should accommodate the largest data set read during one ZooKeeper operation.
    """
    allow_embed : false
    allow_embed_description : """
    This property will be used by the MidoNet cluster to run an embedded ZK
    cluster in the nodes designated by the zookeeper_hosts property.  When
    enabled, if MidoNet cluster is started on a host that has one of the IPs
    contained in zookeeper_hosts it will run an embedded ZK node.  If you prefer
    to run ZooKeeper standalone, set this property to false. """

    data_dir : "/var/lib/midonet/zk/data"
    data_dir_description : """
    This property only applies when using the  embedded ZooKeeper server.  The
    value determines the path where the data files will be stored.  Note that
    it's recommended to use a dedicated disk when configuring large virtual
    topologies. """

    log_dir : "/var/lib/midonet/zk/data"
    log_dir_description : """
    This property only applies when using the embedded ZooKeeper server.
    The value determines the path where the transaction log files will
    be stored.  Note that it's recommended to use a dedicated disk when
    configuring large virtual topologies. """

}

cassandra {
    servers : "127.0.0.1"
    servers_description : """The minimum recommended cassandra setup is a 3-nod
    cluster with a replication factor of 3. Midolman uses Quorum as consistency
    policy, which would translate to 2 in the suggested setup. """

    replication_factor : 1
    replication_factor_description : """
    DO CHANGE THIS, recommended value is 3"""

    cluster : "midonet"
    cluster_description : """
    This property defines the name of the Keyspace that MidoNet will create in
    its Cassandra storage
    """
}

