// Copyright 2015 Midokura SARL
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// MidoNet NSDB configuration schema

nsdb {
    schemaVersion : 9
}

zookeeper {
    zookeeper_hosts : "127.0.0.1:2181"
    zookeeper_hosts_description : """ Comma separated list of ZooKeeper hosts"""

    session_timeout : 30s
    session_timeout_description : """ ZooKeeper session timeout. This value
    determines the maximum time that session will survive after
    the disconnection of the client from its ZooKeeper server. """
    session_timeout_type : "duration"

    failfast_session_timeout : 5s
    failfast_session_timeout_description : """ ZooKeeper session timeout for
    fast failure detection. This is used to detect the failure of MidoNet
    agents/failures from MidoNet agents by ensuring a smaller session time than
    regular ZooKeeper sessions.
    """
    failfast_session_timeout_type : "duration"

    session_gracetime : ${zookeeper.session_timeout}
    session_gracetime_description : """
    ZooKeeper session gracetime. An agent that remains disconnected from
    ZooKeeper for longer than this interval will give up reconnecting and reboot
    itself so as to start over with a fresh ZooKeeper connection. Note that
    agents will also reboot themselves if their ZooKeeper session expires."""

    max_retries : 10
    max_retries_description : """ Maximum number of reconnection attempts after
    the connection to the ZooKeeper node is interrupted. """

    base_retry : 1s
    base_retry_description : """ Interval between reconnection retries. """
    base_retry_type : "duration"

    root_key : "/midonet"
    root_key_description : """
    Use this option to override the ZooKeeper path that MidoNet will use. Useful
    mainly for test environments. """

    buffer_size : 4194304
    buffer_size_description : """
    The ZooKeeper client buffer size into which data is read. The buffer size
    should accommodate the largest data set read during one ZooKeeper operation.
    """

    lock_timeout : 30s
    lock_timeout_description : """ The timeout for acquiring an exclusive lock
    to the NSDB when performing a write operation. The lock is enabled only
    for compatibility with MidoNet version 5.2.1 or older."""
    lock_timeout_type : "duration"
}

cassandra {
    servers : ""
    servers_description : """
    The recommended cassandra setup is a 3-node cluster.
    """

    replication_factor : 1
    replication_factor_description : """
    The number of replicas for each data item. Since we use Cassandra to
    store flow state that only lives for two minutes, one replica is enough.
    """

    cluster : "midonet"
    cluster_description : """
    This property defines the name of the Keyspace that MidoNet will create in
    its Cassandra storage
    """
}

state_proxy {
    enabled : true
    enabled_description : """
        Whether the State Proxy client runs in this agent.  This service
        provides subscription to state table updates from the cluster.
        """

    network_threads : 2
    network_threads_description : """
        The number of threads used to handle network events.
        """

    soft_reconnect_delay : 1s
    soft_reconnect_delay_description : """
        The amount of time a reconnect attempt will be delayed after the
        connection is lost. During this time the service is still reported
        as available to subscribers.
        """
    max_soft_reconnect_attempts : 30
    max_soft_reconnect_attempts_description : """
        The maximum number of times reconnection would be attempted before
        deeming the service unavailable.
        """

    hard_reconnect_delay : 30s
    hard_reconnect_delay_description : """
        The delay between reconnection attempts when the service is unavailable.
        """
}