//
// Copyright 2015 Midokura SARL
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

import "commons.proto";

package org.midonet.cluster.models;
option java_package = "org.midonet.cluster.models";
option java_outer_classname = "State";

message HostState {
    message Interface {
        enum Type {
            PHYSICAL = 1;
            VIRTUAL = 2;
            TUNNEL = 3;
            UNKNOWN = 4;
        }
        enum Endpoint {
            DATAPATH_EP = 1;
            PHYSICAL_EP = 2;
            VM_EP = 3;
            GRE_EP = 4;
            CAPWAP_EP = 5;
            LOCALHOST_EP = 6;
            TUNTAP_EP = 7;
            UNKNOWN_EP = 8;
        }
        enum DpPortType {
            NET_DEV_DP = 1;
            INTERNAL_DP = 2;
            GRE_DP = 3;
            VXLAN_DP = 4;
            GRE64_DP = 5;
            LISP_DP = 6;
        }

        optional string name = 1;
        optional Type type = 2;
        optional string mac = 3;
        repeated IPAddress addresses = 4;
        optional bool up = 5;
        optional bool has_link = 6;
        optional int32 mtu = 7;
        optional Endpoint endpoint = 8;
        optional DpPortType port_type = 9;
    }

    optional UUID host_id = 1;
    repeated Interface interfaces = 2;
}

message VtepConfiguration {
    optional string name = 1;
    optional string description = 2;
    repeated IPAddress tunnel_addresses = 3;
}

enum VtepConnectionState {
    VTEP_DISCONNECTED = 1;
    VTEP_DISCONNECTING = 2;
    VTEP_CONNECTED = 3;
    VTEP_CONNECTING = 4;
    VTEP_READY = 5;
    VTEP_BROKEN = 6;
    VTEP_FAILED = 7;
    VTEP_ERROR = 8;
}
