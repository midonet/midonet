{
  "comments": [
    {
      "key": {
        "uuid": "7a1969be_3bc13a2f",
        "filename": "brain/midonet-brain/build.gradle",
        "patchSetId": 25
      },
      "lineNbr": 91,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "nice, I like this approach. Does it make sense that we add one per service for easy execution?",
      "range": {
        "startLine": 91,
        "startChar": 5,
        "endLine": 91,
        "endChar": 19
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_bbec0ac9",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/TopologyApiService.scala",
        "patchSetId": 25
      },
      "lineNbr": 98,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "not sure, false?",
      "range": {
        "startLine": 98,
        "startChar": 48,
        "endLine": 98,
        "endChar": 52
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_fbcde25e",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/TopologyApiService.scala",
        "patchSetId": 25
      },
      "lineNbr": 106,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "ditto? I have no idea what\u0027s reasonable tbh. I\u0027m thinking a cluster node contains a lot of different services, so I guess it makes sense not to have them all active by default? What do you think?",
      "range": {
        "startLine": 106,
        "startChar": 55,
        "endLine": 106,
        "endChar": 59
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_5bdb561b",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/TopologyApiService.scala",
        "patchSetId": 25
      },
      "lineNbr": 114,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 114,
        "startChar": 51,
        "endLine": 114,
        "endChar": 55
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_7b09f294",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/TopologyApiService.scala",
        "patchSetId": 25
      },
      "lineNbr": 138,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "This will usually conflict with the REST API, probably best to use 8081 or something else.",
      "range": {
        "startLine": 138,
        "startChar": 32,
        "endLine": 138,
        "endChar": 36
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_5b9356fa",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/Aggregator.scala",
        "patchSetId": 25
      },
      "lineNbr": 42,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "How\u0027s this differnet to Observable.merge(Observable[Observable[]] ?",
      "range": {
        "startLine": 42,
        "startChar": 6,
        "endLine": 42,
        "endChar": 16
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_bb036a72",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/ServerState.scala",
        "patchSetId": 25
      },
      "lineNbr": 33,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "This is very OLD!",
      "range": {
        "startLine": 33,
        "startChar": 50,
        "endLine": 33,
        "endChar": 59
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_1bf8be7b",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/ServerState.scala",
        "patchSetId": 25
      },
      "lineNbr": 65,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "nit: spurious line",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 65,
        "endChar": 0
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_7b30d256",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/ServerState.scala",
        "patchSetId": 25
      },
      "lineNbr": 154,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "ditto",
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_dbfe266b",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/Session.scala",
        "patchSetId": 25
      },
      "lineNbr": 33,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "I missed when this went into the protobuf but, why not have the ID in the request always be a String?",
      "range": {
        "startLine": 33,
        "startChar": 7,
        "endLine": 33,
        "endChar": 9
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_bb3a4a34",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/SessionInventory.scala",
        "patchSetId": 25
      },
      "lineNbr": 92,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "I think this is worth a static import of fromProto",
      "range": {
        "startLine": 92,
        "startChar": 39,
        "endLine": 92,
        "endChar": 48
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_1b3f1e27",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/SessionInventory.scala",
        "patchSetId": 25
      },
      "lineNbr": 94,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "where is this defined? couldn\u0027t we give it a constructor to take an id and do the fromProto by itself?",
      "range": {
        "startLine": 94,
        "startChar": 25,
        "endLine": 94,
        "endChar": 29
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_fb3b2236",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/SessionInventory.scala",
        "patchSetId": 25
      },
      "lineNbr": 119,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "nit: having some names on these threads might be useful.",
      "range": {
        "startLine": 119,
        "startChar": 36,
        "endLine": 119,
        "endChar": 55
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_9bc78e12",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/SessionInventory.scala",
        "patchSetId": 25
      },
      "lineNbr": 152,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "source?",
      "range": {
        "startLine": 152,
        "startChar": 33,
        "endLine": 152,
        "endChar": 34
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_7bcc5236",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/SessionInventory.scala",
        "patchSetId": 25
      },
      "lineNbr": 165,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "This is actually not wrapping a storage so it\u0027s confusing. Maybe StorageEventInterpreter, ..Decorator, or something like that?",
      "range": {
        "startLine": 165,
        "startChar": 34,
        "endLine": 165,
        "endChar": 48
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_dbd106cf",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/SessionInventory.scala",
        "patchSetId": 25
      },
      "lineNbr": 197,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "extractId?",
      "range": {
        "startLine": 197,
        "startChar": 22,
        "endLine": 197,
        "endChar": 33
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_fbd7a2bd",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/SessionInventory.scala",
        "patchSetId": 25
      },
      "lineNbr": 208,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "why not just buffer?",
      "range": {
        "startLine": 208,
        "startChar": 6,
        "endLine": 208,
        "endChar": 18
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_bbd6cac3",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/SessionInventory.scala",
        "patchSetId": 25
      },
      "lineNbr": 208,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "is this public? Otherwise val can be removed",
      "range": {
        "startLine": 208,
        "startChar": 19,
        "endLine": 208,
        "endChar": 22
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_1b027e3e",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/SessionInventory.scala",
        "patchSetId": 25
      },
      "lineNbr": 218,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "I think this is unnecessary. If I read correctly you\u0027re just trying to make consumers non concurrent. This can be achieved easily if you just keep a single thread executor, and subscribe to Zoom always with an .observeOn(Schedulers.from(executor) , and possibly also subscribeOn in case you want to control the subscriptions too. This gives you single threaded producers on the buffer by design.",
      "range": {
        "startLine": 218,
        "startChar": 0,
        "endLine": 218,
        "endChar": 30
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_5be516a7",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/SessionInventory.scala",
        "patchSetId": 25
      },
      "lineNbr": 225,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "nit: can be removed",
      "range": {
        "startLine": 225,
        "startChar": 33,
        "endLine": 225,
        "endChar": 35
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_7b9a9215",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/SessionInventory.scala",
        "patchSetId": 25
      },
      "lineNbr": 233,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "IMO if we want the rewindable buffer to be a blocking queue, then we should make it blocking, but it looks like this Observer is too loaded with responsibilities beyond dropping new stuff in the buffer.",
      "range": {
        "startLine": 233,
        "startChar": 21,
        "endLine": 233,
        "endChar": 29
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_1bdb9eee",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/SessionInventory.scala",
        "patchSetId": 25
      },
      "lineNbr": 352,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "As this is now, you should get off the ZOOM thread before doing this or otherwise you\u0027re blocking it. But anyway, I think you can remove the whole locking (See above)",
      "range": {
        "startLine": 352,
        "startChar": 28,
        "endLine": 352,
        "endChar": 37
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_bb888ae8",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/SessionInventory.scala",
        "patchSetId": 25
      },
      "lineNbr": 413,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "Maybe you can make:\n\nval destroy \u003d makeAction0 { // code inside destroy() }\n\nAnd then this is just\n\n.doOnTerminate(destroy)\n.doOnUnsubscribe(unsubscribe)",
      "range": {
        "startLine": 413,
        "startChar": 14,
        "endLine": 413,
        "endChar": 39
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_1b6d5e33",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/SessionInventory.scala",
        "patchSetId": 25
      },
      "lineNbr": 428,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "needed? do we actually need to have terminate() and destroy() separate?\n\nMaybe moving the message simplifies this.",
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_5b77d602",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/SessionInventory.scala",
        "patchSetId": 25
      },
      "lineNbr": 434,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "Since there is a log msg already, it would make sense to have more info (or not have it at all)",
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_db5aa682",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/topology/server/SessionInventory.scala",
        "patchSetId": 25
      },
      "lineNbr": 457,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-02-04T12:34:04Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 457,
        "startChar": 12,
        "endLine": 457,
        "endChar": 21
      },
      "revId": "13b34d007c0bd56bbc2364b47e61ba44068c4ab3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}