{
  "comments": [
    {
      "key": {
        "uuid": "5a72e520_f03cd6c1",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/package.scala",
        "patchSetId": 30
      },
      "lineNbr": 2,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-03-09T11:33:45Z",
      "side": 1,
      "message": "the presence of this change confuses me",
      "range": {
        "startLine": 2,
        "startChar": 13,
        "endLine": 2,
        "endChar": 17
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_f063f6da",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/discovery/MidonetDiscovery.scala",
        "patchSetId": 30
      },
      "lineNbr": 55,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-03-09T11:33:45Z",
      "side": 1,
      "message": "It should be a protobuf to keep things consistent. It must be possible to easily extend the payload in new versions and have old versions be compatible, since it\u0027s effectively a message between the server and the client.",
      "range": {
        "startLine": 52,
        "startChar": 34,
        "endLine": 55,
        "endChar": 31
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_70646649",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/discovery/MidonetDiscovery.scala",
        "patchSetId": 30
      },
      "lineNbr": 55,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-09T15:25:24Z",
      "side": 1,
      "message": "mmm that would be great. But this is \"feature\"/\"limitation\" of curator/jackson. I\u0027ll check if protobufs can be serialized as json by jackson, but it doesn\u0027t ring a bell on me.",
      "parentUuid": "5a72e520_f063f6da",
      "range": {
        "startLine": 52,
        "startChar": 34,
        "endLine": 55,
        "endChar": 31
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_7078e68f",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/discovery/MidonetDiscovery.scala",
        "patchSetId": 30
      },
      "lineNbr": 99,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-03-09T11:33:45Z",
      "side": 1,
      "message": "you could just put one @Inject outside the (",
      "range": {
        "startLine": 99,
        "startChar": 28,
        "endLine": 99,
        "endChar": 34
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_f04f76bc",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/discovery/MidonetDiscovery.scala",
        "patchSetId": 30
      },
      "lineNbr": 99,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-09T15:25:24Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "5a72e520_7078e68f",
      "range": {
        "startLine": 99,
        "startChar": 28,
        "endLine": 99,
        "endChar": 34
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_70862667",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/discovery/MidonetDiscovery.scala",
        "patchSetId": 30
      },
      "lineNbr": 200,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-03-09T11:33:45Z",
      "side": 1,
      "message": "a subject is already an observable.",
      "range": {
        "startLine": 200,
        "startChar": 29,
        "endLine": 200,
        "endChar": 41
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_104fb2be",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/discovery/MidonetDiscovery.scala",
        "patchSetId": 30
      },
      "lineNbr": 200,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-09T15:25:24Z",
      "side": 1,
      "message": "Just did that to limit the visibility, so clients wouldn\u0027t be able to send events to it.",
      "parentUuid": "5a72e520_70862667",
      "range": {
        "startLine": 200,
        "startChar": 29,
        "endLine": 200,
        "endChar": 41
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_3372f849",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/discovery/MidonetDiscovery.scala",
        "patchSetId": 30
      },
      "lineNbr": 200,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-03-09T17:31:37Z",
      "side": 1,
      "message": "Ah, good point. Leave as is then.",
      "parentUuid": "5a72e520_104fb2be",
      "range": {
        "startLine": 200,
        "startChar": 29,
        "endLine": 200,
        "endChar": 41
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_50ea0a10",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/discovery/MidonetDiscovery.scala",
        "patchSetId": 30
      },
      "lineNbr": 219,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-03-09T11:33:45Z",
      "side": 1,
      "message": "I feel like this should use the observable, rather than going directly to the cache, but I can\u0027t find a method on Observable that does what I want :/",
      "range": {
        "startLine": 219,
        "startChar": 8,
        "endLine": 219,
        "endChar": 13
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_90d2c2d0",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/discovery/MidonetDiscovery.scala",
        "patchSetId": 30
      },
      "lineNbr": 219,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-09T15:25:24Z",
      "side": 1,
      "message": "Not sure I follow. The observable is the rx interface of the client. In fact, The cache is managed by curator and we register a callback for updates on the cache. That callback is the one sending the updated cache to the observable.",
      "parentUuid": "5a72e520_50ea0a10",
      "range": {
        "startLine": 219,
        "startChar": 8,
        "endLine": 219,
        "endChar": 13
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_d3ca844e",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/discovery/MidonetDiscovery.scala",
        "patchSetId": 30
      },
      "lineNbr": 219,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-03-09T17:31:37Z",
      "side": 1,
      "message": "I wanted both to be accessing the same data source. the cache only populates observable via a callback, so I wouldn\u0027t consider them the same data source as such. Ignore me though. I\u0027m just being picky.",
      "parentUuid": "5a72e520_90d2c2d0",
      "range": {
        "startLine": 219,
        "startChar": 8,
        "endLine": 219,
        "endChar": 13
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_10ba5223",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/discovery/MidonetDiscovery.scala",
        "patchSetId": 30
      },
      "lineNbr": 223,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-03-09T11:33:45Z",
      "side": 1,
      "message": "doesn\u0027t seem like something that should be a member of the client class.",
      "range": {
        "startLine": 223,
        "startChar": 8,
        "endLine": 223,
        "endChar": 22
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_d0db5aeb",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/discovery/MidonetDiscovery.scala",
        "patchSetId": 30
      },
      "lineNbr": 223,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-09T15:25:24Z",
      "side": 1,
      "message": "Yes, I\u0027ll remove.",
      "parentUuid": "5a72e520_10ba5223",
      "range": {
        "startLine": 223,
        "startChar": 8,
        "endLine": 223,
        "endChar": 22
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_d0afdae1",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/discovery/MidonetDiscovery.scala",
        "patchSetId": 30
      },
      "lineNbr": 237,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-03-09T11:33:45Z",
      "side": 1,
      "message": "I\u0027d make these mandatory. Perhaps even use Guava\u0027s HostAndPort.",
      "range": {
        "startLine": 237,
        "startChar": 25,
        "endLine": 237,
        "endChar": 67
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_50968af1",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/discovery/MidonetDiscovery.scala",
        "patchSetId": 30
      },
      "lineNbr": 237,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-09T15:25:24Z",
      "side": 1,
      "message": "Yes, I had the same feeling. Ernest wanted to specify everything on the payload as it could handle all necessary information in one object though. I don\u0027t have a strong opinion. As a compromise, we decided to make everything optional and check that at least the payload is defined if server/port are empty at registration time (line 152).",
      "parentUuid": "5a72e520_d0afdae1",
      "range": {
        "startLine": 237,
        "startChar": 25,
        "endLine": 237,
        "endChar": 67
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_53b774d8",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/discovery/MidonetDiscovery.scala",
        "patchSetId": 30
      },
      "lineNbr": 237,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-03-09T17:31:37Z",
      "side": 1,
      "message": "sharing hosts and ports is the most basic thing that service discovery does. I\u0027d need to see a strong motivating usecase to make them optional.",
      "parentUuid": "5a72e520_50968af1",
      "range": {
        "startLine": 237,
        "startChar": 25,
        "endLine": 237,
        "endChar": 67
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_a7cd0460",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/discovery/MidonetDiscovery.scala",
        "patchSetId": 30
      },
      "lineNbr": 237,
      "author": {
        "id": 1002750
      },
      "writtenOn": "2016-03-10T10:16:47Z",
      "side": 1,
      "message": "@Ivan, one of usual things we need in MEM is a full URI, which does not only have a host and port, but also, at least, a protocol and a path. We could pass the host and port via the pre-defined parameters, and the protocol and path in the payload, but it is a bit weird having to separate them (I would prefer being able to fetch all the information in the same way). Nevertheless, we can also live with that, so I will not fight over it ;-)",
      "parentUuid": "5a72e520_53b774d8",
      "range": {
        "startLine": 237,
        "startChar": 25,
        "endLine": 237,
        "endChar": 67
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_4d571103",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/discovery/MidonetDiscovery.scala",
        "patchSetId": 30
      },
      "lineNbr": 237,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-03-10T15:18:42Z",
      "side": 1,
      "message": "Ah, I had thought about URIs briefly yesterday. In that case, i\u0027d just put everything in the payload, so that it can all be user defined.",
      "parentUuid": "3a6ff13c_a7cd0460",
      "range": {
        "startLine": 237,
        "startChar": 25,
        "endLine": 237,
        "endChar": 67
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_6d73edb1",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/discovery/MidonetDiscovery.scala",
        "patchSetId": 30
      },
      "lineNbr": 237,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-10T15:23:20Z",
      "side": 1,
      "message": "SGTM. I\u0027ll update the patch removing the server/port parameters and making the payload mandatory.",
      "parentUuid": "3a6ff13c_4d571103",
      "range": {
        "startLine": 237,
        "startChar": 25,
        "endLine": 237,
        "endChar": 67
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_0d9b59ca",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/discovery/MidonetDiscovery.scala",
        "patchSetId": 30
      },
      "lineNbr": 237,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-03-10T15:27:28Z",
      "side": 1,
      "message": "did you find out if you can use a protobuf?",
      "parentUuid": "3a6ff13c_6d73edb1",
      "range": {
        "startLine": 237,
        "startChar": 25,
        "endLine": 237,
        "endChar": 67
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6ff13c_edc43d61",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/discovery/MidonetDiscovery.scala",
        "patchSetId": 30
      },
      "lineNbr": 237,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-10T16:34:39Z",
      "side": 1,
      "message": "Yep, forgot to answer. I don\u0027t think it\u0027s possible.\n\nSo protobufs are json serializable with jackson (the underlying serializer used by curator) but using an extra library (jackson-dataformat-protobuf). Sounds good until you realize that you need to bind this new data format with the jackson instance used by curator, but I don\u0027t see how to do it as the curator discovery framework doesn\u0027t expose any way to do it.",
      "parentUuid": "3a6ff13c_0d9b59ca",
      "range": {
        "startLine": 237,
        "startChar": 25,
        "endLine": 237,
        "endChar": 67
      },
      "revId": "562bccb63b8e2bf1f2bb856cad0b3ee413fc34ed",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}