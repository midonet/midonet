{
  "comments": [
    {
      "key": {
        "uuid": "facab960_70c73213",
        "filename": "midolman/src/main/java/org/midonet/midolman/host/interfaces/InterfaceDescription.java",
        "patchSetId": 16
      },
      "lineNbr": 134,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-05-22T10:39:47Z",
      "side": 1,
      "message": "why not just allow setting and getting a MAC?",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_edb520ce",
        "filename": "midolman/src/main/java/org/midonet/midolman/host/interfaces/InterfaceDescription.java",
        "patchSetId": 16
      },
      "lineNbr": 134,
      "author": {
        "id": 1002743
      },
      "writtenOn": "2015-05-25T15:34:53Z",
      "side": 1,
      "message": "I want to ask that question to the original implementer.",
      "parentUuid": "facab960_70c73213",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_070db890",
        "filename": "midolman/src/main/java/org/midonet/midolman/host/interfaces/InterfaceDescription.java",
        "patchSetId": 16
      },
      "lineNbr": 134,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-05-27T14:01:28Z",
      "side": 1,
      "message": "if the original implementer is still in the company, it\u0027s DMD!",
      "parentUuid": "facab960_edb520ce",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_6ad3b938",
        "filename": "midolman/src/main/scala/org/midonet/midolman/DatapathController.scala",
        "patchSetId": 16
      },
      "lineNbr": 178,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-05-24T10:59:40Z",
      "side": 1,
      "message": "make it a var and initialize in preStart?",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_4a73554d",
        "filename": "midolman/src/main/scala/org/midonet/midolman/DatapathController.scala",
        "patchSetId": 16
      },
      "lineNbr": 178,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-05-24T16:54:28Z",
      "side": 1,
      "message": "i think it should be a val: the NetlinkNotificationReader shouldn\u0027t be a trait and should be a class though, so we don\u0027t need the lazys.",
      "parentUuid": "facab960_6ad3b938",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_bac190e6",
        "filename": "midolman/src/main/scala/org/midonet/midolman/DatapathController.scala",
        "patchSetId": 16
      },
      "lineNbr": 178,
      "author": {
        "id": 1002743
      },
      "writtenOn": "2015-05-25T15:34:53Z",
      "side": 1,
      "message": "Sorry, this was the leftover of the previous patch version and this can be just val. But I don\u0027t get why NetlinkNotificationReader should be a class and lazy should be avoided so much.",
      "parentUuid": "facab960_4a73554d",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_4a17d5ed",
        "filename": "midolman/src/main/scala/org/midonet/midolman/DatapathController.scala",
        "patchSetId": 16
      },
      "lineNbr": 180,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-05-24T10:59:40Z",
      "side": 1,
      "message": "make def instead of a lazy val?",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_fa49588c",
        "filename": "midolman/src/main/scala/org/midonet/midolman/DatapathController.scala",
        "patchSetId": 16
      },
      "lineNbr": 180,
      "author": {
        "id": 1002743
      },
      "writtenOn": "2015-05-25T15:34:53Z",
      "side": 1,
      "message": "This as well",
      "parentUuid": "facab960_4a17d5ed",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_a71decbf",
        "filename": "midolman/src/main/scala/org/midonet/midolman/DatapathController.scala",
        "patchSetId": 16
      },
      "lineNbr": 180,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-05-27T14:01:28Z",
      "side": 1,
      "message": "Because it adds an implicit hidden volatile and a lock, it feels kind of messy:\n\nhttp://stackoverflow.com/questions/17642275/how-are-lazy-val-class-variables-implemented-in-scala-2-10",
      "parentUuid": "facab960_fa49588c",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_30e5aaa8",
        "filename": "midolman/src/main/scala/org/midonet/midolman/DatapathController.scala",
        "patchSetId": 16
      },
      "lineNbr": 197,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-05-22T10:39:47Z",
      "side": 1,
      "message": "why are we copying the buffer here instead of doing deserialization here and sending the dport to the datapath controller? like so:\n\nself ! DpPortDeleted(port)",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_ad65d846",
        "filename": "midolman/src/main/scala/org/midonet/midolman/DatapathController.scala",
        "patchSetId": 16
      },
      "lineNbr": 197,
      "author": {
        "id": 1002743
      },
      "writtenOn": "2015-05-25T15:34:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_30e5aaa8",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_0ae4ed0b",
        "filename": "midolman/src/main/scala/org/midonet/midolman/DatapathController.scala",
        "patchSetId": 16
      },
      "lineNbr": 354,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-05-24T10:59:40Z",
      "side": 1,
      "message": "I\u0027m confused, are these for OVS or RTNETLINK notifications? They look like OVS, but why bundle that in this patch?",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_0a794d2f",
        "filename": "midolman/src/main/scala/org/midonet/midolman/DatapathController.scala",
        "patchSetId": 16
      },
      "lineNbr": 354,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-05-24T16:54:28Z",
      "side": 1,
      "message": "this is to detect when an ovs port becomes unplugged so we can re-create it. since rtnelink doesn\u0027t give us the endpoint type, we can\u0027t reuse the same logic.",
      "parentUuid": "facab960_0ae4ed0b",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_c77910fe",
        "filename": "midolman/src/main/scala/org/midonet/midolman/DatapathController.scala",
        "patchSetId": 16
      },
      "lineNbr": 354,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-05-27T14:01:28Z",
      "side": 1,
      "message": "Got it.",
      "parentUuid": "facab960_0a794d2f",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_10d8a6ee",
        "filename": "midolman/src/main/scala/org/midonet/midolman/DatapathController.scala",
        "patchSetId": 16
      },
      "lineNbr": 364,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-05-22T10:39:47Z",
      "side": 1,
      "message": "if we are just interested in the nltype, why don\u0027t we just read that??",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_ed5fe070",
        "filename": "midolman/src/main/scala/org/midonet/midolman/DatapathController.scala",
        "patchSetId": 16
      },
      "lineNbr": 364,
      "author": {
        "id": 1002743
      },
      "writtenOn": "2015-05-25T15:34:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_10d8a6ee",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_b0e8da7d",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/DatapathPortEntangler.scala",
        "patchSetId": 16
      },
      "lineNbr": 115,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-05-22T10:39:47Z",
      "side": 1,
      "message": "what other programs?",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_2d6aa81a",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/DatapathPortEntangler.scala",
        "patchSetId": 16
      },
      "lineNbr": 115,
      "author": {
        "id": 1002743
      },
      "writtenOn": "2015-05-25T15:34:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_b0e8da7d",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_50f94e4c",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/DatapathPortEntangler.scala",
        "patchSetId": 16
      },
      "lineNbr": 124,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-05-22T10:39:47Z",
      "side": 1,
      "message": "we should be checking dpPortNumToTriad. if it exists, it removes it from that map and calls addDpPort",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_4d77ec02",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/DatapathPortEntangler.scala",
        "patchSetId": 16
      },
      "lineNbr": 124,
      "author": {
        "id": 1002743
      },
      "writtenOn": "2015-05-25T15:34:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_50f94e4c",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_709572e3",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/DatapathPortEntangler.scala",
        "patchSetId": 16
      },
      "lineNbr": 125,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-05-22T10:39:47Z",
      "side": 1,
      "message": "i don\u0027t understand what we are doing with the isUp field?",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_8d601437",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/DatapathPortEntangler.scala",
        "patchSetId": 16
      },
      "lineNbr": 125,
      "author": {
        "id": 1002743
      },
      "writtenOn": "2015-05-25T15:34:53Z",
      "side": 1,
      "message": "updateDangling is called only when isDangling is satisfied, namely if isUp is true. I forgot to put that logic here.",
      "parentUuid": "facab960_709572e3",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_6abad9e2",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/scanner/DefaultInterfaceScanner.scala",
        "patchSetId": 16
      },
      "lineNbr": 106,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-05-24T10:59:40Z",
      "side": 1,
      "message": "shouldn\u0027t this parse the string? It looks like this method never returns PHYS as link type.",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_0d540453",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/scanner/DefaultInterfaceScanner.scala",
        "patchSetId": 16
      },
      "lineNbr": 106,
      "author": {
        "id": 1002743
      },
      "writtenOn": "2015-05-25T15:34:53Z",
      "side": 1,
      "message": "Surprisingly, even eth0 has this nested attribute and it says \"veth\". I\u0027d say we can\u0027t distinguish physical interfaces with virtual interfaces. I believe it\u0027s true even we can /sys/devices/virtual/net/ or /sys/class/net/.",
      "parentUuid": "facab960_6abad9e2",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_e77e14e4",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/scanner/DefaultInterfaceScanner.scala",
        "patchSetId": 16
      },
      "lineNbr": 106,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-05-27T14:01:28Z",
      "side": 1,
      "message": "...but still, we are discarding the attribute value, aren\u0027t we? is veth the only possible value? what values are there?",
      "parentUuid": "facab960_0d540453",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_cf903b98",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/scanner/DefaultInterfaceScanner.scala",
        "patchSetId": 16
      },
      "lineNbr": 106,
      "author": {
        "id": 1002743
      },
      "writtenOn": "2015-05-28T08:11:43Z",
      "side": 1,
      "message": "s/even we can/even if we read/",
      "parentUuid": "facab960_0d540453",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_8f4b932a",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/scanner/DefaultInterfaceScanner.scala",
        "patchSetId": 16
      },
      "lineNbr": 106,
      "author": {
        "id": 1002743
      },
      "writtenOn": "2015-05-28T08:11:43Z",
      "side": 1,
      "message": "Other possible values are \"bridge\", \"tun\" and so on. If IFLA_INFO_KIND is not provided, that\u0027s something and we just can\u0027t say what it is at that point.",
      "parentUuid": "facab960_e77e14e4",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_4f134b66",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/scanner/DefaultInterfaceScanner.scala",
        "patchSetId": 16
      },
      "lineNbr": 106,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-05-28T08:26:56Z",
      "side": 1,
      "message": "so, if there are other possible values, my question remains, why are we discarding the value of the attribute?",
      "parentUuid": "facab960_cf903b98",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_0664c820",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/scanner/DefaultInterfaceScanner.scala",
        "patchSetId": 16
      },
      "lineNbr": 106,
      "author": {
        "id": 1002743
      },
      "writtenOn": "2015-05-29T09:27:01Z",
      "side": 1,
      "message": "Honestly I expected IFLA_INFO_KIND can be used to determine if an interface is virtual or physical. But it turned out I can\u0027t event with other attributes. So this match block is no longer necessary. I\u0027ll eliminate this.",
      "parentUuid": "facab960_4f134b66",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_af48572e",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/scanner/DefaultInterfaceScanner.scala",
        "patchSetId": 16
      },
      "lineNbr": 124,
      "author": {
        "id": 1002743
      },
      "writtenOn": "2015-05-28T08:11:43Z",
      "side": 1,
      "message": "For instance, I\u0027m looking at IFLA_INFO_KIND and check if it\u0027s \"tun\" here.",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_8abf1dd0",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/scanner/DefaultInterfaceScanner.scala",
        "patchSetId": 16
      },
      "lineNbr": 307,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-05-24T10:59:40Z",
      "side": 1,
      "message": "s/the broadcast/an rtnetlink broadcast/",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_2d51c862",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/scanner/DefaultInterfaceScanner.scala",
        "patchSetId": 16
      },
      "lineNbr": 307,
      "author": {
        "id": 1002743
      },
      "writtenOn": "2015-05-25T15:34:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_8abf1dd0",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_0acb0d73",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/scanner/test/InterfaceScannerIntegrationTest.scala",
        "patchSetId": 16
      },
      "lineNbr": 41,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-05-24T10:59:40Z",
      "side": 1,
      "message": "Taku take a look at this patch:\n\nhttps://review.gerrithub.io/#/c/233595/\n\nIt\u0027s not merged yet but it introduces a proper \u0027integration\u0027 tests task that will run as root and run ovs and quagga tests. It uses scala test, so we can write tests that will yield proper test reports.\n\nWe can port these tests to the \u0027integration\u0027 task, without the \u0027futures\u0027 interface (all blocking and synchronous) in a follow-up patch, not necessary here.",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_cdd13ccf",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/scanner/test/InterfaceScannerIntegrationTest.scala",
        "patchSetId": 16
      },
      "lineNbr": 41,
      "author": {
        "id": 1002743
      },
      "writtenOn": "2015-05-25T15:34:53Z",
      "side": 1,
      "message": "Great. I\u0027ll take a look at it. It makes everything much easier.",
      "parentUuid": "facab960_0acb0d73",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_aaab0188",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/scanner/test/InterfaceScannerIntegrationTest.scala",
        "patchSetId": 16
      },
      "lineNbr": 153,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-05-24T10:59:40Z",
      "side": 1,
      "message": "If InterfaceDescription implemented a deep equals() method, wouldn\u0027t this code be just be:\n\ninterfaceDescs \u003d\u003d expectedInterfaceDescs?",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_4177b302",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/scanner/test/InterfaceScannerIntegrationTest.scala",
        "patchSetId": 16
      },
      "lineNbr": 153,
      "author": {
        "id": 1002743
      },
      "writtenOn": "2015-05-26T07:37:34Z",
      "side": 1,
      "message": "DefaultInterfaceScanner populates several fields of an InterfaceDescription instance with the private methods and for instance, MAC address is generated by the kernel randomly. So I\u0027d just leave it as is now. But let me revisit this when I rewrite this test with ScalaTest in the next iteration.",
      "parentUuid": "facab960_aaab0188",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_075bf887",
        "filename": "midolman/src/main/scala/org/midonet/midolman/host/scanner/test/InterfaceScannerIntegrationTest.scala",
        "patchSetId": 16
      },
      "lineNbr": 153,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-05-27T14:01:28Z",
      "side": 1,
      "message": "Sure!",
      "parentUuid": "facab960_4177b302",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_cab045f7",
        "filename": "midolman/src/test/scala/org/midonet/midolman/util/MockSelector.scala",
        "patchSetId": 16
      },
      "lineNbr": 23,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-05-24T10:59:40Z",
      "side": 1,
      "message": "are these still needed now that we are doing blocking IO?",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_8dbc946e",
        "filename": "midolman/src/test/scala/org/midonet/midolman/util/MockSelector.scala",
        "patchSetId": 16
      },
      "lineNbr": 23,
      "author": {
        "id": 1002743
      },
      "writtenOn": "2015-05-25T15:34:53Z",
      "side": 1,
      "message": "It does nothing but MockNetlinkChannel requires it and MockDatapathModule requires that.",
      "parentUuid": "facab960_cab045f7",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_ea942946",
        "filename": "midolman/src/test/scala/org/midonet/midolman/util/MockSelectorProvider.scala",
        "patchSetId": 16
      },
      "lineNbr": 23,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-05-24T10:59:40Z",
      "side": 1,
      "message": "ditto.",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_adc158e6",
        "filename": "midolman/src/test/scala/org/midonet/midolman/util/MockSelectorProvider.scala",
        "patchSetId": 16
      },
      "lineNbr": 23,
      "author": {
        "id": 1002743
      },
      "writtenOn": "2015-05-25T15:34:53Z",
      "side": 1,
      "message": "It does nothing but MockNetlinkChannel requires it and MockDatapathModule requires that.",
      "parentUuid": "facab960_ea942946",
      "revId": "04d273e49795b2ba6b9aa73bbf2c6bbba6ef25ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}