{
  "comments": [
    {
      "key": {
        "uuid": "5a72e520_521797ed",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/PacketExecutor.scala",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-02-29T11:01:31Z",
      "side": 1,
      "message": "you could give this a default value.",
      "range": {
        "startLine": 123,
        "startChar": 39,
        "endLine": 123,
        "endChar": 50
      },
      "revId": "06d110107243f0c8ecac5968079e8d4c55f21497",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_529cf769",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/PacketExecutor.scala",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2016-02-29T11:18:08Z",
      "side": 1,
      "message": "You mean to eliminate the other clampMss value? I originally had it that way, but if I move the check of ctx.inputPort into this function, then the whole thing has to be nested another level deep.",
      "parentUuid": "5a72e520_521797ed",
      "range": {
        "startLine": 123,
        "startChar": 39,
        "endLine": 123,
        "endChar": 50
      },
      "revId": "06d110107243f0c8ecac5968079e8d4c55f21497",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_f201633a",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/PacketExecutor.scala",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-02-29T11:58:59Z",
      "side": 1,
      "message": "I guess. I don\u0027t care too much about that.",
      "parentUuid": "5a72e520_529cf769",
      "range": {
        "startLine": 123,
        "startChar": 39,
        "endLine": 123,
        "endChar": 50
      },
      "revId": "06d110107243f0c8ecac5968079e8d4c55f21497",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_92874f61",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/PacketExecutor.scala",
        "patchSetId": 2
      },
      "lineNbr": 125,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-02-29T11:01:31Z",
      "side": 1,
      "message": "memory allocation. Since we run this for most packets, we should avoid allocating.",
      "range": {
        "startLine": 125,
        "startChar": 22,
        "endLine": 125,
        "endChar": 32
      },
      "revId": "06d110107243f0c8ecac5968079e8d4c55f21497",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_928d8f34",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/PacketExecutor.scala",
        "patchSetId": 2
      },
      "lineNbr": 125,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2016-02-29T11:18:08Z",
      "side": 1,
      "message": "Fixed in the new patch.",
      "parentUuid": "5a72e520_92874f61",
      "range": {
        "startLine": 125,
        "startChar": 22,
        "endLine": 125,
        "endChar": 32
      },
      "revId": "06d110107243f0c8ecac5968079e8d4c55f21497",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_f295e388",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/PacketExecutor.scala",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-02-29T11:01:31Z",
      "side": 1,
      "message": "assert that it is",
      "range": {
        "startLine": 134,
        "startChar": 0,
        "endLine": 134,
        "endChar": 58
      },
      "revId": "06d110107243f0c8ecac5968079e8d4c55f21497",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_32769b3f",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/PacketExecutor.scala",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2016-02-29T11:18:08Z",
      "side": 1,
      "message": "Not literally assert, right? Is there some specific exception I should throw?",
      "parentUuid": "5a72e520_f295e388",
      "range": {
        "startLine": 134,
        "startChar": 0,
        "endLine": 134,
        "endChar": 58
      },
      "revId": "06d110107243f0c8ecac5968079e8d4c55f21497",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_b29feb02",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/PacketExecutor.scala",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-02-29T11:58:59Z",
      "side": 1,
      "message": "Since this is user-input I wouldn\u0027t put a literal assert, but I\u0027d throw up out of the method with IllegalStateException or something.",
      "parentUuid": "5a72e520_32769b3f",
      "range": {
        "startLine": 134,
        "startChar": 0,
        "endLine": 134,
        "endChar": 58
      },
      "revId": "06d110107243f0c8ecac5968079e8d4c55f21497",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_92d82f55",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/PacketExecutor.scala",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-02-29T11:01:31Z",
      "side": 1,
      "message": "break. Try to keep the number of return points from methods as low as possible.",
      "revId": "06d110107243f0c8ecac5968079e8d4c55f21497",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_f2d083f9",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/PacketExecutor.scala",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2016-02-29T11:31:13Z",
      "side": 1,
      "message": "There\u0027s no break in Scala.",
      "parentUuid": "5a72e520_92d82f55",
      "revId": "06d110107243f0c8ecac5968079e8d4c55f21497",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_92c10fe7",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/PacketExecutor.scala",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-02-29T11:58:59Z",
      "side": 1,
      "message": "scala sucks",
      "parentUuid": "5a72e520_f2d083f9",
      "revId": "06d110107243f0c8ecac5968079e8d4c55f21497",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_b541950d",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/PacketExecutor.scala",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2016-02-29T12:53:28Z",
      "side": 1,
      "message": "No continue, either. I think maybe the idea is to encourage smaller functions. Like if you need to use a break, you should just break the loop out into another function and return instead.",
      "parentUuid": "5a72e520_92c10fe7",
      "revId": "06d110107243f0c8ecac5968079e8d4c55f21497",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_72bad3e2",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/PacketExecutor.scala",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-02-29T11:01:31Z",
      "side": 1,
      "message": "again, try to keep return points low. instead of if (is null) return, do if (is not null) { /* all the things */ }",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 152,
        "endChar": 46
      },
      "revId": "06d110107243f0c8ecac5968079e8d4c55f21497",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e520_d27387af",
        "filename": "midonet-util/src/main/java/org/midonet/packets/TCP.java",
        "patchSetId": 2
      },
      "lineNbr": 180,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-02-29T11:01:31Z",
      "side": 1,
      "message": "very very minor thing. looks strange to append a char for ( but a string for ).",
      "range": {
        "startLine": 180,
        "startChar": 35,
        "endLine": 180,
        "endChar": 41
      },
      "revId": "06d110107243f0c8ecac5968079e8d4c55f21497",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}