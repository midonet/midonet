{
  "comments": [
    {
      "key": {
        "uuid": "facab960_0690ec48",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/MergedMap.scala",
        "patchSetId": 22
      },
      "lineNbr": 62,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-19T09:48:34Z",
      "side": 1,
      "message": "Minor comment: I\u0027m not sure whether this couldn\u0027t be simpler as:\n\n  def addOpinion\n  def removeOpinion\n\nIt seems that the observer here doesn\u0027t really follow the rx contract, there is no subscription, no onError, onComplete",
      "range": {
        "startLine": 62,
        "startChar": 4,
        "endLine": 62,
        "endChar": 49
      },
      "revId": "dd03c9e68c002abdb0cbf29761e3403bd5df535a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_e6014806",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/MergedMap.scala",
        "patchSetId": 22
      },
      "lineNbr": 90,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-19T09:48:34Z",
      "side": 1,
      "message": "Aren\u0027t you missing some $ here? Also, should this also use a simpler log namespace, like we\u0027re using in other parts of the code?",
      "range": {
        "startLine": 90,
        "startChar": 41,
        "endLine": 90,
        "endChar": 57
      },
      "revId": "dd03c9e68c002abdb0cbf29761e3403bd5df535a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_86407c35",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/MergedMap.scala",
        "patchSetId": 22
      },
      "lineNbr": 95,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-19T09:48:34Z",
      "side": 1,
      "message": "Does this have to be an atomic? It looks like a volatile would suffice.",
      "range": {
        "startLine": 95,
        "startChar": 4,
        "endLine": 95,
        "endChar": 49
      },
      "revId": "dd03c9e68c002abdb0cbf29761e3403bd5df535a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_062e2c92",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/MergedMap.scala",
        "patchSetId": 22
      },
      "lineNbr": 113,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-19T09:48:34Z",
      "side": 1,
      "message": "If writes to this map are synchronized, is making the snapshot necessary?",
      "range": {
        "startLine": 113,
        "startChar": 61,
        "endLine": 113,
        "endChar": 77
      },
      "revId": "dd03c9e68c002abdb0cbf29761e3403bd5df535a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_a632e0ef",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/MergedMap.scala",
        "patchSetId": 22
      },
      "lineNbr": 127,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-19T09:48:34Z",
      "side": 1,
      "message": "Nit: parantheses",
      "range": {
        "startLine": 127,
        "startChar": 55,
        "endLine": 127,
        "endChar": 66
      },
      "revId": "dd03c9e68c002abdb0cbf29761e3403bd5df535a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_e6bce8de",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/MergedMap.scala",
        "patchSetId": 22
      },
      "lineNbr": 150,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-19T09:48:34Z",
      "side": 1,
      "message": "Needed?",
      "range": {
        "startLine": 150,
        "startChar": 16,
        "endLine": 150,
        "endChar": 32
      },
      "revId": "dd03c9e68c002abdb0cbf29761e3403bd5df535a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_e66068a7",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/MergedMap.scala",
        "patchSetId": 22
      },
      "lineNbr": 152,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-19T09:48:34Z",
      "side": 1,
      "message": "How about using a sorted map for opinions? That would give you O(log n) for insertions but O(1) for getting the winner, which you call quite often, isn\u0027t it?",
      "range": {
        "startLine": 152,
        "startChar": 12,
        "endLine": 152,
        "endChar": 38
      },
      "revId": "dd03c9e68c002abdb0cbf29761e3403bd5df535a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_e69dc8bd",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/MergedMap.scala",
        "patchSetId": 22
      },
      "lineNbr": 159,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-19T09:48:34Z",
      "side": 1,
      "message": "Isn\u0027t the entryCount the number of keys you have in the cache? In that case, is it needed at all?\n\nBtw, shouldn\u0027t you remove entries from the map, when they are empty? Otherwise, wouldn\u0027t the map leak objects for keys that are no longer used?",
      "range": {
        "startLine": 159,
        "startChar": 12,
        "endLine": 159,
        "endChar": 40
      },
      "revId": "dd03c9e68c002abdb0cbf29761e3403bd5df535a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_06346c91",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/MergedMap.scala",
        "patchSetId": 22
      },
      "lineNbr": 160,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-19T09:48:34Z",
      "side": 1,
      "message": "This can be optimized a bit, but not calling cache(key) repeatedly.",
      "range": {
        "startLine": 160,
        "startChar": 19,
        "endLine": 160,
        "endChar": 29
      },
      "revId": "dd03c9e68c002abdb0cbf29761e3403bd5df535a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_060d4ce9",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/MergedMap.scala",
        "patchSetId": 22
      },
      "lineNbr": 173,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-19T09:48:34Z",
      "side": 1,
      "message": ".nonEmpty",
      "range": {
        "startLine": 173,
        "startChar": 12,
        "endLine": 173,
        "endChar": 33
      },
      "revId": "dd03c9e68c002abdb0cbf29761e3403bd5df535a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_4613d40c",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/MergedMap.scala",
        "patchSetId": 22
      },
      "lineNbr": 195,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-19T09:48:34Z",
      "side": 1,
      "message": "What if prevWinner is null (note, that you\u0027re calling this method based on outside input arriving on the bus - hence input validation)? Wouldn\u0027t scala \u003d\u003d be safer than .equals? Same comment goes for other equals.",
      "range": {
        "startLine": 195,
        "startChar": 21,
        "endLine": 195,
        "endChar": 31
      },
      "revId": "dd03c9e68c002abdb0cbf29761e3403bd5df535a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_861f9c07",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/MergedMap.scala",
        "patchSetId": 22
      },
      "lineNbr": 241,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-19T09:48:34Z",
      "side": 1,
      "message": "Can this be an Iterable? Any reason to wrap it in a list?",
      "range": {
        "startLine": 241,
        "startChar": 30,
        "endLine": 241,
        "endChar": 34
      },
      "revId": "dd03c9e68c002abdb0cbf29761e3403bd5df535a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_e6d5c81c",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/MergedMap.scala",
        "patchSetId": 22
      },
      "lineNbr": 242,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-19T09:48:34Z",
      "side": 1,
      "message": "Now, should this use a snapshot? I\u0027m not 100% sure, so I would investigate whether concurrent changes to the map affects the result here.",
      "range": {
        "startLine": 242,
        "startChar": 8,
        "endLine": 242,
        "endChar": 55
      },
      "revId": "dd03c9e68c002abdb0cbf29761e3403bd5df535a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_2656d006",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/MergedMap.scala",
        "patchSetId": 22
      },
      "lineNbr": 243,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-19T09:48:34Z",
      "side": 1,
      "message": ".keys",
      "range": {
        "startLine": 243,
        "startChar": 15,
        "endLine": 243,
        "endChar": 38
      },
      "revId": "dd03c9e68c002abdb0cbf29761e3403bd5df535a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}