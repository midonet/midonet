{
  "comments": [
    {
      "key": {
        "uuid": "9ad9bd40_f3d08fcb",
        "filename": "tests/mdts/tests/functional_tests/test_tracing.py",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-08-27T13:15:41Z",
      "side": 1,
      "message": "does this mean forward and return packets are not linked?",
      "revId": "62fbab223462f53154004bf636b8982b8af5de8a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_ae8e9e25",
        "filename": "tests/mdts/tests/functional_tests/test_tracing.py",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2015-08-27T15:10:30Z",
      "side": 1,
      "message": "Not currently. We should add it and I\u0027ve thought about how to do it, but it\u0027s never been resourced.",
      "parentUuid": "9ad9bd40_f3d08fcb",
      "revId": "62fbab223462f53154004bf636b8982b8af5de8a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_934ae3aa",
        "filename": "tests/mdts/tests/functional_tests/test_tracing.py",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-08-27T13:15:41Z",
      "side": 1,
      "message": "these assertions seem equal to the ones above. what am i missing?",
      "revId": "62fbab223462f53154004bf636b8982b8af5de8a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_4e9fd250",
        "filename": "tests/mdts/tests/functional_tests/test_tracing.py",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2015-08-27T15:10:30Z",
      "side": 1,
      "message": "There\u0027s a 0 on line 181 that\u0027s a 1 on line 182. Its getting the number of hosts that added traces for a flow trace and asserting that it\u0027s 2 (ingress and egress host).",
      "parentUuid": "9ad9bd40_934ae3aa",
      "revId": "62fbab223462f53154004bf636b8982b8af5de8a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_e9f26005",
        "filename": "tests/mdts/tests/functional_tests/test_tracing.py",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-08-27T17:34:06Z",
      "side": 1,
      "message": "no, no, i meant between these and the ones in the previous test :p",
      "parentUuid": "9ad9bd40_4e9fd250",
      "revId": "62fbab223462f53154004bf636b8982b8af5de8a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_69fbb047",
        "filename": "tests/mdts/tests/functional_tests/test_tracing.py",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2015-08-27T18:30:10Z",
      "side": 1,
      "message": "this is over nat. it\u0027s checking that the flow state key is matching correctly even though the packet has been mangled.",
      "parentUuid": "9ad9bd40_e9f26005",
      "revId": "62fbab223462f53154004bf636b8982b8af5de8a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_278d4c32",
        "filename": "tests/mdts/tests/functional_tests/test_tracing.py",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-08-28T09:33:28Z",
      "side": 1,
      "message": "but this seems like something that belongs in a unit test, no?",
      "parentUuid": "9ad9bd40_69fbb047",
      "revId": "62fbab223462f53154004bf636b8982b8af5de8a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_679e7458",
        "filename": "tests/mdts/tests/functional_tests/test_tracing.py",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2015-08-28T09:43:43Z",
      "side": 1,
      "message": "There is a unit test, but there\u0027s a lot of fiddling to make sure the packet is transformed and then matched. I\u0027d be more comfortable if the match is done on a packet that\u0027s been mangled by ovs. Hence the test.",
      "parentUuid": "9ad9bd40_278d4c32",
      "revId": "62fbab223462f53154004bf636b8982b8af5de8a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_36dd7b43",
        "filename": "tests/mdts/tests/functional_tests/test_tracing.py",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-08-28T15:02:21Z",
      "side": 1,
      "message": "can you point me to the unit test? there really shouldn\u0027t be any need to mangle the packet, just assert that the trace key uses the headers as they look like at the end of the simulation.",
      "parentUuid": "9ad9bd40_679e7458",
      "revId": "62fbab223462f53154004bf636b8982b8af5de8a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_d6ed2ff1",
        "filename": "tests/mdts/tests/functional_tests/test_tracing.py",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2015-08-28T15:08:55Z",
      "side": 1,
      "message": "feature(\"Ingress/Egress matching\"), in FlowTracingTest. I actually don\u0027t mangle the packet, but I create one that matches what should have changed in the ingress simulation.",
      "parentUuid": "9ad9bd40_36dd7b43",
      "revId": "62fbab223462f53154004bf636b8982b8af5de8a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}