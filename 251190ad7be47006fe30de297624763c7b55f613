{
  "comments": [
    {
      "key": {
        "uuid": "baa041b7_ff892670",
        "filename": "nsdb/src/main/proto/topology.proto",
        "patchSetId": 1
      },
      "lineNbr": 443,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2016-10-03T07:56:11Z",
      "side": 1,
      "message": "neutron qos policy object is serialized like the following.\nit\u0027s better to follow, unless there\u0027s a strong reason not to.\n\n{\n   \"name\" : \"hoge\",\n   \"rules\" : [\n      {\n         \"max_kbps\" : 1000,\n         \"type\" : \"bandwidth_limit\",\n         \"id\" : \"202e5aa9-2560-4de8-b3f8-556371e873d5\",\n         \"max_burst_kbps\" : 0,\n         \"qos_policy_id\" : \"b4f344c8-cc67-484c-bcce-e4656c920eaf\"\n      }\n   ],\n   \"id\" : \"b4f344c8-cc67-484c-bcce-e4656c920eaf\",\n   \"tenant_id\" : \"9275f288155944c497e50c8bccdd127c\",\n   \"shared\" : false,\n   \"updated_at\" : \"2016-10-03T06:56:27Z\",\n   \"revision_number\" : 1,\n   \"created_at\" : \"2016-10-03T06:56:27Z\",\n   \"description\" : \"\"\n}",
      "revId": "251190ad7be47006fe30de297624763c7b55f613",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_9fd9fa58",
        "filename": "nsdb/src/main/proto/topology.proto",
        "patchSetId": 1
      },
      "lineNbr": 443,
      "author": {
        "id": 1003629
      },
      "writtenOn": "2016-10-03T08:51:52Z",
      "side": 1,
      "message": "Interesting.  None of that was in the Neutron API doc, or any online information I could find, nor did I find it in the code itself when I examined it.  \n\nDid we get this output as what is actually sent from the neutron client to the REST API?  If so, how much can we expect that this format will hold true across drivers and across revisions?  And lastly, I think this code should still be compatible, because I believe we ignore JSON elements that we cannot deserialize, so the question is how much we have to make sure we are full-featured and deserialize every element (this goes into the \"iterative\" approach model we were being asked to follow as well).  Could we just leave the feature here and then iteratively add more elements?  Or do we have to deserialize everything to make any part of this feature work?",
      "parentUuid": "baa041b7_ff892670",
      "revId": "251190ad7be47006fe30de297624763c7b55f613",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_dfbae2e0",
        "filename": "nsdb/src/main/proto/topology.proto",
        "patchSetId": 1
      },
      "lineNbr": 443,
      "author": {
        "id": 1002741
      },
      "writtenOn": "2016-10-03T08:58:13Z",
      "side": 1,
      "message": "Hi Takashi, Do you see any reason why we might need these extra fields? If not, how do you feel about an iterative approach where we add these fields as needed?",
      "parentUuid": "baa041b7_9fd9fa58",
      "revId": "251190ad7be47006fe30de297624763c7b55f613",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_5fcff27e",
        "filename": "nsdb/src/main/proto/topology.proto",
        "patchSetId": 1
      },
      "lineNbr": 443,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2016-10-03T09:04:58Z",
      "side": 1,
      "message": "the output i pasted is the result of to_dict() of the policy object.  it\u0027s versioned, so i expect they will maintain compatibility.  it was from version 1.3.\n\nit\u0027s fine to ignore uninteresting fields.\nmy suggestion is to use \"type\" field to distinguish rule types, rather than guessing from the existence of other fields.",
      "parentUuid": "baa041b7_9fd9fa58",
      "revId": "251190ad7be47006fe30de297624763c7b55f613",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_5f7db21a",
        "filename": "nsdb/src/main/proto/topology.proto",
        "patchSetId": 1
      },
      "lineNbr": 443,
      "author": {
        "id": 1003629
      },
      "writtenOn": "2016-10-03T09:26:01Z",
      "side": 1,
      "message": "I can do that.  I\u0027m a little worried that this change so late in the game will jeopardize our sprint target, but we might be able to still get it in, and it would definitely look cleaner.",
      "parentUuid": "baa041b7_5fcff27e",
      "revId": "251190ad7be47006fe30de297624763c7b55f613",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}