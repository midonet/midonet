{
  "comments": [
    {
      "key": {
        "uuid": "da9b358b_15d0c452",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 81,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "This should be call during doStart, because you\u0027re calling notifyFailed. Does it work if called in the constructor? Anyway, it doesn\u0027t respect the logic of not logging until the minion is actually enabled and started.",
      "range": {
        "startLine": 81,
        "startChar": 28,
        "endLine": 81,
        "endChar": 40
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_95ddf472",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 128,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "Do you know if the cassandra client handles reconnections transparently?",
      "range": {
        "startLine": 128,
        "startChar": 8,
        "endLine": 128,
        "endChar": 14
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_b5f7d8f4",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 128,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "What if the future fails: you should call notifyFailed",
      "range": {
        "startLine": 128,
        "startChar": 8,
        "endLine": 128,
        "endChar": 54
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_35e4e839",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 133,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "This may be null, also written from the executor, synchronize. Same for all the other variables below.",
      "range": {
        "startLine": 133,
        "startChar": 8,
        "endLine": 133,
        "endChar": 23
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_f5868064",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 145,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "I don\u0027t understand the purpose of this very well. So the localStorageProvider is used like a singleton, because it is only used in the object below. However, a new instance is created for every FlowStateMessageHandler suggesting that there is no reason for this to be a singleton, and it could be a member of either FlowStateService or FlowStateMessageHandler (e.g. instead of using initialize(session)).",
      "range": {
        "startLine": 145,
        "startChar": 0,
        "endLine": 145,
        "endChar": 22
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_95af34e3",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 182,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "Is this trait needed? It is only used here.",
      "range": {
        "startLine": 182,
        "startChar": 39,
        "endLine": 182,
        "endChar": 55
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_d5f25c06",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 184,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "Nit: VxlanH...",
      "range": {
        "startLine": 184,
        "startChar": 8,
        "endLine": 184,
        "endChar": 14
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_95c4d492",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 189,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "So this is write to cassandra, right?",
      "range": {
        "startLine": 189,
        "startChar": 11,
        "endLine": 189,
        "endChar": 15
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_358d087c",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 196,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "Could this be in its own file?",
      "range": {
        "startLine": 196,
        "startChar": 6,
        "endLine": 196,
        "endChar": 29
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_f578c091",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 240,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "Not used: intentional?",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 240,
        "endChar": 44
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_d5c93cae",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 262,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "NAT",
      "range": {
        "startLine": 262,
        "startChar": 32,
        "endLine": 262,
        "endChar": 35
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}