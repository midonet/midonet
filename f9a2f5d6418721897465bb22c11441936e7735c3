{
  "comments": [
    {
      "key": {
        "uuid": "da9b358b_15d0c452",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 81,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "This should be call during doStart, because you\u0027re calling notifyFailed. Does it work if called in the constructor? Anyway, it doesn\u0027t respect the logic of not logging until the minion is actually enabled and started.",
      "range": {
        "startLine": 81,
        "startChar": 28,
        "endLine": 81,
        "endChar": 40
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_b5eb58b0",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 81,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-23T16:59:13Z",
      "side": 1,
      "message": "right, done",
      "parentUuid": "da9b358b_15d0c452",
      "range": {
        "startLine": 81,
        "startChar": 28,
        "endLine": 81,
        "endChar": 40
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_95ddf472",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 128,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "Do you know if the cassandra client handles reconnections transparently?",
      "range": {
        "startLine": 128,
        "startChar": 8,
        "endLine": 128,
        "endChar": 14
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_b5f7d8f4",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 128,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "What if the future fails: you should call notifyFailed",
      "range": {
        "startLine": 128,
        "startChar": 8,
        "endLine": 128,
        "endChar": 54
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_d5fdbc6f",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 128,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-23T16:59:13Z",
      "side": 1,
      "message": "Yes, it retries 10 times to connect before giving up. Maybe we should keep retrying indefinitely.",
      "parentUuid": "da9b358b_95ddf472",
      "range": {
        "startLine": 128,
        "startChar": 8,
        "endLine": 128,
        "endChar": 14
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_b510f8a9",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 128,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-23T16:59:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da9b358b_b5f7d8f4",
      "range": {
        "startLine": 128,
        "startChar": 8,
        "endLine": 128,
        "endChar": 54
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_35e4e839",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 133,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "This may be null, also written from the executor, synchronize. Same for all the other variables below.",
      "range": {
        "startLine": 133,
        "startChar": 8,
        "endLine": 133,
        "endChar": 23
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_55208cf7",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 133,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-23T16:59:13Z",
      "side": 1,
      "message": "If I\u0027m not mistaken, doStop is only called if notifyStarted was previously called and is in Running state. Also, start and stop are synchronized via a monitor on AbstractService. So those references are always set and there\u0027s no possible concurrency.",
      "parentUuid": "da9b358b_35e4e839",
      "range": {
        "startLine": 133,
        "startChar": 8,
        "endLine": 133,
        "endChar": 23
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_f5868064",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 145,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "I don\u0027t understand the purpose of this very well. So the localStorageProvider is used like a singleton, because it is only used in the object below. However, a new instance is created for every FlowStateMessageHandler suggesting that there is no reason for this to be a singleton, and it could be a member of either FlowStateService or FlowStateMessageHandler (e.g. instead of using initialize(session)).",
      "range": {
        "startLine": 145,
        "startChar": 0,
        "endLine": 145,
        "endChar": 22
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_f051ee0f",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 145,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-23T16:59:13Z",
      "side": 1,
      "message": "So, what\u0027s actually a singleton is the FlowStateMessageHandler. We only instantiate it once when starting the udp frontend and declare it @Sharable (annotation is only informative). We do this to avoid having to instantiate a new handler for each message received (potentially high).\n\nHowever, this handler is not thread safe (netty framework only ensures thread safety for a given pipeline, but we only have a single handler in the pipeline) and the current FlowStateStorageImpl is also not thread safe. \n\nWe could synchronize around a single FlowStateStorageImpl (potentially bad for performance) or have a local copy private for each thread accessing the handler. I implemented the latter. \n\nI simplified the initialization workflow by assuming that the cassandra session is initialized before instantiating FlowStateStorage objects.\n\nOn the other hand, it may be over-engineered and there are simpler solutions :)",
      "parentUuid": "da9b358b_f5868064",
      "range": {
        "startLine": 145,
        "startChar": 0,
        "endLine": 145,
        "endChar": 22
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_95af34e3",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 182,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "Is this trait needed? It is only used here.",
      "range": {
        "startLine": 182,
        "startChar": 39,
        "endLine": 182,
        "endChar": 55
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_351d08be",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 182,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-23T16:59:13Z",
      "side": 1,
      "message": "No, will merge with the object.",
      "parentUuid": "da9b358b_95af34e3",
      "range": {
        "startLine": 182,
        "startChar": 39,
        "endLine": 182,
        "endChar": 55
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_d5f25c06",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 184,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "Nit: VxlanH...",
      "range": {
        "startLine": 184,
        "startChar": 8,
        "endLine": 184,
        "endChar": 14
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_1579e4fc",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 184,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-23T16:59:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da9b358b_d5f25c06",
      "range": {
        "startLine": 184,
        "startChar": 8,
        "endLine": 184,
        "endChar": 14
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_95c4d492",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 189,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "So this is write to cassandra, right?",
      "range": {
        "startLine": 189,
        "startChar": 11,
        "endLine": 189,
        "endChar": 15
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_f57d60e8",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 189,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-23T16:59:13Z",
      "side": 1,
      "message": "yes. I did these case classes in case we ever want to also expose a pull interface for agents (i.e. if we do an in-memory implementation in cluster).",
      "parentUuid": "da9b358b_95c4d492",
      "range": {
        "startLine": 189,
        "startChar": 11,
        "endLine": 189,
        "endChar": 15
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_358d087c",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 196,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "Could this be in its own file?",
      "range": {
        "startLine": 196,
        "startChar": 6,
        "endLine": 196,
        "endChar": 29
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_b587d8d6",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 196,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-23T16:59:13Z",
      "side": 1,
      "message": "Yes, will move.",
      "parentUuid": "da9b358b_358d087c",
      "range": {
        "startLine": 196,
        "startChar": 6,
        "endLine": 196,
        "endChar": 29
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_f578c091",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 240,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "Not used: intentional?",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 240,
        "endChar": 44
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_d5825cc8",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 240,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-23T16:59:13Z",
      "side": 1,
      "message": "Yes. You need to read all fields from the sbe serially in order. I\u0027ll remove the val though and comment.",
      "parentUuid": "da9b358b_f578c091",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 240,
        "endChar": 44
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_d5c93cae",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 262,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-03-23T14:24:45Z",
      "side": 1,
      "message": "NAT",
      "range": {
        "startLine": 262,
        "startChar": 32,
        "endLine": 262,
        "endChar": 35
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9b358b_956df434",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/flowstate/FlowStateService.scala",
        "patchSetId": 29
      },
      "lineNbr": 262,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-03-23T16:59:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da9b358b_d5c93cae",
      "range": {
        "startLine": 262,
        "startChar": 32,
        "endLine": 262,
        "endChar": 35
      },
      "revId": "f9a2f5d6418721897465bb22c11441936e7735c3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}