{
  "comments": [
    {
      "key": {
        "uuid": "7a1969be_2c9bd7ca",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "There are a few unused imports.",
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_d5ed66f1",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "Cleaned up some.",
      "parentUuid": "7a1969be_2c9bd7ca",
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_0cd53b43",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "For nontrivial functions, explicitly declaring the return type makes things clearer. Many (most?) of the functions in this class don\u0027t explicitly declare their return types.",
      "range": {
        "startLine": 58,
        "startChar": 45,
        "endLine": 58,
        "endChar": 50
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_95780e2d",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "Since this doesn\u0027t return any meaningful return type, removed the \"\u003d\" symbol.",
      "parentUuid": "7a1969be_0cd53b43",
      "range": {
        "startLine": 58,
        "startChar": 45,
        "endLine": 58,
        "endChar": 50
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_8cc00b7e",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "This is the only part of this function that isn\u0027t shared with deleteDhcpHost. I suggest factoring the rest out into a separate function that gets the DhcpBuilder for a particular subnet or throws an exception if it doesn\u0027t exist.",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 64,
        "endChar": 56
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_55ecd6c7",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a1969be_8cc00b7e",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 64,
        "endChar": 56
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_0c3c1b93",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "semicolons",
      "range": {
        "startLine": 93,
        "startChar": 0,
        "endLine": 97,
        "endChar": 62
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_b5d0aaf8",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a1969be_0c3c1b93",
      "range": {
        "startLine": 93,
        "startChar": 0,
        "endLine": 97,
        "endChar": 62
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_ccba030a",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 103,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "foreach would be more appropriate here.",
      "range": {
        "startLine": 103,
        "startChar": 16,
        "endLine": 103,
        "endChar": 19
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_d5d726ec",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 103,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a1969be_ccba030a",
      "range": {
        "startLine": 103,
        "startChar": 16,
        "endLine": 103,
        "endChar": 19
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_2c3757b2",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "Is this necessary? Can\u0027t it just be unspecified?",
      "range": {
        "startLine": 117,
        "startChar": 25,
        "endLine": 117,
        "endChar": 48
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_55033673",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "The original code explicitly sets the value. We can make ANY the default value, but that may have an unintended impact if that shouldn\u0027t really be the default.",
      "parentUuid": "7a1969be_2c3757b2",
      "range": {
        "startLine": 117,
        "startChar": 25,
        "endLine": 117,
        "endChar": 48
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_b08555af",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-29T08:53:36Z",
      "side": 1,
      "message": "Ah. That\u0027s fine as is, then.",
      "parentUuid": "7a1969be_55033673",
      "range": {
        "startLine": 117,
        "startChar": 25,
        "endLine": 117,
        "endChar": 48
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_8c476b1d",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 130,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "Can change to this:\n\n    def toRuleIdList(ops: Seq[Operation[Rule]]) \u003d\n        ops.map {\n            case Create(r: Rule) \u003d\u003e r.getId\n            case Update(r: Rule) \u003d\u003e r.getId\n            case Delete(_, id) \u003d\u003e id\n        }",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 130,
        "endChar": 10
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_b5f70a8c",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 130,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a1969be_8c476b1d",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 130,
        "endChar": 10
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_0c637bb2",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "Might simplify the code just to start with:\n\n  if (isRouterGatewayPort(nPort)) return List()\n\nThen midoPortBldr can be a val, and you won\u0027t need to check for null.",
      "range": {
        "startLine": 140,
        "startChar": 8,
        "endLine": 140,
        "endChar": 41
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_f5f18296",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "That works, but only until we start implementing router gateway port.",
      "parentUuid": "7a1969be_0c637bb2",
      "range": {
        "startLine": 140,
        "startChar": 8,
        "endLine": 140,
        "endChar": 41
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_cc5163da",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "Not sure if this needs to be done, because I have to do the same thing from the router side. Maybe it always gets set the same way? Or maybe not, but we should double-check.",
      "range": {
        "startLine": 141,
        "startChar": 12,
        "endLine": 141,
        "endChar": 72
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_95f48e88",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "As far as I can tell from the code, it seems necessary. The corresponding code is here:\n\nhttps://github.com/midonet/midonet/blob/20fcfdc195a69ad2bcd33448605a212bf685bc1d/midolman/src/main/java/org/midonet/cluster/data/neutron/NeutronPlugin.java#L343\n\nwhich calls,\n\nhttps://github.com/midonet/midonet/blob/1f7a5fe8b57065e2522f403c508d6f202a38769f/midolman/src/main/java/org/midonet/cluster/data/neutron/L3ZkManager.java#L320",
      "parentUuid": "7a1969be_cc5163da",
      "range": {
        "startLine": 141,
        "startChar": 12,
        "endLine": 141,
        "endChar": 72
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_f08fcdca",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-29T08:53:36Z",
      "side": 1,
      "message": "Ah, okay. Sounds good, then.",
      "parentUuid": "7a1969be_95f48e88",
      "range": {
        "startLine": 141,
        "startChar": 12,
        "endLine": 141,
        "endChar": 72
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_8cf5abcd",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 207,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "updatedIpAddrGrps is the same length but clearer.",
      "range": {
        "startLine": 207,
        "startChar": 27,
        "endLine": 207,
        "endChar": 45
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_d5ee06b4",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 207,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a1969be_8cf5abcd",
      "range": {
        "startLine": 207,
        "startChar": 27,
        "endLine": 207,
        "endChar": 45
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_2c2c774a",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 239,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "If you declare deleteDhcpHost to have a Unit return type, then you can just pass deleteDhcpHost directly here.",
      "range": {
        "startLine": 235,
        "startChar": 31,
        "endLine": 239,
        "endChar": 77
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_9522ceff",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 239,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "Wow, that cleans up the mess, thanks!",
      "parentUuid": "7a1969be_2c2c774a",
      "range": {
        "startLine": 235,
        "startChar": 31,
        "endLine": 239,
        "endChar": 77
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_0c31bba2",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 250,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "Same with addDhcpHost here.",
      "range": {
        "startLine": 246,
        "startChar": 31,
        "endLine": 250,
        "endChar": 77
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_f51fc2b5",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 250,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a1969be_0c31bba2",
      "range": {
        "startLine": 246,
        "startChar": 31,
        "endLine": 250,
        "endChar": 77
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_4c2bb330",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 279,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "mutable.Map has a getOrElseUpdate method that would be good here:\n\n    val network \u003d networkCache.getOrElseUpdate(\n        subnet.getNetworkId,\n        storage.get(classOf[Network],\n                    subnet.getNetworkId).await().toBuilder)",
      "range": {
        "startLine": 272,
        "startChar": 0,
        "endLine": 279,
        "endChar": 22
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_f576a205",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 279,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "That\u0027s neat. Thank you for  your enlightenment.",
      "parentUuid": "7a1969be_4c2bb330",
      "range": {
        "startLine": 272,
        "startChar": 0,
        "endLine": 279,
        "endChar": 22
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_cc1683f1",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 300,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "I think this would look better indented to the same level as the if.",
      "range": {
        "startLine": 300,
        "startChar": 12,
        "endLine": 300,
        "endChar": 31
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_d573a613",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 300,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a1969be_cc1683f1",
      "range": {
        "startLine": 300,
        "startChar": 12,
        "endLine": 300,
        "endChar": 31
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_ccc0432d",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 301,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "You have these unnecessary parentheses around all the MidoOp instantiations. IDEA complains about them, so could you remove them, please?",
      "range": {
        "startLine": 301,
        "startChar": 32,
        "endLine": 301,
        "endChar": 33
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_2cdd9715",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 301,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "Reminder to open a Jira issue about this probably being broken.",
      "range": {
        "startLine": 301,
        "startChar": 40,
        "endLine": 301,
        "endChar": 55
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_35ee7a8c",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 301,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "Done: https://midobugs.atlassian.net/browse/MN-3157",
      "parentUuid": "7a1969be_2cdd9715",
      "range": {
        "startLine": 301,
        "startChar": 40,
        "endLine": 301,
        "endChar": 55
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_55edf68a",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 301,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a1969be_ccc0432d",
      "range": {
        "startLine": 301,
        "startChar": 32,
        "endLine": 301,
        "endChar": 33
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_552b3630",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 319,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "I don\u0027t know why, but I found this loop very difficult to understand. Maybe some more commenting or more descriptive variable names would help.",
      "range": {
        "startLine": 319,
        "startChar": 8,
        "endLine": 319,
        "endChar": 59
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_75b6328c",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 319,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "I think that\u0027s because it does 2 heterogeneous things (creating jump rules to Ip Address Group chains and updating IP address group members in the single loop on \"Security Group\" (which is IPAddressGroup) for a small gain in efficiency. Alternatively we can split this into 2 loops, one for creating jump rules and another for updating IP Address Group members. For now, I just updated the comments to help clarify what\u0027s going on. Please let me know if it still needs improved.",
      "parentUuid": "7a1969be_552b3630",
      "range": {
        "startLine": 319,
        "startChar": 8,
        "endLine": 319,
        "endChar": 59
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_acd067f8",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 320,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "This is easy to misread as ipAddr6. Maybe ipAddrGroup or iag?",
      "range": {
        "startLine": 320,
        "startChar": 16,
        "endLine": 320,
        "endChar": 23
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_8d9f6203",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 320,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "Renamed to \"ipAddrGrp\".",
      "parentUuid": "7a1969be_acd067f8",
      "range": {
        "startLine": 320,
        "startChar": 16,
        "endLine": 320,
        "endChar": 23
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_ccee83b4",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 337,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": ".indexOf(portId)",
      "range": {
        "startLine": 337,
        "startChar": 51,
        "endLine": 337,
        "endChar": 75
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_ad85feae",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 337,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "Thanks for teaching me. I keep learning :)",
      "parentUuid": "7a1969be_ccee83b4",
      "range": {
        "startLine": 337,
        "startChar": 51,
        "endLine": 337,
        "endChar": 75
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_7526326a",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 341,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "added -\u003d ipPorts.getIpAddress",
      "range": {
        "startLine": 341,
        "startChar": 20,
        "endLine": 341,
        "endChar": 65
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_0d9372fb",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 341,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a1969be_7526326a",
      "range": {
        "startLine": 341,
        "startChar": 20,
        "endLine": 341,
        "endChar": 65
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_b51f0a09",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 351,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "Maybe change this to \"Drop non-ARP traffic that wasn\u0027t accepted by earlier rules.\"",
      "range": {
        "startLine": 351,
        "startChar": 11,
        "endLine": 351,
        "endChar": 31
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_ed8ff6ca",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 351,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a1969be_b51f0a09",
      "range": {
        "startLine": 351,
        "startChar": 11,
        "endLine": 351,
        "endChar": 31
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_35d31a3a",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 368,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T04:18:58Z",
      "side": 1,
      "message": "So you\u0027re deleting all the old rules and recreating them? Is that necessary?",
      "range": {
        "startLine": 366,
        "startChar": 0,
        "endLine": 368,
        "endChar": 69
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_adacde36",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 368,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "I thought that what you do for Security Group, and it is indeed what the current SecurityGroupZkManager does (it has a TODO comment \"TODO: optimize\" :P). I\u0027m not too familiar with Neutron domain model, but the Subnet address or the Security Group Rules can change?",
      "parentUuid": "7a1969be_35d31a3a",
      "range": {
        "startLine": 366,
        "startChar": 0,
        "endLine": 368,
        "endChar": 69
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_109389fb",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/PortTranslator.scala",
        "patchSetId": 3
      },
      "lineNbr": 368,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-29T08:53:36Z",
      "side": 1,
      "message": "My idea was to update only the ones that change. Suppose, for example, that you add only one security group. Then all you need to do is add one jump rule, not delete and recreate all the rules. And several of the rules are fixed, and always going to be the same on every port.\n\nBut now that I think about it some more, we should probably just go with the easy way for now. If it turns out to be a problem, we can optimize later.",
      "parentUuid": "7a1969be_adacde36",
      "range": {
        "startLine": 366,
        "startChar": 0,
        "endLine": 368,
        "endChar": 69
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_95d76ebf",
        "filename": "brain/midonet-brain/src/test/scala/org/midonet/brain/services/c3po/translators/PortTranslatorTest.scala",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T07:40:57Z",
      "side": 1,
      "message": "Can be simplified:\n\n        private def matchesModuloId(expected: Message,\n                                    actual: Message): Boolean \u003d {\n            if (actual.getClass !\u003d expected.getClass) return false\n\n            val expectedFields \u003d expected.getAllFields.asScala\n            val actualFields \u003d // Ignore ID field on actual object.\n                actual.getAllFields.asScala.filterKeys(_.getName !\u003d \"id\")\n            expectedFields.sameElements(actualFields)\n        }",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 63,
        "endChar": 9
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_0d589255",
        "filename": "brain/midonet-brain/src/test/scala/org/midonet/brain/services/c3po/translators/PortTranslatorTest.scala",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "Thank you for the suggestion, Brandon. Used it with a slight tweak because I wanted to use the id field when it is given in the expectation.",
      "parentUuid": "7a1969be_95d76ebf",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 63,
        "endChar": 9
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_d5e1e69b",
        "filename": "brain/midonet-brain/src/test/scala/org/midonet/brain/services/c3po/translators/PortTranslatorTest.scala",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T07:40:57Z",
      "side": 1,
      "message": "Can be simplified to expected \u003d\u003d actual",
      "range": {
        "startLine": 75,
        "startChar": 24,
        "endLine": 76,
        "endChar": 68
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_95500e60",
        "filename": "brain/midonet-brain/src/test/scala/org/midonet/brain/services/c3po/translators/PortTranslatorTest.scala",
        "patchSetId": 3
      },
      "lineNbr": 151,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T07:08:53Z",
      "side": 1,
      "message": "def findChainOp(ops: List[Operation[Message]],\n                    op: OpType.OpType, chainId: UUID): Chain \u003d {\n        ops.collectFirst {\n            case midonet.Create(c: Chain)\n                    if c.getId \u003d\u003d chainId \u0026\u0026 op \u003d\u003d OpType.Create \u003d\u003e c\n            case midonet.Update(c: Chain)\n                    if c.getId \u003d\u003d chainId \u0026\u0026 op \u003d\u003d OpType.Update \u003d\u003e c\n        }.orNull\n    }\n\nThe version I showed you before doesn\u0027t work due to type issues. CollectFirst() applies a partial function to a sequence and returns the result of applying the function to the first element in its domain. There\u0027s also collect(), which applies the partial function to all elements in its domain and returns a the results in a sequence.",
      "range": {
        "startLine": 137,
        "startChar": 0,
        "endLine": 151,
        "endChar": 5
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_907c9974",
        "filename": "brain/midonet-brain/src/test/scala/org/midonet/brain/services/c3po/translators/PortTranslatorTest.scala",
        "patchSetId": 3
      },
      "lineNbr": 151,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "Thanks, it worked!",
      "parentUuid": "7a1969be_95500e60",
      "range": {
        "startLine": 137,
        "startChar": 0,
        "endLine": 151,
        "endChar": 5
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_55d696c6",
        "filename": "brain/midonet-brain/src/test/scala/org/midonet/brain/services/c3po/translators/PortTranslatorTest.scala",
        "patchSetId": 3
      },
      "lineNbr": 347,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T07:40:57Z",
      "side": 1,
      "message": "ETHERTYPE is already a Short.",
      "range": {
        "startLine": 347,
        "startChar": 37,
        "endLine": 347,
        "endChar": 57
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_70811d4a",
        "filename": "brain/midonet-brain/src/test/scala/org/midonet/brain/services/c3po/translators/PortTranslatorTest.scala",
        "patchSetId": 3
      },
      "lineNbr": 347,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-01-29T04:51:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a1969be_55d696c6",
      "range": {
        "startLine": 347,
        "startChar": 37,
        "endLine": 347,
        "endChar": 57
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_35c79a14",
        "filename": "brain/midonet-brain/src/test/scala/org/midonet/brain/services/c3po/translators/PortTranslatorTest.scala",
        "patchSetId": 3
      },
      "lineNbr": 395,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T07:40:57Z",
      "side": 1,
      "message": "No parentheses needed for \"should not be null\"",
      "range": {
        "startLine": 395,
        "startChar": 16,
        "endLine": 395,
        "endChar": 36
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_75d112cd",
        "filename": "brain/midonet-brain/src/test/scala/org/midonet/brain/services/c3po/translators/PortTranslatorTest.scala",
        "patchSetId": 3
      },
      "lineNbr": 396,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-01-28T07:40:57Z",
      "side": 1,
      "message": "No parentheses needed for shouldBe.",
      "range": {
        "startLine": 396,
        "startChar": 33,
        "endLine": 396,
        "endChar": 66
      },
      "revId": "c8d3637f7574c1fa0cff9c943e2f637d11ad6cda",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}