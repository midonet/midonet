{
  "comments": [
    {
      "key": {
        "uuid": "5ac4a560_6ef56f82",
        "filename": "midonet-cluster/src/main/java/org/midonet/cluster/rest_api/models/Router.java",
        "patchSetId": 9
      },
      "lineNbr": 31,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-12-01T07:55:49Z",
      "side": 1,
      "message": "No longer needed.",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 49
      },
      "revId": "3d4e76c39f4b3fa40b89f79bd6b98660bda47e73",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac4a560_42aface3",
        "filename": "midonet-cluster/src/main/java/org/midonet/cluster/rest_api/models/RouterPort.java",
        "patchSetId": 9
      },
      "lineNbr": 140,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-11-30T14:37:03Z",
      "side": 1,
      "message": "without \"s\"",
      "range": {
        "startLine": 140,
        "startChar": 36,
        "endLine": 140,
        "endChar": 37
      },
      "revId": "3d4e76c39f4b3fa40b89f79bd6b98660bda47e73",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac4a560_4e77d3d4",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/rest_api/resources/ServiceContainerResource.scala",
        "patchSetId": 9
      },
      "lineNbr": 69,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-12-01T07:55:49Z",
      "side": 1,
      "message": "This isn\u0027t right, is it? Why would the group\u0027s serviceContainerIds contain its own ID?",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 69,
        "endChar": 9
      },
      "revId": "3d4e76c39f4b3fa40b89f79bd6b98660bda47e73",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac4a560_b6d35d37",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/services/rest_api/resources/ServiceContainerResource.scala",
        "patchSetId": 9
      },
      "lineNbr": 69,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-12-01T18:18:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ac4a560_4e77d3d4",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 69,
        "endChar": 9
      },
      "revId": "3d4e76c39f4b3fa40b89f79bd6b98660bda47e73",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac4a560_8e81eb91",
        "filename": "midonet-cluster/src/test/scala/org/midonet/cluster/HttpRequestChecks.scala",
        "patchSetId": 9
      },
      "lineNbr": 50,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-12-01T07:55:49Z",
      "side": 1,
      "message": "Replace with:\n\n  postAndAssertStatus(dto, typeUri, mediaType, Status.CREATED)",
      "range": {
        "startLine": 47,
        "startChar": 23,
        "endLine": 50,
        "endChar": 64
      },
      "revId": "3d4e76c39f4b3fa40b89f79bd6b98660bda47e73",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac4a560_d6d8d955",
        "filename": "midonet-cluster/src/test/scala/org/midonet/cluster/HttpRequestChecks.scala",
        "patchSetId": 9
      },
      "lineNbr": 50,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-12-01T18:18:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ac4a560_8e81eb91",
      "range": {
        "startLine": 47,
        "startChar": 23,
        "endLine": 50,
        "endChar": 64
      },
      "revId": "3d4e76c39f4b3fa40b89f79bd6b98660bda47e73",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac4a560_ae7ea7ac",
        "filename": "midonet-cluster/src/test/scala/org/midonet/cluster/HttpRequestChecks.scala",
        "patchSetId": 9
      },
      "lineNbr": 99,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-12-01T07:55:49Z",
      "side": 1,
      "message": "Replace with:\n\n  putAndAssertStatus(dto, mediaType, Status.NO_CONTENT)",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 99,
        "endChar": 60
      },
      "revId": "3d4e76c39f4b3fa40b89f79bd6b98660bda47e73",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac4a560_f6ddd543",
        "filename": "midonet-cluster/src/test/scala/org/midonet/cluster/HttpRequestChecks.scala",
        "patchSetId": 9
      },
      "lineNbr": 99,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-12-01T18:18:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ac4a560_ae7ea7ac",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 99,
        "endChar": 60
      },
      "revId": "3d4e76c39f4b3fa40b89f79bd6b98660bda47e73",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac4a560_ce4a0383",
        "filename": "nsdb/src/main/proto/topology.proto",
        "patchSetId": 9
      },
      "lineNbr": 488,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-12-01T07:55:49Z",
      "side": 1,
      "message": "Maybe we should use oneof here.",
      "range": {
        "startLine": 486,
        "startChar": 0,
        "endLine": 488,
        "endChar": 39
      },
      "revId": "3d4e76c39f4b3fa40b89f79bd6b98660bda47e73",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac4a560_16e33108",
        "filename": "nsdb/src/main/proto/topology.proto",
        "patchSetId": 9
      },
      "lineNbr": 488,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-12-01T18:18:15Z",
      "side": 1,
      "message": "I\u0027m not totally in love with having refs from midonet models to neutron ones.",
      "parentUuid": "5ac4a560_ce4a0383",
      "range": {
        "startLine": 486,
        "startChar": 0,
        "endLine": 488,
        "endChar": 39
      },
      "revId": "3d4e76c39f4b3fa40b89f79bd6b98660bda47e73",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac4a560_ecab4287",
        "filename": "nsdb/src/main/proto/topology.proto",
        "patchSetId": 9
      },
      "lineNbr": 488,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-12-02T04:23:09Z",
      "side": 1,
      "message": "I just meant as self-documentation, rather than Zoom-binding refs. So that whether the ID is a vpn_service_id or a health_monitor_id or whatever else it can be is encoded in the message itself.",
      "parentUuid": "5ac4a560_16e33108",
      "range": {
        "startLine": 486,
        "startChar": 0,
        "endLine": 488,
        "endChar": 39
      },
      "revId": "3d4e76c39f4b3fa40b89f79bd6b98660bda47e73",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac4a560_8c4baeaf",
        "filename": "nsdb/src/main/proto/topology.proto",
        "patchSetId": 9
      },
      "lineNbr": 488,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-12-02T08:43:27Z",
      "side": 1,
      "message": "done",
      "parentUuid": "5ac4a560_ecab4287",
      "range": {
        "startLine": 486,
        "startChar": 0,
        "endLine": 488,
        "endChar": 39
      },
      "revId": "3d4e76c39f4b3fa40b89f79bd6b98660bda47e73",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac4a560_87c1c930",
        "filename": "nsdb/src/main/proto/topology.proto",
        "patchSetId": 9
      },
      "lineNbr": 488,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-12-02T11:04:16Z",
      "side": 1,
      "message": "So during the initial discussion we thought of this as being generic - I agree though that it requires documentation so implementers for service containers can understand its meaning.\n\nCurrently, the implementation for service containers both for agent and cluster is loadable from the class path, the actual container handler only needs to be an annotated class with a version and container name.\n\nThe idea is to provide a generic framework for containers and we can later hook specific implementations as needed.\n\nExample: a simpler container implementation I though of for testing the containers using MDTS was simply to create a namespace with an IP, connect it to a router and do a ping. The IP could be provided as part of the configurationId - it doesn\u0027t have to represent a reference to a different object.",
      "parentUuid": "5ac4a560_ecab4287",
      "range": {
        "startLine": 486,
        "startChar": 0,
        "endLine": 488,
        "endChar": 39
      },
      "revId": "3d4e76c39f4b3fa40b89f79bd6b98660bda47e73",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}