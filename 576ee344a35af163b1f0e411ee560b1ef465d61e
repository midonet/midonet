{
  "comments": [
    {
      "key": {
        "uuid": "da86d52c_2f872d63",
        "filename": "tests/ci-run.sh",
        "patchSetId": 15
      },
      "lineNbr": 4,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-02-15T19:07:51Z",
      "side": 1,
      "message": "Should we leave the whole vpnaas suite enabled in the gates, just a basic subset or the full suite just in nightlies. I vote for 1 basic test in gates, the full suite in nightlies.",
      "revId": "576ee344a35af163b1f0e411ee560b1ef465d61e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da86d52c_12bc526c",
        "filename": "tests/ci-run.sh",
        "patchSetId": 15
      },
      "lineNbr": 4,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2016-02-16T08:13:31Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "da86d52c_2f872d63",
      "revId": "576ee344a35af163b1f0e411ee560b1ef465d61e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_a8da9ee5",
        "filename": "tests/mdts/tests/functional_tests/test_vpnaas.py",
        "patchSetId": 15
      },
      "lineNbr": 170,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2016-02-12T09:26:59Z",
      "side": 1,
      "message": "This is if you want to delete the service later on?",
      "range": {
        "startLine": 170,
        "startChar": 11,
        "endLine": 170,
        "endChar": 26
      },
      "revId": "576ee344a35af163b1f0e411ee560b1ef465d61e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_1cb4c933",
        "filename": "tests/mdts/tests/functional_tests/test_vpnaas.py",
        "patchSetId": 15
      },
      "lineNbr": 170,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-02-15T08:40:51Z",
      "side": 1,
      "message": "This flag is to automatically remove the service at the end of the test (by the teardown mechanism). \nSome tests need to delete it within the test though (to test a failure case). This flag just avoids scheduling the removal (done in the create_resource method) so in case it was deleted, it\u0027s not deleted again (causing an api failure by a non-existing object).",
      "parentUuid": "fa81d914_a8da9ee5",
      "range": {
        "startLine": 170,
        "startChar": 11,
        "endLine": 170,
        "endChar": 26
      },
      "revId": "576ee344a35af163b1f0e411ee560b1ef465d61e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_c8e352a2",
        "filename": "tests/mdts/tests/functional_tests/test_vpnaas.py",
        "patchSetId": 15
      },
      "lineNbr": 199,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2016-02-12T09:26:59Z",
      "side": 1,
      "message": "same question",
      "range": {
        "startLine": 199,
        "startChar": 11,
        "endLine": 199,
        "endChar": 26
      },
      "revId": "576ee344a35af163b1f0e411ee560b1ef465d61e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_3c842d5d",
        "filename": "tests/mdts/tests/functional_tests/test_vpnaas.py",
        "patchSetId": 15
      },
      "lineNbr": 199,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-02-15T08:40:51Z",
      "side": 1,
      "message": "ditto.",
      "parentUuid": "fa81d914_c8e352a2",
      "range": {
        "startLine": 199,
        "startChar": 11,
        "endLine": 199,
        "endChar": 26
      },
      "revId": "576ee344a35af163b1f0e411ee560b1ef465d61e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_88b23a92",
        "filename": "tests/mdts/tests/functional_tests/test_vpnaas.py",
        "patchSetId": 15
      },
      "lineNbr": 617,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2016-02-12T09:26:59Z",
      "side": 1,
      "message": "I would increase the timeout here. The default session timeout for container services is 5 seconds. When doing the demo I timed the interruption of the ping to about 11 seconds (before the ping resumes). What about 15 seconds to be safe?",
      "range": {
        "startLine": 617,
        "startChar": 4,
        "endLine": 617,
        "endChar": 17
      },
      "revId": "576ee344a35af163b1f0e411ee560b1ef465d61e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_bc973d8f",
        "filename": "tests/mdts/tests/functional_tests/test_vpnaas.py",
        "patchSetId": 15
      },
      "lineNbr": 617,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-02-15T08:40:51Z",
      "side": 1,
      "message": "The ping command already has a retry mechanism. Didn\u0027t want to make it too loose to avoid false positives (waiting 15s + 2 retries of 5 second + extra delays when setting up tcpdump, etc. is pretty close to 30s). I\u0027ll increase to 10s and fine tune when running on the CI to avoid flakyness. Is that ok?",
      "parentUuid": "fa81d914_88b23a92",
      "range": {
        "startLine": 617,
        "startChar": 4,
        "endLine": 617,
        "endChar": 17
      },
      "revId": "576ee344a35af163b1f0e411ee560b1ef465d61e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_7c0dc5e7",
        "filename": "tests/mdts/tests/functional_tests/test_vpnaas.py",
        "patchSetId": 15
      },
      "lineNbr": 617,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2016-02-15T09:10:50Z",
      "side": 1,
      "message": "sure",
      "parentUuid": "fa81d914_bc973d8f",
      "range": {
        "startLine": 617,
        "startChar": 4,
        "endLine": 617,
        "endChar": 17
      },
      "revId": "576ee344a35af163b1f0e411ee560b1ef465d61e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_a8affe28",
        "filename": "tests/mdts/tests/functional_tests/test_vpnaas.py",
        "patchSetId": 15
      },
      "lineNbr": 630,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2016-02-12T09:26:59Z",
      "side": 1,
      "message": "You could block all traffic except traffic needed in method inject_packet_loss.",
      "range": {
        "startLine": 628,
        "startChar": 6,
        "endLine": 630,
        "endChar": 81
      },
      "revId": "576ee344a35af163b1f0e411ee560b1ef465d61e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_dc94f18c",
        "filename": "tests/mdts/tests/functional_tests/test_vpnaas.py",
        "patchSetId": 15
      },
      "lineNbr": 630,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-02-15T08:40:51Z",
      "side": 1,
      "message": "We want to simulate a complete network failure. This comment is due to a bug (MI-576). I\u0027ll update the comment to point there.",
      "parentUuid": "fa81d914_a8affe28",
      "range": {
        "startLine": 628,
        "startChar": 6,
        "endLine": 630,
        "endChar": 81
      },
      "revId": "576ee344a35af163b1f0e411ee560b1ef465d61e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_3c2eed43",
        "filename": "tests/mdts/tests/functional_tests/test_vpnaas.py",
        "patchSetId": 15
      },
      "lineNbr": 630,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2016-02-15T09:10:50Z",
      "side": 1,
      "message": "But blocking all but ssh traffic should be enough, isn\u0027t it? In addition if ssh is not blocked you can perform cleanup later on.",
      "parentUuid": "fa81d914_dc94f18c",
      "range": {
        "startLine": 628,
        "startChar": 6,
        "endLine": 630,
        "endChar": 81
      },
      "revId": "576ee344a35af163b1f0e411ee560b1ef465d61e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_bca49da6",
        "filename": "tests/mdts/tests/functional_tests/test_vpnaas.py",
        "patchSetId": 15
      },
      "lineNbr": 630,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-02-15T09:34:01Z",
      "side": 1,
      "message": "What do you mean by using ssh to perform cleanup? \n\nIt\u0027s not obvious, but we do not use ssh to connect to a midolman container, we use the docker API to execute commands on it which uses a socket file (even the sandbox-manage ssh command is a \u0027fake ssh\u0027, an alias for docker exec -it mnsandboxmdts_midolman1_1 bash).",
      "parentUuid": "fa81d914_3c2eed43",
      "range": {
        "startLine": 628,
        "startChar": 6,
        "endLine": 630,
        "endChar": 81
      },
      "revId": "576ee344a35af163b1f0e411ee560b1ef465d61e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da86d52c_2cd57b43",
        "filename": "tests/mdts/tests/functional_tests/test_vpnaas.py",
        "patchSetId": 15
      },
      "lineNbr": 630,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2016-02-15T15:34:25Z",
      "side": 1,
      "message": "Does this mean that you can still perform a \u0027fake ssh\u0027 after blocking traffic using iptables?",
      "parentUuid": "fa81d914_bca49da6",
      "range": {
        "startLine": 628,
        "startChar": 6,
        "endLine": 630,
        "endChar": 81
      },
      "revId": "576ee344a35af163b1f0e411ee560b1ef465d61e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da86d52c_afab1dd5",
        "filename": "tests/mdts/tests/functional_tests/test_vpnaas.py",
        "patchSetId": 15
      },
      "lineNbr": 630,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-02-15T19:07:51Z",
      "side": 1,
      "message": "Yes, that\u0027s right.",
      "parentUuid": "da86d52c_2cd57b43",
      "range": {
        "startLine": 628,
        "startChar": 6,
        "endLine": 630,
        "endChar": 81
      },
      "revId": "576ee344a35af163b1f0e411ee560b1ef465d61e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_c8a8b222",
        "filename": "tests/mdts/tests/functional_tests/test_vpnaas.py",
        "patchSetId": 15
      },
      "lineNbr": 635,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2016-02-12T09:26:59Z",
      "side": 1,
      "message": "increase timeout",
      "range": {
        "startLine": 635,
        "startChar": 4,
        "endLine": 635,
        "endChar": 17
      },
      "revId": "576ee344a35af163b1f0e411ee560b1ef465d61e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_9c7fd965",
        "filename": "tests/mdts/tests/functional_tests/test_vpnaas.py",
        "patchSetId": 15
      },
      "lineNbr": 635,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-02-15T08:40:51Z",
      "side": 1,
      "message": "ditto.",
      "parentUuid": "fa81d914_c8a8b222",
      "range": {
        "startLine": 635,
        "startChar": 4,
        "endLine": 635,
        "endChar": 17
      },
      "revId": "576ee344a35af163b1f0e411ee560b1ef465d61e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}