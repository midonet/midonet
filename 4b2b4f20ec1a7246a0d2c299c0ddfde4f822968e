{
  "comments": [
    {
      "key": {
        "uuid": "baa041b7_f07cd021",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1008328
      },
      "writtenOn": "2016-09-23T15:52:07Z",
      "side": 1,
      "message": "Needs a signed-off tag, you can get it added by git using: \"git commit --signoff\". Also if there is an associated Jira issue with the patch, add a line with: \"Ref: MI-{issue number}\"",
      "revId": "4b2b4f20ec1a7246a0d2c299c0ddfde4f822968e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_f0ce1082",
        "filename": "midolman/src/main/scala/org/midonet/midolman/vpp/VppApi.scala",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-09-23T15:46:26Z",
      "side": 1,
      "message": "Apply out code style (using the xml from tree). We use 4 space indentation.",
      "range": {
        "startLine": 35,
        "startChar": 2,
        "endLine": 35,
        "endChar": 54
      },
      "revId": "4b2b4f20ec1a7246a0d2c299c0ddfde4f822968e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_d0a0ac92",
        "filename": "midolman/src/main/scala/org/midonet/midolman/vpp/VppApi.scala",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1006717
      },
      "writtenOn": "2016-09-23T16:15:55Z",
      "side": 1,
      "message": "Condition should be \u0027err not null\u0027, it isn\u0027t?",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 44,
        "endChar": 9
      },
      "revId": "4b2b4f20ec1a7246a0d2c299c0ddfde4f822968e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_d0c78c43",
        "filename": "midolman/src/main/scala/org/midonet/midolman/vpp/VppApi.scala",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1006717
      },
      "writtenOn": "2016-09-23T16:15:55Z",
      "side": 1,
      "message": "Is the try-catch needed? Nothing in toScalaFuture method seems to throw any exception.",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 56,
        "endChar": 5
      },
      "revId": "4b2b4f20ec1a7246a0d2c299c0ddfde4f822968e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_307fd8e0",
        "filename": "midolman/src/main/scala/org/midonet/midolman/vpp/VppApi.scala",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1008620
      },
      "writtenOn": "2016-09-23T16:27:38Z",
      "side": 1,
      "message": "But the evaluation of `request` itself could throw an exception isn\u0027t it? It\u0027s a by-name parameter",
      "parentUuid": "baa041b7_d0c78c43",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 56,
        "endChar": 5
      },
      "revId": "4b2b4f20ec1a7246a0d2c299c0ddfde4f822968e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_d06aec19",
        "filename": "midolman/src/main/scala/org/midonet/midolman/vpp/VppApi.scala",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1006717
      },
      "writtenOn": "2016-09-23T16:31:29Z",
      "side": 1,
      "message": "Oh, I didn\u0027t notice. But is there any reason to use a by-name parameter instead of positional one?",
      "parentUuid": "baa041b7_307fd8e0",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 56,
        "endChar": 5
      },
      "revId": "4b2b4f20ec1a7246a0d2c299c0ddfde4f822968e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_9070e409",
        "filename": "midolman/src/main/scala/org/midonet/midolman/vpp/VppApi.scala",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1008620
      },
      "writtenOn": "2016-09-23T16:38:51Z",
      "side": 1,
      "message": "iirc, it\u0027s there to turn exceptions from the lib calls into a failed future. It\u0027s a bit ugly. Maybe it\u0027s better to wrap all methods in try-catch blocks and return a failed future if something goes wrong.",
      "parentUuid": "baa041b7_d06aec19",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 56,
        "endChar": 5
      },
      "revId": "4b2b4f20ec1a7246a0d2c299c0ddfde4f822968e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_70bc406c",
        "filename": "midolman/src/main/scala/org/midonet/midolman/vpp/VppApi.scala",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1006717
      },
      "writtenOn": "2016-09-23T16:53:42Z",
      "side": 1,
      "message": "Ok. If that is the intention, I think putting the try-catch here is not effective, since the call to lib has already been done and returned a Future instance or thrown an exception. Better move the try-catch to the each of the functions. Since there are only a few I think is not a problem.",
      "parentUuid": "baa041b7_9070e409",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 56,
        "endChar": 5
      },
      "revId": "4b2b4f20ec1a7246a0d2c299c0ddfde4f822968e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_d0cb0c71",
        "filename": "midolman/src/main/scala/org/midonet/midolman/vpp/VppApi.scala",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-09-23T15:46:26Z",
      "side": 1,
      "message": "Use scaladoc comments /** ... */",
      "range": {
        "startLine": 68,
        "startChar": 2,
        "endLine": 69,
        "endChar": 43
      },
      "revId": "4b2b4f20ec1a7246a0d2c299c0ddfde4f822968e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_d0f66cd6",
        "filename": "midolman/src/main/scala/org/midonet/midolman/vpp/VppApi.scala",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1006717
      },
      "writtenOn": "2016-09-23T16:15:55Z",
      "side": 1,
      "message": "Include hw-addr as option:\n\ncreate host-interface name \u003cname\u003e [hw-addr \u003cmac\u003e]",
      "revId": "4b2b4f20ec1a7246a0d2c299c0ddfde4f822968e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_90d464e9",
        "filename": "midolman/src/main/scala/org/midonet/midolman/vpp/VppApi.scala",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1006717
      },
      "writtenOn": "2016-09-23T16:15:55Z",
      "side": 1,
      "message": "I would remove it and add in case it is needed.",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 65
      },
      "revId": "4b2b4f20ec1a7246a0d2c299c0ddfde4f822968e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}