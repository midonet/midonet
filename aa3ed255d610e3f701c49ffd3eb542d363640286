{
  "comments": [
    {
      "key": {
        "uuid": "fa81d914_56abaad5",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/ClusterConfig.scala",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-02-02T09:53:30Z",
      "side": 1,
      "message": "lower case?",
      "range": {
        "startLine": 53,
        "startChar": 8,
        "endLine": 53,
        "endChar": 9
      },
      "revId": "aa3ed255d610e3f701c49ffd3eb542d363640286",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_16469223",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/ExecutorsModule.scala",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2016-02-02T09:57:28Z",
      "side": 1,
      "message": "maybe apply would\u0027ve been more idiomatic.",
      "range": {
        "startLine": 42,
        "startChar": 8,
        "endLine": 42,
        "endChar": 14
      },
      "revId": "aa3ed255d610e3f701c49ffd3eb542d363640286",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_364c7642",
        "filename": "midonet-cluster/src/main/scala/org/midonet/cluster/ExecutorsModule.scala",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2016-02-02T09:57:28Z",
      "side": 1,
      "message": "Should we be so restrictive? I\u0027m thinking cases where a minion could lock a thread for example.\n\nIn theory we should require our minions never block though..",
      "range": {
        "startLine": 43,
        "startChar": 42,
        "endLine": 43,
        "endChar": 61
      },
      "revId": "aa3ed255d610e3f701c49ffd3eb542d363640286",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}