{
  "comments": [
    {
      "key": {
        "uuid": "baa041b7_0e46494f",
        "filename": "midolman/src/main/scala/org/midonet/midolman/simulation/PacketContext.scala",
        "patchSetId": 9
      },
      "lineNbr": 221,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-11-08T10:42:28Z",
      "side": 1,
      "message": "isn\u0027t the diffBaseMatch supposed to check whether the ToS field has changed? so you wouldn\u0027t need to introduce this new field in the FlowMatch",
      "range": {
        "startLine": 221,
        "startChar": 20,
        "endLine": 221,
        "endChar": 39
      },
      "revId": "7a35889001d00fa0492456cd1a2f8447adc4f788",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_2db6b6f9",
        "filename": "netlink/src/main/java/org/midonet/odp/FlowMatch.java",
        "patchSetId": 9
      },
      "lineNbr": 357,
      "author": {
        "id": 1003629
      },
      "writtenOn": "2016-11-08T06:08:03Z",
      "side": 1,
      "message": "I am not married to this name, if someone has a better suggestion.",
      "range": {
        "startLine": 357,
        "startChar": 20,
        "endLine": 357,
        "endChar": 36
      },
      "revId": "7a35889001d00fa0492456cd1a2f8447adc4f788",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_8d5dc27e",
        "filename": "netlink/src/main/java/org/midonet/odp/FlowMatch.java",
        "patchSetId": 9
      },
      "lineNbr": 357,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2016-11-08T08:12:21Z",
      "side": 1,
      "message": "i\u0027m not sure if it\u0027s a good idea to take a special approach only for tos field.\nisn\u0027t it simpler (or at least consistent) to make the flow match on the field?",
      "parentUuid": "baa041b7_2db6b6f9",
      "range": {
        "startLine": 357,
        "startChar": 20,
        "endLine": 357,
        "endChar": 36
      },
      "revId": "7a35889001d00fa0492456cd1a2f8447adc4f788",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_6d971eec",
        "filename": "netlink/src/main/java/org/midonet/odp/FlowMatch.java",
        "patchSetId": 9
      },
      "lineNbr": 357,
      "author": {
        "id": 1003629
      },
      "writtenOn": "2016-11-08T08:27:52Z",
      "side": 1,
      "message": "None that I could find.  Using \"isUsed(field)\" doesn\u0027t work because it always returns true, even if I didn\u0027t set the TOS field directly.  If this really is a problem, could we iterate on this, and I can open a new ticket, unless you feel this is unacceptable to check in at all.",
      "parentUuid": "baa041b7_8d5dc27e",
      "range": {
        "startLine": 357,
        "startChar": 20,
        "endLine": 357,
        "endChar": 36
      },
      "revId": "7a35889001d00fa0492456cd1a2f8447adc4f788",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_086640ee",
        "filename": "netlink/src/main/java/org/midonet/odp/FlowMatch.java",
        "patchSetId": 9
      },
      "lineNbr": 357,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2016-11-08T09:05:26Z",
      "side": 1,
      "message": "isUsed just means the field have a value. there isn\u0027t any equivalent to your xxxSet.\nif we want xxxSet, it\u0027s better to have it for every fields,\nimplemented similarly with isUsed.\ni\u0027m not sure if it\u0027s really desirable though. for majority of cases, tos from vm won\u0027t vary i guess.  thus my suggestion to make the flow match on the field.  you can do it by marking the field seen.",
      "parentUuid": "baa041b7_6d971eec",
      "range": {
        "startLine": 357,
        "startChar": 20,
        "endLine": 357,
        "endChar": 36
      },
      "revId": "7a35889001d00fa0492456cd1a2f8447adc4f788",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}