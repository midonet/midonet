{
  "comments": [
    {
      "key": {
        "uuid": "9ad9bd40_9ee943b9",
        "filename": "cluster/midonet-cluster/src/test/scala/org/midonet/cluster/services/vxgw/WritableFloodingProxyHeraldTest.scala",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-08-12T18:54:21Z",
      "side": 1,
      "message": "merge",
      "revId": "397778afb0e39305c3c70f050eb87bcab2c67a7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_bed36702",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/vxgw/FloodingProxyHerald.scala",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-08-12T18:54:21Z",
      "side": 1,
      "message": "wrap?",
      "revId": "397778afb0e39305c3c70f050eb87bcab2c67a7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_dece6b59",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/vxgw/FloodingProxyHerald.scala",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-08-12T18:54:21Z",
      "side": 1,
      "message": "ditto?",
      "revId": "397778afb0e39305c3c70f050eb87bcab2c67a7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_befa8772",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/vxgw/FloodingProxyHerald.scala",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-08-12T18:54:21Z",
      "side": 1,
      "message": "CHM -\u003e HM to keep the path lockless for reads right?",
      "range": {
        "startLine": 75,
        "startChar": 4,
        "endLine": 81,
        "endChar": 5
      },
      "revId": "397778afb0e39305c3c70f050eb87bcab2c67a7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_fef08f92",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/vxgw/FloodingProxyHerald.scala",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-08-12T18:54:21Z",
      "side": 1,
      "message": "wrap?",
      "revId": "397778afb0e39305c3c70f050eb87bcab2c67a7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_5e317b58",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/vxgw/FloodingProxyHerald.scala",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-08-12T18:54:21Z",
      "side": 1,
      "message": "move to the top with the rest of class properties?",
      "revId": "397778afb0e39305c3c70f050eb87bcab2c67a7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_7e82bfc8",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/vxgw/FloodingProxyHerald.scala",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-08-12T18:54:21Z",
      "side": 1,
      "message": "Maybe \"Host update stream finished\" is more readable for users/support. Bonus points for adding the host id, but that\u0027d overcomplicate this too much (needs an observer per host).",
      "range": {
        "startLine": 139,
        "startChar": 23,
        "endLine": 139,
        "endChar": 48
      },
      "revId": "397778afb0e39305c3c70f050eb87bcab2c67a7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_c4adbe32",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/vxgw/FloodingProxyHerald.scala",
        "patchSetId": 1
      },
      "lineNbr": 156,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-08-12T18:54:21Z",
      "side": 1,
      "message": "I guess you can move this into subscribeTunnelZone?",
      "range": {
        "startLine": 156,
        "startChar": 24,
        "endLine": 156,
        "endChar": 78
      },
      "revId": "397778afb0e39305c3c70f050eb87bcab2c67a7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_04a40649",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/vxgw/FloodingProxyHerald.scala",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-08-12T18:54:21Z",
      "side": 1,
      "message": "I\u0027d appreciate some javadoc here, hard to guess the purpose. I assume you want to track the State of all the tzs of a given host, in that case the take(1) below applies, and also you could simply fetch a Future[TunnelZone] from ZOOM and onSuccess { tz \u003d\u003e if (tz.type \u003d\u003d VTEP) backend.stateStore.keyObservable etc.}\n\nBut I may be misinterpreting the purpose as I said.",
      "range": {
        "startLine": 175,
        "startChar": 16,
        "endLine": 175,
        "endChar": 35
      },
      "revId": "397778afb0e39305c3c70f050eb87bcab2c67a7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_fe2defa8",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/vxgw/FloodingProxyHerald.scala",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-08-12T10:22:58Z",
      "side": 1,
      "message": "Maybe he we should add a take(1) or equivalent. Otherwise, the flatMap below will duplicate the notifications from the flooding proxy observable for each tunnel-zone emitted on the tunnel-zone observable.\n\nOr maybe even a: switchOnNext, making sure we unsubscribe from the GroupObservable, discarding its buffer.",
      "range": {
        "startLine": 177,
        "startChar": 12,
        "endLine": 177,
        "endChar": 69
      },
      "revId": "397778afb0e39305c3c70f050eb87bcab2c67a7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_be28c7e2",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/services/vxgw/FloodingProxyHerald.scala",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-08-12T18:54:21Z",
      "side": 1,
      "message": "indent under stateStore seems to make it more readable",
      "revId": "397778afb0e39305c3c70f050eb87bcab2c67a7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}