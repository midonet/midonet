{
  "comments": [
    {
      "key": {
        "uuid": "facab960_6a9e0b58",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 16,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-09T12:45:21Z",
      "side": 1,
      "message": "completing?",
      "range": {
        "startLine": 16,
        "startChar": 5,
        "endLine": 16,
        "endChar": 13
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_eaa93b7c",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/util/NodeObservable.scala",
        "patchSetId": 7
      },
      "lineNbr": 39,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-09T12:45:21Z",
      "side": 1,
      "message": "extra line",
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_bda69c51",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/util/NodeObservable.scala",
        "patchSetId": 7
      },
      "lineNbr": 39,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-10T09:01:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_eaa93b7c",
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_8acb4f52",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/util/NodeObservable.scala",
        "patchSetId": 7
      },
      "lineNbr": 56,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-09T12:45:21Z",
      "side": 1,
      "message": "remove",
      "range": {
        "startLine": 54,
        "startChar": 7,
        "endLine": 56,
        "endChar": 6
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_dd644024",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/util/NodeObservable.scala",
        "patchSetId": 7
      },
      "lineNbr": 56,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-10T09:01:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_8acb4f52",
      "range": {
        "startLine": 54,
        "startChar": 7,
        "endLine": 56,
        "endChar": 6
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_2ae243d5",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/util/NodeObservable.scala",
        "patchSetId": 7
      },
      "lineNbr": 57,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-09T12:45:21Z",
      "side": 1,
      "message": "\u0027nullOnDelete\u0027 is set to \u0027true\u0027",
      "range": {
        "startLine": 57,
        "startChar": 12,
        "endLine": 57,
        "endChar": 25
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_6aed2b8b",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/util/NodeObservable.scala",
        "patchSetId": 7
      },
      "lineNbr": 57,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-09T12:45:21Z",
      "side": 1,
      "message": "In this case the observable emits a null element and installs an exists watcher. The behaviour you describe here occurs when nullOnDelete is set to false.",
      "range": {
        "startLine": 57,
        "startChar": 31,
        "endLine": 57,
        "endChar": 51
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_1d6f88fe",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/util/NodeObservable.scala",
        "patchSetId": 7
      },
      "lineNbr": 57,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-10T09:01:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_2ae243d5",
      "range": {
        "startLine": 57,
        "startChar": 12,
        "endLine": 57,
        "endChar": 25
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_fd674423",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/util/NodeObservable.scala",
        "patchSetId": 7
      },
      "lineNbr": 57,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-10T09:01:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_6aed2b8b",
      "range": {
        "startLine": 57,
        "startChar": 31,
        "endLine": 57,
        "endChar": 51
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_bd169cef",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/util/NodeObservable.scala",
        "patchSetId": 7
      },
      "lineNbr": 78,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-06-10T10:51:46Z",
      "side": 1,
      "message": "This seems unnecessarily verbose. Every line produced by this log is going to be prefixed with \"org.midonet.cluster.util.NodeObservable-\" plus the path. Could we just make it s\"NodeObservable-$path\"? There\u0027s not really a need to disambiguate, is there?",
      "range": {
        "startLine": 78,
        "startChar": 20,
        "endLine": 78,
        "endChar": 54
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_ea45bbb3",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/util/NodeObservable.scala",
        "patchSetId": 7
      },
      "lineNbr": 179,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-09T12:45:21Z",
      "side": 1,
      "message": "waiting?",
      "range": {
        "startLine": 179,
        "startChar": 44,
        "endLine": 179,
        "endChar": 48
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_3d728ce5",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/util/NodeObservable.scala",
        "patchSetId": 7
      },
      "lineNbr": 179,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-10T09:01:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_ea45bbb3",
      "range": {
        "startLine": 179,
        "startChar": 44,
        "endLine": 179,
        "endChar": 48
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_20a7bf0d",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/util/NodeObservable.scala",
        "patchSetId": 7
      },
      "lineNbr": 186,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-06-10T10:51:46Z",
      "side": 1,
      "message": "event.getResultCode match {...} would be a bit more clear, I think.",
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_8a550f52",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/util/NodeObservable.scala",
        "patchSetId": 7
      },
      "lineNbr": 280,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-09T12:45:21Z",
      "side": 1,
      "message": "used anymore",
      "range": {
        "startLine": 280,
        "startChar": 53,
        "endLine": 280,
        "endChar": 59
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_5d7830c4",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/util/NodeObservable.scala",
        "patchSetId": 7
      },
      "lineNbr": 280,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-10T09:01:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_8a550f52",
      "range": {
        "startLine": 280,
        "startChar": 53,
        "endLine": 280,
        "endChar": 59
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_aad733be",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/util/NodeObservable.scala",
        "patchSetId": 7
      },
      "lineNbr": 307,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-09T12:45:21Z",
      "side": 1,
      "message": "You use Zookeeper in plain above, why not here?",
      "range": {
        "startLine": 307,
        "startChar": 4,
        "endLine": 307,
        "endChar": 6
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_7d7334e7",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/util/NodeObservable.scala",
        "patchSetId": 7
      },
      "lineNbr": 307,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-10T09:01:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_aad733be",
      "range": {
        "startLine": 307,
        "startChar": 4,
        "endLine": 307,
        "endChar": 6
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_cae637b4",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/util/NodeObservable.scala",
        "patchSetId": 7
      },
      "lineNbr": 311,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-09T12:45:21Z",
      "side": 1,
      "message": "Same comment.",
      "range": {
        "startLine": 311,
        "startChar": 4,
        "endLine": 311,
        "endChar": 6
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_9d82b892",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/util/NodeObservable.scala",
        "patchSetId": 7
      },
      "lineNbr": 311,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-10T09:01:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "facab960_cae637b4",
      "range": {
        "startLine": 311,
        "startChar": 4,
        "endLine": 311,
        "endChar": 6
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_8a034f41",
        "filename": "nsdb/src/test/scala/org/midonet/cluster/util/NodeObservableTest.scala",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2015-06-09T12:45:21Z",
      "side": 1,
      "message": "Use timeout instead of literal (same comment for the awaitOnNext below)?",
      "range": {
        "startLine": 44,
        "startChar": 28,
        "endLine": 44,
        "endChar": 36
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_bd7dbcb3",
        "filename": "nsdb/src/test/scala/org/midonet/cluster/util/NodeObservableTest.scala",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-10T09:01:00Z",
      "side": 1,
      "message": "At first Intellij didn\u0027t like it. It seems to be fine now. Done",
      "parentUuid": "facab960_8a034f41",
      "range": {
        "startLine": 44,
        "startChar": 28,
        "endLine": 44,
        "endChar": 36
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_000abbd1",
        "filename": "nsdb/src/test/scala/org/midonet/cluster/util/NodeObservableTest.scala",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-06-10T10:51:46Z",
      "side": 1,
      "message": "1 second looks like asking for random test failures. Are you sure it will always be enough?",
      "parentUuid": "facab960_bd7dbcb3",
      "range": {
        "startLine": 44,
        "startChar": 28,
        "endLine": 44,
        "endChar": 36
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_20289f33",
        "filename": "nsdb/src/test/scala/org/midonet/cluster/util/NodeObservableTest.scala",
        "patchSetId": 7
      },
      "lineNbr": 62,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-06-10T10:51:46Z",
      "side": 1,
      "message": "There are many places in this class where you check the size of these three lists. What if you gave TestObserver a function like this?\n\n    def checkEvents(onNext: List[String] \u003d List(),\n                    completed: Boolean \u003d false,\n                    errClass: Option[Class[_]] \u003d None): Unit \u003d {\n        val received \u003d getOnNextEvents.asScala.toList\n            .map(cd \u003d\u003e new String(cd.getData))\n        received shouldBe onNext\n\n        getOnCompletedEvents.size shouldBe (if (completed) 1 else 0)\n\n        errClass match {\n            case None \u003d\u003e getOnErrorEvents shouldBe empty\n            case Some(ec) \u003d\u003e\n                getOnErrorEvents.size shouldBe 1\n                getOnErrorEvents.get(0).getClass shouldBe ec\n        }\n    }\n\nI assume there are a bunch of other tests that could use this, as well.",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 62,
        "endChar": 50
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_a0dcaf13",
        "filename": "nsdb/src/test/scala/org/midonet/cluster/util/NodeObservableTest.scala",
        "patchSetId": 7
      },
      "lineNbr": 79,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-06-10T10:51:46Z",
      "side": 1,
      "message": "Why error and not completion?",
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_c0ee13b4",
        "filename": "nsdb/src/test/scala/org/midonet/cluster/util/NodeObservableTest.scala",
        "patchSetId": 7
      },
      "lineNbr": 177,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-06-10T10:51:46Z",
      "side": 1,
      "message": "Would it be reasonable to test recovery from suspension with a mocked curator? I haven\u0027t really thought through it, so I\u0027m not sure how much behavior would have to be mocked. If you can do it without too much trouble, I think it would be nice to have.",
      "range": {
        "startLine": 177,
        "startChar": 6,
        "endLine": 177,
        "endChar": 34
      },
      "revId": "e80e6ee05bf1f32c9f552c3daa0e59a97f8ed66d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}