{
  "comments": [
    {
      "key": {
        "uuid": "1a106d94_d3b9dbea",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/PoolHealthMonitorMapper.scala",
        "patchSetId": 7
      },
      "lineNbr": 38,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-03-30T15:47:28Z",
      "side": 1,
      "message": "Nit: In Scala, constants should be written in upper camel case:\nhttp://docs.scala-lang.org/style/naming-conventions.html#constants-values-variable-and-methods",
      "range": {
        "startLine": 38,
        "startChar": 14,
        "endLine": 38,
        "endChar": 41
      },
      "revId": "9daa58d502fd72135bef0d6d035f0f73d36e250b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_73f107cd",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/PoolHealthMonitorMapper.scala",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-03-30T15:47:28Z",
      "side": 1,
      "message": "Isn\u0027t this a poolhealthmonitor?",
      "range": {
        "startLine": 50,
        "startChar": 50,
        "endLine": 50,
        "endChar": 70
      },
      "revId": "9daa58d502fd72135bef0d6d035f0f73d36e250b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_53efabb0",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/PoolHealthMonitorMapper.scala",
        "patchSetId": 7
      },
      "lineNbr": 61,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-03-30T15:47:28Z",
      "side": 1,
      "message": "I think here it\u0027s safer to add an observerOn on the VT scheduler. Otherwise, it\u0027s possible that a pool update changing the health monitor id may not block a concurrent notification from the health monitor.",
      "range": {
        "startLine": 61,
        "startChar": 12,
        "endLine": 61,
        "endChar": 69
      },
      "revId": "9daa58d502fd72135bef0d6d035f0f73d36e250b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_53c16b2d",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/PoolHealthMonitorMapper.scala",
        "patchSetId": 7
      },
      "lineNbr": 145,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-03-30T15:47:28Z",
      "side": 1,
      "message": "We shouldn\u0027t need this subject. The idea is to compose input observables, and expose the composition as the output observable below.",
      "range": {
        "startLine": 145,
        "startChar": 4,
        "endLine": 145,
        "endChar": 58
      },
      "revId": "9daa58d502fd72135bef0d6d035f0f73d36e250b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_f3e7b7e2",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/PoolHealthMonitorMapper.scala",
        "patchSetId": 7
      },
      "lineNbr": 156,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-03-30T15:47:28Z",
      "side": 1,
      "message": "I think observables like this won\u0027t do anything unless you have a subscriber to them.",
      "range": {
        "startLine": 150,
        "startChar": 8,
        "endLine": 156,
        "endChar": 59
      },
      "revId": "9daa58d502fd72135bef0d6d035f0f73d36e250b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_73c46740",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/PoolHealthMonitorMapper.scala",
        "patchSetId": 7
      },
      "lineNbr": 166,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-03-30T15:47:28Z",
      "side": 1,
      "message": "Again, I\u0027m not sure that this will do anything unless you have a subscriber to it.",
      "range": {
        "startLine": 159,
        "startChar": 3,
        "endLine": 166,
        "endChar": 67
      },
      "revId": "9daa58d502fd72135bef0d6d035f0f73d36e250b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_33d14ffc",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/PoolHealthMonitorMapper.scala",
        "patchSetId": 7
      },
      "lineNbr": 181,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-03-30T15:47:28Z",
      "side": 1,
      "message": "Here, the output observable should compose the input observable from above. In that way, any subscriber to the mapper will become a subscriber to the input observables. This will ensure that any handling method you have (for doOnNext, doOnCompleted, etc) is being called when receiving notifications.",
      "range": {
        "startLine": 181,
        "startChar": 8,
        "endLine": 181,
        "endChar": 30
      },
      "revId": "9daa58d502fd72135bef0d6d035f0f73d36e250b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}