{
  "comments": [
    {
      "key": {
        "uuid": "1ab14d0d_81ddbe72",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2016-12-19T12:42:58Z",
      "side": 1,
      "message": "why to change the default?",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 57
      },
      "revId": "458db5bcfb78c21b7d0ff03d1e7d1c105607cf3b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ab14d0d_af10a1a9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1003629
      },
      "writtenOn": "2016-12-20T01:26:45Z",
      "side": 1,
      "message": "Because otherwise the socket connection to try and update member status will fail, meaning a) the user will constantly get errors unless we just stop trying after a failure or b) they won\u0027t be able to get member status updated, thus nullifying the feature.  I guess I\u0027d turn the question around and ask if anyone thinks there\u0027s a danger or possible conflict with enabling the topology API socket by default.",
      "parentUuid": "1ab14d0d_81ddbe72",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 57
      },
      "revId": "458db5bcfb78c21b7d0ff03d1e7d1c105607cf3b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ab14d0d_4fe59da6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2016-12-20T03:43:12Z",
      "side": 1,
      "message": "as it exposes the whole topology, it might be dangerous.\nand not every neutron users use LB or HM.\nto me it looks like a matter of documentation.\n\nanyway, please make it a separate change.",
      "parentUuid": "1ab14d0d_af10a1a9",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 57
      },
      "revId": "458db5bcfb78c21b7d0ff03d1e7d1c105607cf3b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ab14d0d_ea03370c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1003629
      },
      "writtenOn": "2016-12-20T05:46:42Z",
      "side": 1,
      "message": "Sure, I will remove it, if it is understood that this will make a recurring log message of:\n\n2016-12-20 05:45:56.065 TRACE oslo.service.loopingcall Traceback (most recent call last):\n2016-12-20 05:45:56.065 TRACE oslo.service.loopingcall   File \"/usr/local/lib/python2.7/dist-packages/oslo_service/loopingcall.py\", line 65, in func\n2016-12-20 05:45:56.065 TRACE oslo.service.loopingcall     return f(*args, **kwargs)\n2016-12-20 05:45:56.065 TRACE oslo.service.loopingcall   File \"/home/vagrant/src/git/openstack/networking-midonet/midonet/neutron/services/loadbalancer/v2_driver.py\", line 66, in _update_member_status\n2016-12-20 05:45:56.065 TRACE oslo.service.loopingcall     members \u003d self._client.topo_get_pool_members()\n2016-12-20 05:45:56.065 TRACE oslo.service.loopingcall   File \"/home/vagrant/src/git/openstack/networking-midonet/midonet/neutron/client/api.py\", line 249, in topo_get_pool_members\n2016-12-20 05:45:56.065 TRACE oslo.service.loopingcall     self.config.cluster_ip,  self.config.cluster_port)\n2016-12-20 05:45:56.065 TRACE oslo.service.loopingcall   File \"/home/vagrant/src/git/openstack/networking-midonet/midonet/neutron/rpc/topology_client.py\", line 60, in get_all_midonet_pool_members\n2016-12-20 05:45:56.065 TRACE oslo.service.loopingcall     pool_members.get_all_dict)\n2016-12-20 05:45:56.065 TRACE oslo.service.loopingcall   File \"/home/vagrant/src/git/openstack/networking-midonet/midonet/neutron/rpc/topology_client.py\", line 49, in invoke_cluster_rpc\n2016-12-20 05:45:56.065 TRACE oslo.service.loopingcall     raise mexc.ClusterConnectionError()\n2016-12-20 05:45:56.065 TRACE oslo.service.loopingcall ClusterConnectionError: Error connecting to cluster\n2016-12-20 05:45:56.065 TRACE oslo.service.loopingcall \n\n\nappear in the neutron logs every interval period.",
      "parentUuid": "1ab14d0d_4fe59da6",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 57
      },
      "revId": "458db5bcfb78c21b7d0ff03d1e7d1c105607cf3b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ab14d0d_a1f79af4",
        "filename": "python-midonetclient/src/midonetclient/topology/__init__.py",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2016-12-19T12:42:58Z",
      "side": 1,
      "message": "what\u0027s the point to add a placeholder?",
      "revId": "458db5bcfb78c21b7d0ff03d1e7d1c105607cf3b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ab14d0d_ef16a9a6",
        "filename": "python-midonetclient/src/midonetclient/topology/__init__.py",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1003629
      },
      "writtenOn": "2016-12-20T01:26:45Z",
      "side": 1,
      "message": "Because I was planning on adding it in this patch, but maybe it\u0027s better to not have it and add it in a new patch. I\u0027ll remove this func.",
      "parentUuid": "1ab14d0d_a1f79af4",
      "revId": "458db5bcfb78c21b7d0ff03d1e7d1c105607cf3b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}