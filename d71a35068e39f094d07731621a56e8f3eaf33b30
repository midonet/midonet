{
  "comments": [
    {
      "key": {
        "uuid": "7a1969be_4437cde3",
        "filename": "brain/midonet-brain/src/main/scala/org/midonet/brain/services/c3po/translators/SecurityGroupTranslator.scala",
        "patchSetId": 16
      },
      "lineNbr": 219,
      "author": {
        "id": 1002750
      },
      "writtenOn": "2015-02-16T20:22:46Z",
      "side": 1,
      "message": "nitpick: the protobuf set* methods accept a MessageOrBuilder type, so the .build is not strictly necessary when setting a field...",
      "range": {
        "startLine": 219,
        "startChar": 39,
        "endLine": 219,
        "endChar": 47
      },
      "revId": "d71a35068e39f094d07731621a56e8f3eaf33b30",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_64af69e4",
        "filename": "cluster/src/main/proto/topology.proto",
        "patchSetId": 16
      },
      "lineNbr": 205,
      "author": {
        "id": 1002750
      },
      "writtenOn": "2015-02-16T20:22:46Z",
      "side": 1,
      "message": "Would it make sense to set \u0027type\u0027 (and possibly \u0027id\u0027) as required? (the question applies also to the other models...)",
      "range": {
        "startLine": 205,
        "startChar": 4,
        "endLine": 205,
        "endChar": 12
      },
      "revId": "d71a35068e39f094d07731621a56e8f3eaf33b30",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_c4a0ddf6",
        "filename": "cluster/src/main/proto/topology.proto",
        "patchSetId": 16
      },
      "lineNbr": 214,
      "author": {
        "id": 1002750
      },
      "writtenOn": "2015-02-16T20:22:46Z",
      "side": 1,
      "message": "From the code, it looks like this reordering is made to make these values match the Action values defined somewhere else (org.midonet.midolman.rules.RuleResult.Action?)... If so, it would be good to add a comment indicating that, in case of modifications, the other file should also be modified. (The comment should also be present in the other file)",
      "range": {
        "startLine": 212,
        "startChar": 5,
        "endLine": 214,
        "endChar": 17
      },
      "revId": "d71a35068e39f094d07731621a56e8f3eaf33b30",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_24ff3169",
        "filename": "cluster/src/main/proto/topology.proto",
        "patchSetId": 16
      },
      "lineNbr": 260,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-02-17T04:25:24Z",
      "side": 1,
      "message": "Any particular reason for this? Zoom bindings don\u0027t work with nested fields, so if we do this, we either won\u0027t be able to use bindings, or will need to modify Zoom to allow bindings on nested fields. The latter should be doable, but if there\u0027s no real need to nest it, I\u0027d rather not go to the trouble.",
      "range": {
        "startLine": 218,
        "startChar": 0,
        "endLine": 260,
        "endChar": 5
      },
      "revId": "d71a35068e39f094d07731621a56e8f3eaf33b30",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_045dd521",
        "filename": "cluster/src/test/scala/org/midonet/cluster/data/storage/StorageTester.scala",
        "patchSetId": 16
      },
      "lineNbr": 269,
      "author": {
        "id": 1002750
      },
      "writtenOn": "2015-02-16T20:22:46Z",
      "side": 1,
      "message": "I guess ignoring the \u0027action\u0027 argument is intended (?)",
      "range": {
        "startLine": 269,
        "startChar": 34,
        "endLine": 269,
        "endChar": 52
      },
      "revId": "d71a35068e39f094d07731621a56e8f3eaf33b30",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_64412939",
        "filename": "midolman/src/main/java/org/midonet/midolman/rules/Condition.java",
        "patchSetId": 16
      },
      "lineNbr": 162,
      "author": {
        "id": 1002750
      },
      "writtenOn": "2015-02-16T20:22:46Z",
      "side": 1,
      "message": "Wouldn\u0027t this belong to UUIDUtil?",
      "range": {
        "startLine": 162,
        "startChar": 4,
        "endLine": 162,
        "endChar": 69
      },
      "revId": "d71a35068e39f094d07731621a56e8f3eaf33b30",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_0474b597",
        "filename": "midolman/src/main/java/org/midonet/midolman/rules/Condition.java",
        "patchSetId": 16
      },
      "lineNbr": 163,
      "author": {
        "id": 1002750
      },
      "writtenOn": "2015-02-16T20:22:46Z",
      "side": 1,
      "message": "Just a comment (no need to change anything), but I tend to prefer ArrayList for this kind of temporary lists. They should be slightly faster if the size is known in advance...",
      "range": {
        "startLine": 163,
        "startChar": 39,
        "endLine": 163,
        "endChar": 49
      },
      "revId": "d71a35068e39f094d07731621a56e8f3eaf33b30",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}