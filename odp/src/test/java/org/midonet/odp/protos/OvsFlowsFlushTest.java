/*
 * Copyright 2014 Midokura SARL
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.midonet.odp.protos;

import java.util.Arrays;
import java.util.concurrent.Future;

import org.junit.Before;
import org.junit.Test;
import org.midonet.odp.flows.FlowKey;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import static org.hamcrest.CoreMatchers.equalTo;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.MatcherAssert.assertThat;

import org.midonet.odp.Datapath;
import org.midonet.odp.Flow;
import org.midonet.odp.FlowMatch;
import org.midonet.odp.flows.FlowKeyEtherType;
import org.midonet.packets.IPv4Addr;
import org.midonet.packets.MAC;
import static org.midonet.odp.flows.FlowKeys.arp;
import static org.midonet.odp.flows.FlowKeys.encap;
import static org.midonet.odp.flows.FlowKeys.etherType;
import static org.midonet.odp.flows.FlowKeys.ethernet;
import static org.midonet.odp.flows.FlowKeys.inPort;
import static org.midonet.odp.flows.FlowKeys.vlan;


public class OvsFlowsFlushTest extends AbstractNetlinkProtocolTest {

    private static final Logger log = LoggerFactory
        .getLogger(OvsFlowsFlushTest.class);

    @Before
    public void setUp() throws Exception {
        super.setUp(responses);
        setConnection();
        connection.bypassSendQueue(true);
        connection.setMaxBatchIoOps(1);
    }

    @Test
    public void testFlowsEnumerate() throws Exception {

        Future<Datapath> dpResult = connection.futures.datapathsGet("bibi");
        // multi containing the datapaths data
        exchangeMessage();

        Future<Flow> flowResult =
            connection.futures.flowsCreate(dpResult.get(), new Flow(flowMatch()));

        // multi containing the ports data
        exchangeMessage();

        assertThat("The created flow has the same keySet as the requested one",
                   flowResult.get().getMatch(),
                   equalTo(flowMatch()));

        Future<Boolean> operationResult = connection.futures.flowsFlush(dpResult.get());
        exchangeMessage();

        assertThat("The flowsFlush() result should have been true",
                   operationResult.get(), is(true));
    }

    private static FlowMatch flowMatch() {
        return new FlowMatch()
            .addKey(inPort(0))
            .addKey(ethernet(MAC.fromString("ae:b3:77:8c:a1:48").getAddress(),
                    MAC.fromString("33:33:00:00:00:16").getAddress()))
            .addKey(etherType(FlowKeyEtherType.Type.ETH_P_8021Q))
            .addKey(vlan((short) 0x0101))
            .addKey(
                encap(Arrays.<FlowKey>asList(
                    etherType(FlowKeyEtherType.Type.ETH_P_ARP),
                    arp(MAC.fromString("ae:b3:77:8d:c1:48").getAddress(),
                        MAC.fromString("ae:b3:70:8d:c1:48").getAddress(),
                        (short) 2,
                        IPv4Addr.stringToInt("192.168.100.1"),
                        IPv4Addr.stringToInt("192.168.102.1")))));
    }

    final byte[][] responses = {
/*
// write - time: 1344866386496
    {
        (byte)0x28, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x00,
        (byte)0x01, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x93, (byte)0x58, (byte)0x00, (byte)0x00, (byte)0x03, (byte)0x01,
        (byte)0x00, (byte)0x00, (byte)0x11, (byte)0x00, (byte)0x02, (byte)0x00,
        (byte)0x6F, (byte)0x76, (byte)0x73, (byte)0x5F, (byte)0x64, (byte)0x61,
        (byte)0x74, (byte)0x61, (byte)0x70, (byte)0x61, (byte)0x74, (byte)0x68,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00
    },
*/
        // read - time: 1344866386513
        {
            (byte)0xC0, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x93, (byte)0x58, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x02,
            (byte)0x00, (byte)0x00, (byte)0x11, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x6F, (byte)0x76, (byte)0x73, (byte)0x5F, (byte)0x64, (byte)0x61,
            (byte)0x74, (byte)0x61, (byte)0x70, (byte)0x61, (byte)0x74, (byte)0x68,
            (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x06, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0xF9, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x08, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x01, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x04, (byte)0x00,
            (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x05, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x54, (byte)0x00, (byte)0x06, (byte)0x00, (byte)0x14, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x01, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x02, (byte)0x00, (byte)0x0B, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x14, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x08, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x0B, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x14, (byte)0x00, (byte)0x03, (byte)0x00,
            (byte)0x08, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x03, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x0E, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x14, (byte)0x00,
            (byte)0x04, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x01, (byte)0x00,
            (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x02, (byte)0x00, (byte)0x0B, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x24, (byte)0x00, (byte)0x07, (byte)0x00, (byte)0x20, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x11, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x6F, (byte)0x76, (byte)0x73, (byte)0x5F,
            (byte)0x64, (byte)0x61, (byte)0x74, (byte)0x61, (byte)0x70, (byte)0x61,
            (byte)0x74, (byte)0x68, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00
        },
/*
// write - time: 1344866386518
    {
        (byte)0x24, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x00,
        (byte)0x01, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x93, (byte)0x58, (byte)0x00, (byte)0x00, (byte)0x03, (byte)0x01,
        (byte)0x00, (byte)0x00, (byte)0x0E, (byte)0x00, (byte)0x02, (byte)0x00,
        (byte)0x6F, (byte)0x76, (byte)0x73, (byte)0x5F, (byte)0x76, (byte)0x70,
        (byte)0x6F, (byte)0x72, (byte)0x74, (byte)0x00, (byte)0x00, (byte)0x00
    },
*/
        // read - time: 1344866386519
        {
            (byte)0xB8, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x93, (byte)0x58, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x02,
            (byte)0x00, (byte)0x00, (byte)0x0E, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x6F, (byte)0x76, (byte)0x73, (byte)0x5F, (byte)0x76, (byte)0x70,
            (byte)0x6F, (byte)0x72, (byte)0x74, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x06, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0xFA, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x03, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x04, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x08, (byte)0x00, (byte)0x05, (byte)0x00, (byte)0x64, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x54, (byte)0x00, (byte)0x06, (byte)0x00,
            (byte)0x14, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x08, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x0B, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x14, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x08, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x0B, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x14, (byte)0x00,
            (byte)0x03, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x01, (byte)0x00,
            (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x02, (byte)0x00, (byte)0x0E, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x14, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x08, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x0B, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x20, (byte)0x00, (byte)0x07, (byte)0x00,
            (byte)0x1C, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x02, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x0E, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x6F, (byte)0x76,
            (byte)0x73, (byte)0x5F, (byte)0x76, (byte)0x70, (byte)0x6F, (byte)0x72,
            (byte)0x74, (byte)0x00, (byte)0x00, (byte)0x00
        },
/*
// write - time: 1344866386520
    {
        (byte)0x24, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x00,
        (byte)0x01, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x93, (byte)0x58, (byte)0x00, (byte)0x00, (byte)0x03, (byte)0x01,
        (byte)0x00, (byte)0x00, (byte)0x0D, (byte)0x00, (byte)0x02, (byte)0x00,
        (byte)0x6F, (byte)0x76, (byte)0x73, (byte)0x5F, (byte)0x66, (byte)0x6C,
        (byte)0x6F, (byte)0x77, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00
    },
*/
        // read - time: 1344866386521
        {
            (byte)0xB8, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x93, (byte)0x58, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x02,
            (byte)0x00, (byte)0x00, (byte)0x0D, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x6F, (byte)0x76, (byte)0x73, (byte)0x5F, (byte)0x66, (byte)0x6C,
            (byte)0x6F, (byte)0x77, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x06, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0xFB, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x03, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x04, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x08, (byte)0x00, (byte)0x05, (byte)0x00, (byte)0x06, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x54, (byte)0x00, (byte)0x06, (byte)0x00,
            (byte)0x14, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x08, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x0B, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x14, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x08, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x0B, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x14, (byte)0x00,
            (byte)0x03, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x01, (byte)0x00,
            (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x02, (byte)0x00, (byte)0x0E, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x14, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x08, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x0B, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x20, (byte)0x00, (byte)0x07, (byte)0x00,
            (byte)0x1C, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x02, (byte)0x00, (byte)0x05, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x0D, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x6F, (byte)0x76,
            (byte)0x73, (byte)0x5F, (byte)0x66, (byte)0x6C, (byte)0x6F, (byte)0x77,
            (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00
        },
/*
// write - time: 1344866386521
    {
        (byte)0x24, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x00,
        (byte)0x01, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x93, (byte)0x58, (byte)0x00, (byte)0x00, (byte)0x03, (byte)0x01,
        (byte)0x00, (byte)0x00, (byte)0x0F, (byte)0x00, (byte)0x02, (byte)0x00,
        (byte)0x6F, (byte)0x76, (byte)0x73, (byte)0x5F, (byte)0x70, (byte)0x61,
        (byte)0x63, (byte)0x6B, (byte)0x65, (byte)0x74, (byte)0x00, (byte)0x00
    },
*/
        // read - time: 1344866386522
        {
            (byte)0x5C, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x93, (byte)0x58, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x02,
            (byte)0x00, (byte)0x00, (byte)0x0F, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x6F, (byte)0x76, (byte)0x73, (byte)0x5F, (byte)0x70, (byte)0x61,
            (byte)0x63, (byte)0x6B, (byte)0x65, (byte)0x74, (byte)0x00, (byte)0x00,
            (byte)0x06, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0xFC, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x03, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x04, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x08, (byte)0x00, (byte)0x05, (byte)0x00, (byte)0x04, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x18, (byte)0x00, (byte)0x06, (byte)0x00,
            (byte)0x14, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x08, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x0B, (byte)0x00,
            (byte)0x00, (byte)0x00
        },
/*
// write - time: 1344866386524
    {
        (byte)0x28, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x00,
        (byte)0x01, (byte)0x00, (byte)0x05, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x93, (byte)0x58, (byte)0x00, (byte)0x00, (byte)0x03, (byte)0x01,
        (byte)0x00, (byte)0x00, (byte)0x11, (byte)0x00, (byte)0x02, (byte)0x00,
        (byte)0x6F, (byte)0x76, (byte)0x73, (byte)0x5F, (byte)0x64, (byte)0x61,
        (byte)0x74, (byte)0x61, (byte)0x70, (byte)0x61, (byte)0x74, (byte)0x68,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00
    },
*/
        // read - time: 1344866386525
        {
            (byte)0xC0, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x05, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x93, (byte)0x58, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x02,
            (byte)0x00, (byte)0x00, (byte)0x11, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x6F, (byte)0x76, (byte)0x73, (byte)0x5F, (byte)0x64, (byte)0x61,
            (byte)0x74, (byte)0x61, (byte)0x70, (byte)0x61, (byte)0x74, (byte)0x68,
            (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x06, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0xF9, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x08, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x01, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x04, (byte)0x00,
            (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x05, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x54, (byte)0x00, (byte)0x06, (byte)0x00, (byte)0x14, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x01, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x02, (byte)0x00, (byte)0x0B, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x14, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x08, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x0B, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x14, (byte)0x00, (byte)0x03, (byte)0x00,
            (byte)0x08, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x03, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x0E, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x14, (byte)0x00,
            (byte)0x04, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x01, (byte)0x00,
            (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x02, (byte)0x00, (byte)0x0B, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x24, (byte)0x00, (byte)0x07, (byte)0x00, (byte)0x20, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x11, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x6F, (byte)0x76, (byte)0x73, (byte)0x5F,
            (byte)0x64, (byte)0x61, (byte)0x74, (byte)0x61, (byte)0x70, (byte)0x61,
            (byte)0x74, (byte)0x68, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00
        },
/*
// write - time: 1344866386528
    {
        (byte)0x24, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x00,
        (byte)0x01, (byte)0x00, (byte)0x06, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x93, (byte)0x58, (byte)0x00, (byte)0x00, (byte)0x03, (byte)0x01,
        (byte)0x00, (byte)0x00, (byte)0x0E, (byte)0x00, (byte)0x02, (byte)0x00,
        (byte)0x6F, (byte)0x76, (byte)0x73, (byte)0x5F, (byte)0x76, (byte)0x70,
        (byte)0x6F, (byte)0x72, (byte)0x74, (byte)0x00, (byte)0x00, (byte)0x00
    },
*/
        // read - time: 1344866386530
        {
            (byte)0xB8, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x06, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x93, (byte)0x58, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x02,
            (byte)0x00, (byte)0x00, (byte)0x0E, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x6F, (byte)0x76, (byte)0x73, (byte)0x5F, (byte)0x76, (byte)0x70,
            (byte)0x6F, (byte)0x72, (byte)0x74, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x06, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0xFA, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x03, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x04, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x08, (byte)0x00, (byte)0x05, (byte)0x00, (byte)0x64, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x54, (byte)0x00, (byte)0x06, (byte)0x00,
            (byte)0x14, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x08, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x0B, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x14, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x08, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x0B, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x14, (byte)0x00,
            (byte)0x03, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x01, (byte)0x00,
            (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x02, (byte)0x00, (byte)0x0E, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x14, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x01, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x08, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x0B, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x20, (byte)0x00, (byte)0x07, (byte)0x00,
            (byte)0x1C, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x02, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x0E, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x6F, (byte)0x76,
            (byte)0x73, (byte)0x5F, (byte)0x76, (byte)0x70, (byte)0x6F, (byte)0x72,
            (byte)0x74, (byte)0x00, (byte)0x00, (byte)0x00
        },
/*
// write - time: 1344866386541
    {
        (byte)0x24, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0xF9, (byte)0x00,
        (byte)0x09, (byte)0x00, (byte)0x07, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x93, (byte)0x58, (byte)0x00, (byte)0x00, (byte)0x03, (byte)0x01,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x09, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x62, (byte)0x69,
        (byte)0x62, (byte)0x69, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00
    },
*/
        // read - time: 1344866386541
        {
            (byte)0x48, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0xF9, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x07, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x93, (byte)0x58, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x01,
            (byte)0x00, (byte)0x00, (byte)0xBE, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x09, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x62, (byte)0x69,
            (byte)0x62, (byte)0x69, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x24, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x2C, (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x2C, (byte)0x03, (byte)0x00, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00
        },
/*
// write - time: 1344866386558
    {
        (byte)0x70, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0xFB, (byte)0x00,
        (byte)0x09, (byte)0x04, (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x93, (byte)0x58, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x01,
        (byte)0x00, (byte)0x00, (byte)0xBE, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x04, (byte)0x00, (byte)0x02, (byte)0x80, (byte)0x54, (byte)0x00,
        (byte)0x01, (byte)0x80, (byte)0x08, (byte)0x00, (byte)0x03, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x00,
        (byte)0x04, (byte)0x00, (byte)0xAE, (byte)0xB3, (byte)0x77, (byte)0x8C,
        (byte)0xA1, (byte)0x48, (byte)0x33, (byte)0x33, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x16, (byte)0x06, (byte)0x00, (byte)0x06, (byte)0x00,
        (byte)0x81, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x06, (byte)0x00,
        (byte)0x05, (byte)0x00, (byte)0x11, (byte)0x01, (byte)0x00, (byte)0x00,
        (byte)0x28, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x06, (byte)0x00,
        (byte)0x06, (byte)0x00, (byte)0x08, (byte)0x06, (byte)0x00, (byte)0x00,
        (byte)0x1C, (byte)0x00, (byte)0x0D, (byte)0x00, (byte)0xC0, (byte)0xA8,
        (byte)0x64, (byte)0x01, (byte)0xC0, (byte)0xA8, (byte)0x66, (byte)0x01,
        (byte)0x00, (byte)0x02, (byte)0xAE, (byte)0xB3, (byte)0x77, (byte)0x8D,
        (byte)0xC1, (byte)0x48, (byte)0xAE, (byte)0xB3, (byte)0x70, (byte)0x8D,
        (byte)0xC1, (byte)0x48, (byte)0x00, (byte)0x00
    },
*/
        // read - time: 1344866386562
        {
            (byte)0x70, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0xFB, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x93, (byte)0x58, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x01,
            (byte)0x00, (byte)0x00, (byte)0xBE, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x54, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x08, (byte)0x00,
            (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x10, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0xAE, (byte)0xB3,
            (byte)0x77, (byte)0x8C, (byte)0xA1, (byte)0x48, (byte)0x33, (byte)0x33,
            (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x16, (byte)0x06, (byte)0x00,
            (byte)0x06, (byte)0x00, (byte)0x81, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x06, (byte)0x00, (byte)0x05, (byte)0x00, (byte)0x11, (byte)0x01,
            (byte)0x00, (byte)0x00, (byte)0x28, (byte)0x00, (byte)0x01, (byte)0x00,
            (byte)0x06, (byte)0x00, (byte)0x06, (byte)0x00, (byte)0x08, (byte)0x06,
            (byte)0x00, (byte)0x00, (byte)0x1C, (byte)0x00, (byte)0x0D, (byte)0x00,
            (byte)0xC0, (byte)0xA8, (byte)0x64, (byte)0x01, (byte)0xC0, (byte)0xA8,
            (byte)0x66, (byte)0x01, (byte)0x00, (byte)0x02, (byte)0xAE, (byte)0xB3,
            (byte)0x77, (byte)0x8D, (byte)0xC1, (byte)0x48, (byte)0xAE, (byte)0xB3,
            (byte)0x70, (byte)0x8D, (byte)0xC1, (byte)0x48, (byte)0x00, (byte)0x00,
            (byte)0x04, (byte)0x00, (byte)0x02, (byte)0x00
        },
/*
// write - time: 1344866391571
    {
        (byte)0x18, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0xFB, (byte)0x00,
        (byte)0x05, (byte)0x00, (byte)0x09, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x93, (byte)0x58, (byte)0x00, (byte)0x00, (byte)0x02, (byte)0x01,
        (byte)0x00, (byte)0x00, (byte)0xBE, (byte)0x00, (byte)0x00, (byte)0x00
    },
*/
        // read - time: 1344866391572
        {
            (byte)0x24, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x02, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x09, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x93, (byte)0x58, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x18, (byte)0x00, (byte)0x00, (byte)0x00,
            (byte)0xFB, (byte)0x00, (byte)0x05, (byte)0x00, (byte)0x09, (byte)0x00,
            (byte)0x00, (byte)0x00, (byte)0x93, (byte)0x58, (byte)0x00, (byte)0x00
        },
    };
}
