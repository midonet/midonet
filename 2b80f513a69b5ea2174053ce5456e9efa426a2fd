{
  "comments": [
    {
      "key": {
        "uuid": "fa81d914_03dbfded",
        "filename": "midolman/src/main/scala/org/midonet/containers/IPSecContainer.scala",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2016-01-13T12:44:00Z",
      "side": 1,
      "message": "maybe worth having in IPSubnetUtil",
      "range": {
        "startLine": 66,
        "startChar": 3,
        "endLine": 67,
        "endChar": 51
      },
      "revId": "2b80f513a69b5ea2174053ce5456e9efa426a2fd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_929bb5c8",
        "filename": "midolman/src/main/scala/org/midonet/containers/IPSecContainer.scala",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-01-14T09:12:45Z",
      "side": 1,
      "message": "Or remove alltogether. There is an implicit asJava in that provides string repr.",
      "parentUuid": "fa81d914_03dbfded",
      "range": {
        "startLine": 66,
        "startChar": 3,
        "endLine": 67,
        "endChar": 51
      },
      "revId": "2b80f513a69b5ea2174053ce5456e9efa426a2fd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_23d801ef",
        "filename": "midolman/src/main/scala/org/midonet/containers/IPSecContainer.scala",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2016-01-13T12:44:00Z",
      "side": 1,
      "message": "1 to subnets.size() also works",
      "range": {
        "startLine": 72,
        "startChar": 8,
        "endLine": 72,
        "endChar": 32
      },
      "revId": "2b80f513a69b5ea2174053ce5456e9efa426a2fd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_d2a52d05",
        "filename": "midolman/src/main/scala/org/midonet/containers/IPSecContainer.scala",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-01-14T09:12:45Z",
      "side": 1,
      "message": "Ok. I\u0027ll apply both comments on another patch as there\u0027s is a bug precisely in this line (missing ss append inside the foreach).",
      "parentUuid": "fa81d914_23d801ef",
      "range": {
        "startLine": 72,
        "startChar": 8,
        "endLine": 72,
        "endChar": 32
      },
      "revId": "2b80f513a69b5ea2174053ce5456e9efa426a2fd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_14bc12bb",
        "filename": "nsdb/src/main/proto/neutron.proto",
        "patchSetId": 2
      },
      "lineNbr": 318,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-01-14T14:41:01Z",
      "side": 1,
      "message": "Do not change numbers in protobufs. In fact, that reminds me of another thing. What happens to client whose models stored in zookeeper do have subnet_id? We should maintain compatability with these. It should be automatic, but this should be tested (manually even) before submitting this.",
      "revId": "2b80f513a69b5ea2174053ce5456e9efa426a2fd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_54edaac2",
        "filename": "nsdb/src/main/proto/neutron.proto",
        "patchSetId": 2
      },
      "lineNbr": 318,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-01-14T14:49:40Z",
      "side": 1,
      "message": "If you have an vpnservice with subnet_id, it will complain when deserializing. As we haven\u0027t released an official package (not even branched), I thought it would be fine (current users would have to remove the current objects though). \n\nOther than that, I\u0027d prefer to have clean models than have obsolete fields in here?",
      "parentUuid": "fa81d914_14bc12bb",
      "revId": "2b80f513a69b5ea2174053ce5456e9efa426a2fd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_e3741e9e",
        "filename": "nsdb/src/main/proto/neutron.proto",
        "patchSetId": 2
      },
      "lineNbr": 318,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-01-15T12:37:50Z",
      "side": 1,
      "message": "Do the numbers matter, since we use text serialization?",
      "parentUuid": "fa81d914_54edaac2",
      "revId": "2b80f513a69b5ea2174053ce5456e9efa426a2fd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_43ba4adf",
        "filename": "nsdb/src/main/proto/neutron.proto",
        "patchSetId": 2
      },
      "lineNbr": 318,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2016-01-15T13:47:56Z",
      "side": 1,
      "message": "Note that we haven\u0027t released 5.1 version yet, so VpnService is still under development and number changing is ok.",
      "parentUuid": "fa81d914_e3741e9e",
      "revId": "2b80f513a69b5ea2174053ce5456e9efa426a2fd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_0ea799be",
        "filename": "nsdb/src/main/proto/neutron.proto",
        "patchSetId": 2
      },
      "lineNbr": 318,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-01-15T19:36:53Z",
      "side": 1,
      "message": "I guess they matter if we want to support rolling upgrades?",
      "parentUuid": "fa81d914_e3741e9e",
      "revId": "2b80f513a69b5ea2174053ce5456e9efa426a2fd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_52d12c56",
        "filename": "nsdb/src/main/proto/neutron.proto",
        "patchSetId": 2
      },
      "lineNbr": 318,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-01-19T11:40:46Z",
      "side": 1,
      "message": "I meant that the way we store Protocol buffers objects in ZK do not use these numbers in any way. It is the field name that matters.",
      "parentUuid": "fa81d914_0ea799be",
      "revId": "2b80f513a69b5ea2174053ce5456e9efa426a2fd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_34b116e2",
        "filename": "nsdb/src/main/proto/neutron.proto",
        "patchSetId": 2
      },
      "lineNbr": 338,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-01-14T14:41:01Z",
      "side": 1,
      "message": "again, don\u0027t change numbers.",
      "revId": "2b80f513a69b5ea2174053ce5456e9efa426a2fd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa81d914_d4d8ba1f",
        "filename": "nsdb/src/main/proto/neutron.proto",
        "patchSetId": 2
      },
      "lineNbr": 338,
      "author": {
        "id": 1003318
      },
      "writtenOn": "2016-01-14T14:49:40Z",
      "side": 1,
      "message": "Same. It may be better to have better organized models before release than maintain compatibility with users that used nightly packages?",
      "parentUuid": "fa81d914_34b116e2",
      "revId": "2b80f513a69b5ea2174053ce5456e9efa426a2fd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}