{
  "comments": [
    {
      "key": {
        "uuid": "facab960_1f420a3e",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 63,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-06-15T13:54:35Z",
      "side": 1,
      "message": "Just to comment that to me \"key\" and \"index\" mean the same thing, so here it seems to be repeating the same thing twice though I cannot think of a better idea.. :P",
      "range": {
        "startLine": 63,
        "startChar": 23,
        "endLine": 63,
        "endChar": 31
      },
      "revId": "1bda9ec72be9f84fd4344fcbcbda760fe279768e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_4f25b207",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 63,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-18T16:33:36Z",
      "side": 1,
      "message": "I agree, this should be a KeyKey, i.e. the key for a state key. Since StateKey was already taken, I couldn\u0027t figure out a better name either.",
      "parentUuid": "facab960_1f420a3e",
      "range": {
        "startLine": 63,
        "startChar": 23,
        "endLine": 63,
        "endChar": 31
      },
      "revId": "1bda9ec72be9f84fd4344fcbcbda760fe279768e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_640469c0",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 574,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-06-15T10:02:17Z",
      "side": 1,
      "message": "is thread safety needed here? maybe useful to specify for later reference",
      "revId": "1bda9ec72be9f84fd4344fcbcbda760fe279768e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_6f1ef6bc",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 574,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-18T16:33:36Z",
      "side": 1,
      "message": "Here I just used the same approach from ZOOM. I think there was needed in order to handle the collection of unused observables. Now, here may not be needed since the underlying cache disconnects from ZK on the last unsubscribe.\n\nHowever, we do support concurrent access to this method, so I think the observables maps have to be concurrent.",
      "parentUuid": "facab960_640469c0",
      "revId": "1bda9ec72be9f84fd4344fcbcbda760fe279768e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_ff800648",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 583,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-06-15T13:54:35Z",
      "side": 1,
      "message": "I think you can use getOrElseUpdate() here.",
      "range": {
        "startLine": 580,
        "startChar": 26,
        "endLine": 583,
        "endChar": 41
      },
      "revId": "1bda9ec72be9f84fd4344fcbcbda760fe279768e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_ef8126c4",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 583,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-18T16:33:36Z",
      "side": 1,
      "message": "Do you mean that we don\u0027t need to worry about concurrency. I think I agree, it\u0027s fine if we override an existing observable in the map.\n\nJust a note: getOrElseUpdate is not thread-safe in our scala version (it was fixed in 2.11.6 - see SI-7943)",
      "parentUuid": "facab960_ff800648",
      "range": {
        "startLine": 580,
        "startChar": 26,
        "endLine": 583,
        "endChar": 41
      },
      "revId": "1bda9ec72be9f84fd4344fcbcbda760fe279768e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_df42620f",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 607,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-06-15T13:54:35Z",
      "side": 1,
      "message": "Again, I think you can use getOrElseUpdate()",
      "range": {
        "startLine": 604,
        "startChar": 26,
        "endLine": 607,
        "endChar": 41
      },
      "revId": "1bda9ec72be9f84fd4344fcbcbda760fe279768e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_2f6f8e2c",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 607,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-18T16:33:36Z",
      "side": 1,
      "message": "See my reply above.",
      "parentUuid": "facab960_df42620f",
      "range": {
        "startLine": 604,
        "startChar": 26,
        "endLine": 607,
        "endChar": 41
      },
      "revId": "1bda9ec72be9f84fd4344fcbcbda760fe279768e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_ff456617",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 608,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-06-15T13:54:35Z",
      "side": 1,
      "message": "I\u0027m not following what you want to do here.",
      "revId": "1bda9ec72be9f84fd4344fcbcbda760fe279768e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facab960_af62be3b",
        "filename": "nsdb/src/main/scala/org/midonet/cluster/data/storage/ZookeeperObjectState.scala",
        "patchSetId": 8
      },
      "lineNbr": 608,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-06-18T16:33:36Z",
      "side": 1,
      "message": "It\u0027s my version of thread-safe getOrElseUpdate:\n1. try get the observable from the map.\n2. if it does not exist, create one (this will have no connection to storage, since it wasn\u0027t subscribed to)\n3. try add observable to map\n4. if one already exists (because of a concurrent addition to the map), use the one from the Option return by putIfAbsent\n5. otherwise, use our new observable that was added to the map",
      "parentUuid": "facab960_ff456617",
      "revId": "1bda9ec72be9f84fd4344fcbcbda760fe279768e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}