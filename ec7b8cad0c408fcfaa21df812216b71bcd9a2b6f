{
  "comments": [
    {
      "key": {
        "uuid": "9ad9bd40_dd200c9e",
        "filename": "cluster/midonet-cluster/src/main/scala/org/midonet/cluster/services/c3po/NeutronDeserializer.scala",
        "patchSetId": 2
      },
      "lineNbr": 2,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-07-02T07:13:56Z",
      "side": 1,
      "message": "s/2014/2015/",
      "range": {
        "startLine": 2,
        "startChar": 13,
        "endLine": 2,
        "endChar": 17
      },
      "revId": "ec7b8cad0c408fcfaa21df812216b71bcd9a2b6f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_9dd04455",
        "filename": "cluster/midonet-cluster/src/main/scala/org/midonet/cluster/services/c3po/NeutronDeserializer.scala",
        "patchSetId": 2
      },
      "lineNbr": 2,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2015-07-02T07:28:01Z",
      "side": 1,
      "message": "we don\u0027t keep old years?  eg. 2014,2015",
      "parentUuid": "9ad9bd40_dd200c9e",
      "range": {
        "startLine": 2,
        "startChar": 13,
        "endLine": 2,
        "endChar": 17
      },
      "revId": "ec7b8cad0c408fcfaa21df812216b71bcd9a2b6f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_7d1aa06f",
        "filename": "cluster/midonet-cluster/src/main/scala/org/midonet/cluster/services/c3po/NeutronDeserializer.scala",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-07-02T07:13:56Z",
      "side": 1,
      "message": "s/look/looks/",
      "range": {
        "startLine": 153,
        "startChar": 53,
        "endLine": 153,
        "endChar": 57
      },
      "revId": "ec7b8cad0c408fcfaa21df812216b71bcd9a2b6f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_bd0a68d0",
        "filename": "cluster/midonet-cluster/src/main/scala/org/midonet/cluster/services/c3po/NeutronDeserializer.scala",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-07-02T08:00:19Z",
      "side": 1,
      "message": "I\u0027d remove this. It\u0027s fine to add a small special case as long as you\u0027re explaining the purpose. It these cases grow we should think of a cleaner solution.",
      "range": {
        "startLine": 153,
        "startChar": 11,
        "endLine": 153,
        "endChar": 25
      },
      "revId": "ec7b8cad0c408fcfaa21df812216b71bcd9a2b6f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_9d2684b9",
        "filename": "cluster/midonet-cluster/src/main/scala/org/midonet/cluster/services/c3po/NeutronDeserializer.scala",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-07-02T07:13:56Z",
      "side": 1,
      "message": "s/maps/map/",
      "range": {
        "startLine": 154,
        "startChar": 37,
        "endLine": 154,
        "endChar": 41
      },
      "revId": "ec7b8cad0c408fcfaa21df812216b71bcd9a2b6f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_7d69c08a",
        "filename": "cluster/midonet-cluster/src/main/scala/org/midonet/cluster/services/c3po/NeutronDeserializer.scala",
        "patchSetId": 2
      },
      "lineNbr": 157,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-07-02T07:58:35Z",
      "side": 1,
      "message": "I\u0027m not 100% sure, but maybe this should be replaced with classOf[DeviceOwner].getName?",
      "range": {
        "startLine": 157,
        "startChar": 16,
        "endLine": 157,
        "endChar": 68
      },
      "revId": "ec7b8cad0c408fcfaa21df812216b71bcd9a2b6f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_5d6cfc9c",
        "filename": "cluster/midonet-cluster/src/main/scala/org/midonet/cluster/services/c3po/NeutronDeserializer.scala",
        "patchSetId": 2
      },
      "lineNbr": 157,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2015-07-02T08:00:19Z",
      "side": 1,
      "message": "it\u0027s safer to use DeviceOwner.getClass().getFullName() as this will fail compilation if a class rename / removal  happens",
      "range": {
        "startLine": 157,
        "startChar": 16,
        "endLine": 157,
        "endChar": 68
      },
      "revId": "ec7b8cad0c408fcfaa21df812216b71bcd9a2b6f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_1dafd4e4",
        "filename": "cluster/midonet-cluster/src/test/scala/org/midonet/cluster/services/c3po/NeutronDeserializerTest.scala",
        "patchSetId": 2
      },
      "lineNbr": 2,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-07-02T07:13:56Z",
      "side": 1,
      "message": "s/2014/2015/",
      "range": {
        "startLine": 2,
        "startChar": 13,
        "endLine": 2,
        "endChar": 17
      },
      "revId": "ec7b8cad0c408fcfaa21df812216b71bcd9a2b6f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_1a0c3a42",
        "filename": "nsdb/src/main/java/org/midonet/cluster/rest_api/neutron/models/DeviceOwner.java",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1002897
      },
      "writtenOn": "2015-07-02T06:56:16Z",
      "side": 1,
      "message": "i haven\u0027t changed this constructor argument\nbecause i\u0027m not sure what forValue is used for.",
      "revId": "ec7b8cad0c408fcfaa21df812216b71bcd9a2b6f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_fdaa30d3",
        "filename": "nsdb/src/main/java/org/midonet/cluster/rest_api/neutron/models/DeviceOwner.java",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2015-07-02T07:13:56Z",
      "side": 1,
      "message": "I\u0027m not sure either but it \"may\" be being used for Json deserialisation. \"compute:foo\" would still break as long as we use Compat API, I suspect.",
      "parentUuid": "9ad9bd40_1a0c3a42",
      "revId": "ec7b8cad0c408fcfaa21df812216b71bcd9a2b6f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_fd5dd0ea",
        "filename": "nsdb/src/main/java/org/midonet/cluster/rest_api/neutron/models/DeviceOwner.java",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2015-07-02T07:55:54Z",
      "side": 1,
      "message": "Yes, I believe it\u0027s used for JSON deserialization with the compatibility API. Note the @JsonCreator annotation on forValue, which indicates that it\u0027s used to create an instance from JSON.\n\nI think forValue() should be modified to accept anything beginning with \"compute:\" and interpret it as COMPUTE.",
      "parentUuid": "9ad9bd40_fdaa30d3",
      "revId": "ec7b8cad0c408fcfaa21df812216b71bcd9a2b6f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}