# Copyright 2014 Midokura SARL
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

midolman {
    include "common"

    actors {
        stash-dispatcher = {
            mailbox-type = "akka.dispatch.UnboundedDequeBasedMailbox"
        }
        pinned-dispatcher {
            executor = "thread-pool-executor"
            type = PinnedDispatcher
            mailbox-type = "akka.dispatch.UnboundedDequeBasedMailbox"
        }
    }

    akka {
        daemonic = on

        remote.netty.port = 2552
        event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]

        loglevel = "INFO"
        test {
            timefactor = 1
        }
        actor {
            debug {
                receive = off
            }
            default-dispatcher {
                type = "Dispatcher"
                executor = "fork-join-executor"

                fork-join-executor {
                    parallelism-min = 1
                    parallelism-factor = 1

                    # tweak this value to set the maximum number of threads
                    # to reserve for work that isn't packet-processing
                    # recommended values are 1 or 2 depending on the workload.
                    parallelism-max = 1
                }

                # Throughput defines the number of messages that are processed
                # in a batch before the thread is returned to the pool. Set to 1
                # for as fair as possible.
                throughput = 1

                shutdown-timeout = 1ms
            }
        }
    }
}
