#!/bin/bash

# Copyright 2014 Midokura SARL
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e

exec >> /var/log/midolman/upstart-stderr.log
exec 2>&1

# Default values for backwards compatibility
MIDO_HOME=/usr/share/midolman
MIDO_CFG=/etc/midolman
MIDO_LOG_DIR=/var/log/midolman/
MIDO_DEBUG_PORT=8001
MIDO_CFG_FILE=midolman.conf
QUAGGA_DIR=/var/run/quagga
WATCHDOG_TIMEOUT=10

if [ -f $MIDO_HOME/prepare-java ]; then
    . $MIDO_HOME/prepare-java
else
    echo "$MIDO_HOME/prepare-java: file not found"
    exit 1
fi

if [ -f /etc/midolman/midolman-env.sh ]; then
    . /etc/midolman/midolman-env.sh
else
    echo "/etc/midolman/midolman-env.sh: file not found"
    exit 1
fi

MIDO_JAR=`ls $MIDO_HOME/midolman.jar`
MIDO_MAIN=org.midonet.midolman.Midolman
MIDO_PLUGINS="$MIDO_HOME/plugins"

test -r $MIDO_JAR || exit 1

# OpenJDK uses the system jnidispatcher as default, since /usr/lib/jni is in
# the java library path. We specify our jna.jar in the classpath, this leads
# to incompatibility.  We should use either (1) the system jnidispatcher and
# the system jna.jar or (2) the packaged jnidispatcher and the packaged
# jna.jar.  Here we remove the /usr/lib/jni from the library path to use the
# package jnidispatcher
JAVA_LIBRARY_PATH=-Djava.library.path=/lib:/usr/lib

set -x

if [ ! -e "/var/run/midolman/fast_reboot.file" ]; then
    midonet_kill_process $MIDO_MAIN
    midonet_check_tcp_port $JMX_PORT
fi

if [ -z "$JVM_ON_OUT_OF_MEM" ]; then
    JVM_ON_OUT_OF_MEM="-XX:OnOutOfMemoryError=kill -9 %p"
fi

JAVA_OPTS="$JVM_OPTS -Dmidolman.log.dir=$MIDO_LOG_DIR -Dlogback.configurationFile=$MIDO_CFG/logback.xml"
if [ "xyes" = "x$DEBUG" ] ; then
    JAVA_OPTS="$JAVA_OPTS -Xdebug -Xrunjdwp:transport=dt_socket,address=$MIDO_DEBUG_PORT,server=y,suspend=y"
fi

MIDO_WATCHDOG_TIMEOUT="${WATCHDOG_TIMEOUT:-10}"

if [ -x /usr/bin/wdog ] && [ -z "$WATCHDOG_DISABLE" ] ; then
    exec /usr/bin/wdog -d /var/log/midolman $WATCHDOG_TIMEOUT -- \
                $JAVA $JAVA_LIBRARY_PATH \
                -cp $MIDO_JAR:$MIDO_PLUGINS/* \
                $JAVA_OPTS "$JVM_ON_OUT_OF_MEM" $MIDO_MAIN -c $MIDO_CFG/$MIDO_CFG_FILE
else
    exec $JAVA $JAVA_LIBRARY_PATH \
                -cp $MIDO_JAR:$MIDO_PLUGINS/* \
                $JAVA_OPTS "$JVM_ON_OUT_OF_MEM" $MIDO_MAIN -c $MIDO_CFG/$MIDO_CFG_FILE
fi
