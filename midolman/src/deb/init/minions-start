#!/bin/bash

# Copyright 2016 Midokura SARL
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e

# Default values for backwards compatibility
if [ -z "$MIDO_HOME" ]; then
    MIDO_HOME=/usr/share/midolman
fi

if [ -z "$MIDO_CFG" ]; then
    MIDO_CFG=/etc/midolman
fi

if [ -z "$MIDO_LOG_DIR" ]; then
    MIDO_LOG_DIR=/var/log/midolman/
fi

if [ -z "$MIDO_DB_DIR" ]; then
    MIDO_DB_DIR=/var/db/midolman/
fi

if [ -z "$MIDO_JMX_PORT" ]; then
    JMX_PORT="7202"
fi

if [ -z "$JVM_ON_OUT_OF_MEM" ]; then
    JVM_ON_OUT_OF_MEM="-XX:OnOutOfMemoryError=kill -9 %p"
fi

MIDO_CFG_FILE=midolman.conf

exec >> $MIDO_LOG_DIR/minions-stderr.log
exec 2>&1

if [ -f $MIDO_HOME/prepare-java ]; then
    . $MIDO_HOME/prepare-java
else
    echo "$MIDO_HOME/prepare-java: file not found"
    exit 1
fi

if [ -f $MIDO_CFG/minions-env.sh ]; then
    . $MIDO_CFG/minions-env.sh
else
    echo "$MIDO_CFG/minions-env.sh: file not found"
    exit 1
fi

if [ -z "$MIDO_JAR" ]; then
    MIDO_JAR=`ls $MIDO_HOME/midolman.jar`
    test -r $MIDO_JAR || exit 1
fi
MIDO_MAIN=org.midonet.services.AgentServicesNode

# OpenJDK uses the systemjnidispatcher as default, since /usr/lib/jni is in
# the java library path. We specify our jna.jar in the classpath, this leads
# to incompatibility.  We should use either (1) the system jnidispatcher and
# the system jna.jar or (2) the packaged jnidispatcher and the packaged
# jna.jar.  Here we remove the /usr/lib/jni from the library path to use the
# package jnidispatcher
JAVA_LIBRARY_PATH=-Djava.library.path=/lib:/usr/lib

set -x

# kill the Midonet Agent Services Node if already running. Otherwise startup
# fails because the JMX port is in use.
midonet_kill_process $MIDO_MAIN
midonet_check_tcp_port $JMX_PORT

# Add-on/plugin directory
MIDO_PLUGINS="$MIDO_HOME/plugins"

JAVA_OPTS="$JVM_OPTS -Dminions.log.dir=$MIDO_LOG_DIR \
                     -Dminions.db.dir=$MIDO_DB_DIR \
                     -Dlogback.configurationFile=$MIDO_CFG/logback-minions.xml"

exec $JAVA $JAVA_LIBRARY_PATH \
            -cp $MIDO_JAR:$MIDO_PLUGINS/* \
            $JAVA_OPTS "$JVM_ON_OUT_OF_MEM" $MIDO_MAIN $MIDO_CFG/$MIDO_CFG_FILE
