<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2014 Midokura SARL
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.midonet</groupId>
        <artifactId>midonet</artifactId>
        <version>1.8-SNAPSHOT</version>
    </parent>

    <artifactId>midolman</artifactId>
    <name>Midolman Java daemon</name>
    <packaging>jar</packaging>

    <properties>
        <!-- once old simulation unit tests are phased out,
             this should be the default value
        <groups.simulation>org.midonet.midolman.SimulationTests</groups.simulation>
        -->
        <!-- (does nothing, but needs to point to existing class) -->
        <groups.simulation>org.midonet.midolman.Midolman</groups.simulation>
    </properties>

    <repositories>
        <repository>
            <id>maven-restlet</id>
            <name>Public online Restlet repository</name>
            <url>http://maven.restlet.org</url>
        </repository>
    </repositories>

    <build>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludedGroups>${groups.simulation}</excludedGroups>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.vafer</groupId>
                <artifactId>jdeb</artifactId>
                <configuration>
                    <deb>[[buildDir]]/midolman_[[version]]_all.[[extension]]</deb>
                    <dataSet>
                        <data>
                            <src>${project.build.directory}/${project.build.finalName}.jar</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/share/midolman</prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/src/deb/init/midolman-env.sh</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/share/midolman</prefix>
                                <filemode>644</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/src/deb/init/midolman-start</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/share/midolman</prefix>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/src/deb/init/midolman-prepare</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/share/midolman</prefix>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/src/deb/init/midolman.conf</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/etc/init</prefix>
                                <filemode>644</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/conf</src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/etc/midolman</prefix>
                            </mapper>
                            <excludes>**/.gitignore</excludes>
                        </data>
                        <data>
                            <src>${project.build.directory}/dep</src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/share/midolman/dep</prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/src/deb/quagga/bgpd.conf</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/etc/quagga</prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/src/deb/bin/mm-dpctl</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/bin</prefix>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/src/deb/bin/mm-trace</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/bin</prefix>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/src/deb/bin/mm-tests</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/bin</prefix>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/src/deb/bin/mm-ctl</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/bin</prefix>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/src/deb/bin/mm-stat</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/bin</prefix>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/CHANGE-LOG.txt</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/share/doc/midolman/</prefix>
                                <filemode>644</filemode>
                            </mapper>
                        </data>
                    </dataSet>
                </configuration>
            </plugin>

            <plugin>
                <!-- copy midolman runtime jar deps for final packages -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>copy-midokura-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals><goal>copy-dependencies</goal></goals>
                        <configuration>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>
                                ${project.build.directory}/dep/
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <executable>sudo</executable>
                    <arguments>
                        <argument>java</argument>
                        <argument>${javalib}</argument>
                        <argument>-Xdebug</argument>
                        <argument>-Xrunjdwp:transport=dt_socket,address=4000,server=y,suspend=n</argument>
                        <argument>${bootstrap}</argument>
                        <argument>-cp</argument>
                        <classpath />
                        <argument>org.midonet.midolman.Midolman</argument>
                    </arguments>
                </configuration>
            </plugin>

            <plugin>
                <!-- this plugin creates a resource file gathering info from the
                last commit info which is then logged at midolman startup and
                helps to identify which midolman code is running. Resource
                filtering needs some custom configuration to include this file
                in the packaging (see below). -->
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.1.5</version>
                <executions>
                    <execution><goals><goal>revision</goal></goals></execution>
                </executions>
                <configuration>
                    <verbose>false</verbose>
                    <dateFormat>yyyy-MM-dd '@' HH:mm:ss z</dateFormat>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>
                        src/main/resources/git.properties
                    </generateGitPropertiesFilename>
                </configuration>
            </plugin>

            <plugin>
                <!-- this copies the version tagged midonet-jdk-bootstrap and
                     midolman jars into midolman/target removing the version tag
                     so that mm-*ctl scripts work out-of-the-box with artifacts
                     built from source inside the vagrant vm environment. -->
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <configuration>
                            <tasks>
                                <copy file="${project.build.directory}/${project.build.finalName}.jar"
                                      todir="${project.build.directory}"/>
                                <copy file="${bootstrap.location}/"
                                      todir="${project.build.directory}"/>
                            </tasks>
                        </configuration>
                        <goals><goal>run</goal></goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <configuration>
                    <instrumentation>
                    <excludes>
                        <exclude>**/FlowController$Wildcard*</exclude>
                        <exclude>**/FlowController$Add*</exclude>
                        <exclude>**/FlowController$Remove*</exclude>
                        <exclude>**/FlowController$Invalidate*</exclude>
                        <exclude>**/FlowController$FlowAdded*</exclude>
                        <exclude>**/FlowController$Internal$*</exclude>

                        <exclude>**/DatapathController$DpPort*</exclude>
                        <exclude>**/DatapathController$Init*</exclude>
                        <exclude>**/DatapathController$Datapath*</exclude>
                        <exclude>**/DatapathController$Internal$*</exclude>

                        <exclude>**/DeduplicationActor$ApplyFlow*</exclude>
                        <exclude>**/DeduplicationActor$*Packet*</exclude>
                        <exclude>**/DeduplicationActor$_*</exclude>

                        <exclude>**/PacketWorkflow$PacketIn*</exclude>
                        <exclude>**/PacketWorkflow$SendPacket*</exclude>
                        <exclude>**/PacketWorkflow$AddVirtual*</exclude>

                        <exclude>**/Coordinator$ToPort*</exclude>
                        <exclude>**/Coordinator$DoFlowAction*</exclude>
                        <exclude>**/Coordinator$ForkAction*</exclude>
                        <exclude>**/VirtualActions$*</exclude>

                        <exclude>**/VxLanPortMapper$Internal$*</exclude>
                    </excludes>
                    </instrumentation>
                </configuration>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>  <!-- for git -->
                    <include>**/*.xml</include>         <!-- for logger conf -->
                    <include>**/*.conf</include>        <!-- for mm conf -->
                </includes>
            </resource>
        </resources>

    </build>

    <dependencies>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>rpc</artifactId>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>packets</artifactId>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>midonet-util</artifactId>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>netlink</artifactId>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>odp</artifactId>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>cluster</artifactId>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>midonet-jdk-bootstrap</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
        </dependency>

        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_2.11</artifactId>
        </dependency>

        <dependency>
            <groupId>com.typesafe.scala-logging</groupId>
            <artifactId>scala-logging_2.11</artifactId>
        </dependency>

        <dependency>
            <groupId>org.scala-lang.modules</groupId>
            <artifactId>scala-async_2.10</artifactId>
        </dependency>

        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-actor_2.11</artifactId>
        </dependency>

        <dependency>
            <groupId>org.rogach</groupId>
            <artifactId>scallop_2.11</artifactId>
            <version>0.9.5</version>
        </dependency>

        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-slf4j_2.11</artifactId>
        </dependency>

        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-testkit_2.11</artifactId>
        </dependency>

        <dependency>
            <groupId>com.datastax.cassandra</groupId>
            <artifactId>cassandra-driver-core</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>

        <dependency>
           <groupId>org.apache.commons</groupId>
           <artifactId>commons-lang3</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-configuration</groupId>
            <artifactId>commons-configuration</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
        </dependency>

        <dependency> <!-- needed by midonet-util & netlink -->
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>io.reactivex</groupId>
            <artifactId>rxjava</artifactId>
        </dependency>

        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
        </dependency>

        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>0.9.1</version>
        </dependency>

        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path-assert</artifactId>
            <version>0.9.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.zookeeper</groupId>
            <artifactId>zookeeper</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-recipes</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency> <!-- needed at compile time via netlink dependency -->
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>7.6.14.v20131031</version>
            <exclusions>
                <exclusion>
                    <groupId>org.eclipse.jetty.orbit</groupId>
                    <artifactId>javax.servlet</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-websocket</artifactId>
            <version>7.6.14.v20131031</version>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-deploy</artifactId>
            <version>7.6.14.v20131031</version>
        </dependency>

        <dependency>
            <groupId>org.jminix</groupId>
            <artifactId>jminix</artifactId>
            <version>1.1.0</version>
        </dependency>

        <dependency>
            <groupId>org.cassandraunit</groupId>
            <artifactId>cassandra-unit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version>3.1.0</version>
        </dependency>

    </dependencies>

    <profiles>

        <profile>
            <!-- activate this profile to generate rpm package for the midolman.
            On ubuntu this requieres the rpm tools. -->
            <id>rpm-sysd</id>
            <activation>
                <property>
                    <name>rpm-sysd</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>rpm-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals><goal>rpm</goal></goals>
                                <configuration>
                                    <requires>
                                        <require>java</require>
                                        <require>quagga &gt;= 0.99.21</require>
                                        <require>bridge-utils</require>
                                        <require>iproute</require>
                                        <require>haproxy</require>
                                    </requires>
                                    <mappings>
                                        <mapping>
                                            <directory>/usr/share/midolman</directory>
                                            <sources>
                                                <source>
                                                    <location>${project.build.directory}/${project.build.finalName}.jar</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/usr/lib/systemd/system</directory>
                                            <directoryIncluded>false</directoryIncluded>
                                            <sources>
                                                <source>
                                                    <location>src/rhel7/systemd/midolman.service</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/etc/midolman</directory>
                                            <configuration>true</configuration>
                                            <sources>
                                                <source>
                                                    <location>conf</location>
                                                    <excludes>
                                                        <exclude>.gitignore</exclude>
                                                    </excludes>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/usr/share/midolman/dep</directory>
                                            <sources>
                                                <source>
                                                    <location>${project.build.directory}/dep</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/usr/share/midolman</directory>
                                            <sources>
                                                <source>
                                                    <location>src/deb/init/midolman-env.sh</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/usr/share/midolman</directory>
                                            <sources>
                                                <source>
                                                    <location>src/deb/init/midolman-start</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/usr/share/midolman</directory>
                                            <sources>
                                                <source>
                                                    <location>src/deb/init/midolman-prepare</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/etc/quagga</directory>
                                            <directoryIncluded>false</directoryIncluded>
                                            <sources>
                                                <source>
                                                    <location>src/deb/quagga/bgpd.conf</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/usr/bin</directory>
                                            <directoryIncluded>false</directoryIncluded>
                                            <filemode>755</filemode>
                                            <sources>
                                                <source>
                                                    <location>src/deb/bin/mm-dpctl</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/usr/bin</directory>
                                            <directoryIncluded>false</directoryIncluded>
                                            <filemode>755</filemode>
                                            <sources>
                                                <source>
                                                    <location>src/deb/bin/mm-trace</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/usr/bin</directory>
                                            <directoryIncluded>false</directoryIncluded>
                                            <filemode>755</filemode>
                                            <sources>
                                                <source>
                                                    <location>src/deb/bin/mm-tests</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/usr/bin</directory>
                                            <directoryIncluded>false</directoryIncluded>
                                            <filemode>755</filemode>
                                            <sources>
                                                <source>
                                                    <location>src/deb/bin/mm-ctl</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/usr/bin</directory>
                                            <directoryIncluded>false</directoryIncluded>
                                            <filemode>755</filemode>
                                            <sources>
                                                <source>
                                                    <location>src/deb/bin/mm-stat</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                    </mappings>
                                    <preinstallScriptlet>
                                        <scriptFile>${project.basedir}/src/rhel7/control/preinst</scriptFile>
                                    </preinstallScriptlet>
                                    <postinstallScriptlet>
                                        <scriptFile>${project.basedir}/src/rhel7/control/postinst</scriptFile>
                                    </postinstallScriptlet>
                                    <preremoveScriptlet>
                                        <scriptFile>${project.basedir}/src/rhel7/control/prerm</scriptFile>
                                    </preremoveScriptlet>
                                    <postremoveScriptlet>
                                        <scriptFile>${project.basedir}/src/rhel7/control/postrm</scriptFile>
                                    </postremoveScriptlet>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- activate this profile to generate rpm package for the midolman.
            On ubuntu this requieres the rpm tools. -->
            <id>rpm</id>
            <activation>
                <property><name>rpm</name></property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>rpm-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals><goal>rpm</goal></goals>
                                <configuration>
                                    <requires>
                                        <require>java7</require>
                                        <require>quagga &gt;= 0.99.21</require>
                                        <require>bridge-utils</require>
                                        <require>iproute</require>
                                        <require>haproxy</require>
                                    </requires>
                                    <mappings>
                                        <mapping>
                                            <directory>/usr/share/midolman</directory>
                                            <sources>
                                                <source>
                                                    <location>${project.build.directory}/${project.build.finalName}.jar</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/etc/init.d</directory>
                                            <directoryIncluded>false</directoryIncluded>
                                            <configuration>true</configuration>
                                            <filemode>755</filemode>
                                            <sources>
                                                <source>
                                                    <location>src/rhel6/init.d/midolman</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/etc/init</directory>
                                            <directoryIncluded>false</directoryIncluded>
                                            <configuration>true</configuration>
                                            <sources>
                                                <source>
                                                    <location>src/deb/init/midolman.conf</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/etc/midolman</directory>
                                            <configuration>true</configuration>
                                            <sources>
                                                <source>
                                                    <location>conf</location>
                                                    <excludes>
                                                        <exclude>.gitignore</exclude>
                                                    </excludes>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/usr/share/midolman/dep</directory>
                                            <sources>
                                                <source>
                                                    <location>${project.build.directory}/dep</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/usr/share/midolman</directory>
                                            <sources>
                                                <source>
                                                    <location>src/deb/init/midolman-env.sh</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/usr/share/midolman</directory>
                                            <sources>
                                                <source>
                                                    <location>src/deb/init/midolman-start</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/usr/share/midolman</directory>
                                            <sources>
                                                <source>
                                                    <location>src/deb/init/midolman-prepare</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/etc/quagga</directory>
                                            <directoryIncluded>false</directoryIncluded>
                                            <sources>
                                                <source>
                                                    <location>src/deb/quagga/bgpd.conf</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/usr/bin</directory>
                                            <directoryIncluded>false</directoryIncluded>
                                            <filemode>755</filemode>
                                            <sources>
                                                <source>
                                                    <location>src/deb/bin/mm-dpctl</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/usr/bin</directory>
                                            <directoryIncluded>false</directoryIncluded>
                                            <filemode>755</filemode>
                                            <sources>
                                                <source>
                                                    <location>src/deb/bin/mm-trace</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/usr/bin</directory>
                                            <directoryIncluded>false</directoryIncluded>
                                            <filemode>755</filemode>
                                            <sources>
                                                <source>
                                                    <location>src/deb/bin/mm-tests</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/usr/bin</directory>
                                            <directoryIncluded>false</directoryIncluded>
                                            <filemode>755</filemode>
                                            <sources>
                                                <source>
                                                    <location>src/deb/bin/mm-ctl</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                        <mapping>
                                            <directory>/usr/bin</directory>
                                            <directoryIncluded>false</directoryIncluded>
                                            <filemode>755</filemode>
                                            <sources>
                                                <source>
                                                    <location>src/deb/bin/mm-stat</location>
                                                </source>
                                            </sources>
                                        </mapping>
                                    </mappings>
                                    <preinstallScriptlet>
                                        <scriptFile>${project.basedir}/src/rhel6/control/preinst</scriptFile>
                                    </preinstallScriptlet>
                                    <postinstallScriptlet>
                                        <scriptFile>${project.basedir}/src/rhel6/control/postinst</scriptFile>
                                    </postinstallScriptlet>
                                    <preremoveScriptlet>
                                        <scriptFile>${project.basedir}/src/rhel6/control/prerm</scriptFile>
                                    </preremoveScriptlet>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- activate to run functional tests on simulation with actors -->
            <id>withSim</id>
            <properties>
                <!-- overriding value needs to point to an existing class -->
                <groups.simulation>org.midonet.midolman.Midolman</groups.simulation>
            </properties>
        </profile>

        <profile>
            <!-- activate to skip functional tests on simulation with actors.
                 to remove once old simulation unit tests are phased out -->
            <id>withoutSim</id>
            <properties>
                <groups.simulation>org.midonet.midolman.SimulationTests</groups.simulation>
            </properties>
        </profile>

        <profile>
            <id>fatJar</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>prepare-package</phase>
                                <goals><goal>single</goal></goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

</project>
