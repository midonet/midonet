{
  "comments": [
    {
      "key": {
        "uuid": "baa041b7_29edb5ef",
        "filename": "nsdb/src/main/proto/state_api.proto",
        "patchSetId": 6
      },
      "lineNbr": 248,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-06-09T09:16:07Z",
      "side": 1,
      "message": "maybe instead of having sequence number and bool and a separate message for snapshot and entry, update could have an enum\n\nenum Type {\n    BEGIN_SNAPSHOT \u003d 1;\n    SNAPSHOT \u003d 2;\n    END_SNAPSHOT \u003d 3;\n    UPDATE \u003d 4;\n}",
      "range": {
        "startLine": 248,
        "startChar": 28,
        "endLine": 248,
        "endChar": 43
      },
      "revId": "0b79c0fbcd0c43215a5fa4f19c470221039ec813",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_494d99c3",
        "filename": "nsdb/src/main/proto/state_api.proto",
        "patchSetId": 6
      },
      "lineNbr": 248,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-06-09T10:19:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "baa041b7_29edb5ef",
      "range": {
        "startLine": 248,
        "startChar": 28,
        "endLine": 248,
        "endChar": 43
      },
      "revId": "0b79c0fbcd0c43215a5fa4f19c470221039ec813",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_09b9d1ec",
        "filename": "nsdb/src/main/proto/state_api.proto",
        "patchSetId": 6
      },
      "lineNbr": 255,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-06-09T09:16:07Z",
      "side": 1,
      "message": "Why do you need last_version and current_version?",
      "revId": "0b79c0fbcd0c43215a5fa4f19c470221039ec813",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_09ed518e",
        "filename": "nsdb/src/main/proto/state_api.proto",
        "patchSetId": 6
      },
      "lineNbr": 255,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-06-09T10:19:11Z",
      "side": 1,
      "message": "Just to enable a sanity check at a client. I agree that this is not needed for the same connection, I figured when losing the connection and reconnecting and the client requests a differential update rather than a full snapshot.",
      "parentUuid": "baa041b7_09b9d1ec",
      "revId": "0b79c0fbcd0c43215a5fa4f19c470221039ec813",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_099431e6",
        "filename": "nsdb/src/main/proto/state_api.proto",
        "patchSetId": 6
      },
      "lineNbr": 255,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2016-06-09T10:33:01Z",
      "side": 1,
      "message": "Ah, i think I know what you mean. I had tried to work something like this into the original protocol. It doesn\u0027t work though, because even if you know the last_version, and you connect to a different node, there\u0027s no guarantee that you\u0027ll get all updates, as there\u0027s no guarantee that each node sees all updates, rather they are guaranteed to eventually see the up to date set (think of what happens if a znode is created and deleted between getChildren calls).\n\nIf we move to log tailing, we will be able to guarantee that we see all updates, but given that we can send multiple updates per Update, we can just use 1 version number.",
      "parentUuid": "baa041b7_09ed518e",
      "revId": "0b79c0fbcd0c43215a5fa4f19c470221039ec813",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}