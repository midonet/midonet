{
  "comments": [
    {
      "key": {
        "uuid": "7a6b29fe_90c48541",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronDeserializer.scala",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2014-11-07T03:47:31Z",
      "side": 1,
      "message": "Out-of-order.",
      "revId": "de8e30566a4533ee64a2570bc4abedb686b2d403",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_70c1e92d",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronDeserializer.scala",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2014-11-07T03:47:31Z",
      "side": 1,
      "message": "Should come after the java imports.",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 31,
        "endChar": 42
      },
      "revId": "de8e30566a4533ee64a2570bc4abedb686b2d403",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_f07219e4",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronDeserializer.scala",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2014-11-07T09:46:07Z",
      "side": 1,
      "message": "Oh, whoops. I think I added JavaConverters manually, and then I guess IDEA put TrieMap next to it, since they were related.",
      "parentUuid": "7a6b29fe_70c1e92d",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 31,
        "endChar": 42
      },
      "revId": "de8e30566a4533ee64a2570bc4abedb686b2d403",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_ab6312b0",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronDeserializer.scala",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2014-11-07T13:26:00Z",
      "side": 1,
      "message": "This seems worthy of documenting in a way that is also visible to integration devs. Do you have any good suggestions for doing it?",
      "revId": "de8e30566a4533ee64a2570bc4abedb686b2d403",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_2e00ad00",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronDeserializer.scala",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2014-11-10T03:49:58Z",
      "side": 1,
      "message": "You mean Neutron devs? Why would they need to know about this?",
      "parentUuid": "7a6b29fe_ab6312b0",
      "revId": "de8e30566a4533ee64a2570bc4abedb686b2d403",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_cb5e4ee9",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronDeserializer.scala",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2014-11-07T13:26:00Z",
      "side": 1,
      "message": "Should it be called _router_external, or something that incorporates the plugin name? Do we need to?",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 41,
        "endChar": 12
      },
      "revId": "de8e30566a4533ee64a2570bc4abedb686b2d403",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_6e0aa522",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronDeserializer.scala",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2014-11-10T03:49:58Z",
      "side": 1,
      "message": "We could replace the colon with an underscore, I guess, but I\u0027m not sure if we need to. I don\u0027t think there\u0027s any overlap now, but there might be at some point in the future.",
      "parentUuid": "7a6b29fe_cb5e4ee9",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 41,
        "endChar": 12
      },
      "revId": "de8e30566a4533ee64a2570bc4abedb686b2d403",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_8e3e21b7",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronDeserializer.scala",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2014-11-11T05:25:46Z",
      "side": 1,
      "message": "By the way, I did it that way because that\u0027s how the fields are defined in neutron.proto. If we want to change this logic, we\u0027ll need to change the message definitions, too.",
      "parentUuid": "7a6b29fe_6e0aa522",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 41,
        "endChar": 12
      },
      "revId": "de8e30566a4533ee64a2570bc4abedb686b2d403",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_73cac0a2",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronDeserializer.scala",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2014-11-13T15:39:16Z",
      "side": 1,
      "message": "I agree that we should keep this as is.",
      "parentUuid": "7a6b29fe_8e3e21b7",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 41,
        "endChar": 12
      },
      "revId": "de8e30566a4533ee64a2570bc4abedb686b2d403",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_0b5966fe",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronDeserializer.scala",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2014-11-07T13:26:00Z",
      "side": 1,
      "message": "Another detail worth documenting in for neutron devs.",
      "revId": "de8e30566a4533ee64a2570bc4abedb686b2d403",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_6b69fa8a",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronService.scala",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2014-11-07T13:26:00Z",
      "side": 1,
      "message": "I think the Neutron prefix is not really that important, being in the neutron package. But no problem if you prefer to keep it (or if it\u0027s creating conflicts elsewhere)",
      "range": {
        "startLine": 22,
        "startChar": 40,
        "endLine": 22,
        "endChar": 47
      },
      "revId": "de8e30566a4533ee64a2570bc4abedb686b2d403",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_ae131d5b",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronService.scala",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2014-11-10T03:49:58Z",
      "side": 1,
      "message": "I\u0027m pretty sure I changed it because of a conflict, but now I can\u0027t find the class it was conflicting with.",
      "parentUuid": "7a6b29fe_6b69fa8a",
      "range": {
        "startLine": 22,
        "startChar": 40,
        "endLine": 22,
        "endChar": 47
      },
      "revId": "de8e30566a4533ee64a2570bc4abedb686b2d403",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_8b6c569e",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronService.scala",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2014-11-07T13:26:00Z",
      "side": 1,
      "message": "I know these were here already but, are these defined in the neutron  proto definitions, and if so, could we use them? Just to avoid redundant code.",
      "revId": "de8e30566a4533ee64a2570bc4abedb686b2d403",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_ee1d1568",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronService.scala",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1002821
      },
      "writtenOn": "2014-11-10T03:49:58Z",
      "side": 1,
      "message": "I don\u0027t think so. These are numerical constants, whereas the definitions in neutron.proto are for message classes.",
      "parentUuid": "7a6b29fe_8b6c569e",
      "revId": "de8e30566a4533ee64a2570bc4abedb686b2d403",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_93d95c86",
        "filename": "cluster/src/main/scala/org/midonet/cluster/data/neutron/NeutronService.scala",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1002760
      },
      "writtenOn": "2014-11-13T15:39:16Z",
      "side": 1,
      "message": "Actually you can call on getNumber() on an enum value. Please see:\n\nhttps://developers.google.com/protocol-buffers/docs/reference/java/index",
      "parentUuid": "7a6b29fe_ee1d1568",
      "revId": "de8e30566a4533ee64a2570bc4abedb686b2d403",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_cb05aec3",
        "filename": "cluster/src/test/scala/org/midonet/cluster/data/neutron/NeutronDeserializerTest.scala",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2014-11-07T13:26:00Z",
      "side": 1,
      "message": "it certainly is",
      "range": {
        "startLine": 23,
        "startChar": 38,
        "endLine": 23,
        "endChar": 41
      },
      "revId": "de8e30566a4533ee64a2570bc4abedb686b2d403",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}