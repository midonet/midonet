{
  "comments": [
    {
      "key": {
        "uuid": "1a106d94_ff79832f",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/FlowProcessor.scala",
        "patchSetId": 9
      },
      "lineNbr": 97,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-05-08T15:54:06Z",
      "side": 1,
      "message": "encapsulate these very long condition that includes { a code block and looks awkward } into a tiny aptly named, self evident method?",
      "revId": "42fc86bc5923b8646871396ab135d92d4620fa37",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_3f715b0c",
        "filename": "midolman/src/main/scala/org/midonet/midolman/datapath/FlowProcessor.scala",
        "patchSetId": 9
      },
      "lineNbr": 97,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-05-08T16:14:52Z",
      "side": 1,
      "message": "that\u0027s hard to do, because i need to return a boolean and the valid sequence number. \n\ni could pass a closure or return a tuple, but we don\u0027t want that.\n\nthis is also to avoid nesting:\n\nif (disruptorSeq \u003e\u003d flowSequence) {\n  val brokerSeq \u003d broker.nextSequence()\n  if (brokerSeq !\u003d FULL) {\n     // do awesomatic things\n  } else {\n     false\n  }\n} else {\n  false\n}",
      "parentUuid": "1a106d94_ff79832f",
      "revId": "42fc86bc5923b8646871396ab135d92d4620fa37",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_bfe9cbb8",
        "filename": "midonet-util/src/main/scala/org/midonet/util/concurrent/SequenceReportingEventPoller.scala",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-05-08T15:54:06Z",
      "side": 1,
      "message": "explain yourself",
      "revId": "42fc86bc5923b8646871396ab135d92d4620fa37",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_7f663352",
        "filename": "midonet-util/src/main/scala/org/midonet/util/concurrent/SequenceReportingEventPoller.scala",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-05-08T16:14:52Z",
      "side": 1,
      "message": "ok, ok :/",
      "parentUuid": "1a106d94_bfe9cbb8",
      "revId": "42fc86bc5923b8646871396ab135d92d4620fa37",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}