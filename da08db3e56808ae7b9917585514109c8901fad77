{
  "comments": [
    {
      "key": {
        "uuid": "fafc7978_fc4ae481",
        "filename": "midolman/src/main/java/org/midonet/cluster/ClusterPortsManager.java",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2014-12-10T16:04:51Z",
      "side": 1,
      "message": "this is the scala setter? weird..",
      "range": {
        "startLine": 109,
        "startChar": 32,
        "endLine": 109,
        "endChar": 35
      },
      "revId": "da08db3e56808ae7b9917585514109c8901fad77",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_175ea1e6",
        "filename": "midolman/src/main/java/org/midonet/cluster/ClusterPortsManager.java",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2014-12-10T16:54:58Z",
      "side": 1,
      "message": "Same feeling here. Should we keep the classic setters to make this better looking?",
      "parentUuid": "fafc7978_fc4ae481",
      "range": {
        "startLine": 109,
        "startChar": 32,
        "endLine": 109,
        "endChar": 35
      },
      "revId": "da08db3e56808ae7b9917585514109c8901fad77",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_2a21b7fb",
        "filename": "midolman/src/main/java/org/midonet/cluster/ClusterPortsManager.java",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2014-12-11T18:17:02Z",
      "side": 1,
      "message": "if it\u0027s available, I\u0027d probably go for the good olde readable stuff.",
      "parentUuid": "fafc7978_175ea1e6",
      "range": {
        "startLine": 109,
        "startChar": 32,
        "endLine": 109,
        "endChar": 35
      },
      "revId": "da08db3e56808ae7b9917585514109c8901fad77",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_6d2759b7",
        "filename": "midolman/src/main/java/org/midonet/cluster/ClusterPortsManager.java",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2014-12-11T21:16:32Z",
      "side": 1,
      "message": "As far as I read, this this a setter method for a Scala var, as seen from Java. I shall add new methods to increase readability.",
      "parentUuid": "fafc7978_2a21b7fb",
      "range": {
        "startLine": 109,
        "startChar": 32,
        "endLine": 109,
        "endChar": 35
      },
      "revId": "da08db3e56808ae7b9917585514109c8901fad77",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_1c4a4880",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/VirtualTopologyActor.scala",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2014-12-10T16:04:51Z",
      "side": 1,
      "message": "remove?",
      "range": {
        "startLine": 47,
        "startChar": 27,
        "endLine": 47,
        "endChar": 31
      },
      "revId": "da08db3e56808ae7b9917585514109c8901fad77",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_b7beb5fd",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/VirtualTopologyActor.scala",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2014-12-10T16:54:58Z",
      "side": 1,
      "message": "Oops (typing in the wrong windows). Done.",
      "parentUuid": "fafc7978_1c4a4880",
      "range": {
        "startLine": 47,
        "startChar": 27,
        "endLine": 47,
        "endChar": 31
      },
      "revId": "da08db3e56808ae7b9917585514109c8901fad77",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_5c5b3054",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/devices/Port.scala",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2014-12-10T16:04:51Z",
      "side": 1,
      "message": "is this not stored in zoom? doesn\u0027t it need to be?",
      "range": {
        "startLine": 55,
        "startChar": 8,
        "endLine": 55,
        "endChar": 14
      },
      "revId": "da08db3e56808ae7b9917585514109c8901fad77",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_7c2554c1",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/devices/Port.scala",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2014-12-10T16:06:51Z",
      "side": 1,
      "message": "it needs to. We need to track port activation. This is ephemeral, so it probably needs to be separated from the rest of the data. (it is a subdirectory in zk).",
      "parentUuid": "fafc7978_5c5b3054",
      "range": {
        "startLine": 55,
        "startChar": 8,
        "endLine": 55,
        "endChar": 14
      },
      "revId": "da08db3e56808ae7b9917585514109c8901fad77",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_b71d1569",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/devices/Port.scala",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2014-12-10T16:32:45Z",
      "side": 1,
      "message": "Yeah, it just adds trickiness in that a change on this node needs to trigger a new publication on the port, but this should be easily doable in the new model (Alex / Nicolas please confirm)",
      "parentUuid": "fafc7978_7c2554c1",
      "range": {
        "startLine": 55,
        "startChar": 8,
        "endLine": 55,
        "endChar": 14
      },
      "revId": "da08db3e56808ae7b9917585514109c8901fad77",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_b75515c8",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/devices/Port.scala",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2014-12-10T16:54:58Z",
      "side": 1,
      "message": "I think we would need something similar for the Host alive field. If these are ephemerals (i.e. state data rather than topology data), we should add them to a state storage layer.\n\nMy suggestion was to use the StateStorage trait, which for the time being will use the old DataClient, at until util we come up with a solution for state data (ephemerals and replicated maps).\n\nThe StateStorage will expose a different watcher/observable to update this field.",
      "parentUuid": "fafc7978_b71d1569",
      "range": {
        "startLine": 55,
        "startChar": 8,
        "endLine": 55,
        "endChar": 14
      },
      "revId": "da08db3e56808ae7b9917585514109c8901fad77",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_aa8487d4",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/devices/Port.scala",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1002731
      },
      "writtenOn": "2014-12-11T18:17:02Z",
      "side": 1,
      "message": "sgtm",
      "parentUuid": "fafc7978_b75515c8",
      "range": {
        "startLine": 55,
        "startChar": 8,
        "endLine": 55,
        "endChar": 14
      },
      "revId": "da08db3e56808ae7b9917585514109c8901fad77",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}