{
  "comments": [
    {
      "key": {
        "uuid": "7a1969be_e6e43eae",
        "filename": "midolman/src/main/java/org/midonet/midolman/simulation/Chain.java",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2015-01-26T15:14:33Z",
      "side": 1,
      "message": "here we\u0027ll want to throw only if we are not already tracing this packet.",
      "revId": "61418f8a2f826a38b07e53d6043fed303d7a01b0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_c62b0293",
        "filename": "midolman/src/main/java/org/midonet/midolman/simulation/Chain.java",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-01-26T15:48:56Z",
      "side": 1,
      "message": "isn\u0027t this covered by the TraceRule\u0027s process method?\n\n        if (!pktCtx.tracingEnabled()) {\n            res.action \u003d Action.TRACE;\n        }",
      "parentUuid": "7a1969be_e6e43eae",
      "revId": "61418f8a2f826a38b07e53d6043fed303d7a01b0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_09040d14",
        "filename": "midolman/src/main/java/org/midonet/midolman/simulation/Chain.java",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2015-01-26T15:56:05Z",
      "side": 1,
      "message": "Yes, otherwise the packet would never get through. It\u0027s a big funky, because we basically need a way to bypass the rule when it comes to the simulation for a second time, but I can\u0027t think of a much better way that setting a switch on the ctx.",
      "parentUuid": "7a1969be_c62b0293",
      "revId": "61418f8a2f826a38b07e53d6043fed303d7a01b0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_e9c37136",
        "filename": "midolman/src/main/java/org/midonet/midolman/simulation/Chain.java",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-01-26T19:47:31Z",
      "side": 1,
      "message": "There isn\u0027t much choice beyond that or setting a flag in thread local storage. What we can do is encapsulate the exception throwing inside the rule itself, so we would just need one check, and drop the TRACE action too (unless that\u0027s needed for something else I\u0027m not seeing right now).",
      "parentUuid": "7a1969be_09040d14",
      "revId": "61418f8a2f826a38b07e53d6043fed303d7a01b0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_2fff4903",
        "filename": "midolman/src/main/java/org/midonet/midolman/simulation/Chain.java",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1003555
      },
      "writtenOn": "2015-01-27T10:55:10Z",
      "side": 1,
      "message": "I think it\u0027s clearer to explicitly throw from here, rather than putting flow control in the rule. If the throw was in the rule, it would change the semantics of what a rule does.",
      "parentUuid": "7a1969be_e9c37136",
      "revId": "61418f8a2f826a38b07e53d6043fed303d7a01b0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1969be_2fd0e952",
        "filename": "midolman/src/main/java/org/midonet/midolman/simulation/Chain.java",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2015-01-27T11:34:52Z",
      "side": 1,
      "message": "I personally don\u0027t see much of a difference, since a rule can do whatever, including throwing NotYetException or TraceRequiredException. For example, a NatRule is very complex and applies modifications to the packet.",
      "parentUuid": "7a1969be_2fff4903",
      "revId": "61418f8a2f826a38b07e53d6043fed303d7a01b0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}