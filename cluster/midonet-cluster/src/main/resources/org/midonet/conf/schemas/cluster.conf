// Copyright 2015 Midokura SARL
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// MidoNet Cluster configuration schema, containing config for all
// cluster services.

cluster {
    schemaVersion : 6

    zookeeper {
        use_new_stack : true
    }

    neutron_importer {
        enabled : false
        enabled_description : """ """

        threads : 1
        threads_description : """ """

        delay : 0ms
        delay_description : """ """
        delay_type : "duration"

        period : 1000ms
        period_description : """ """
        period_type : "duration"

        connection_string : " "
        connection_string_description : """ """

        jdbc_driver_class : " "
        jdbc_driver_class_description : """ """

        user : " "
        user_description : """ """

        password : " "
        password_description : """ """
    }

    midocluster {
        vxgw_enabled : false
        vxgw_enabled_description : """ """
    }

    heartbeat {
        enabled : false
        enabled_description : """ """

        threads : 1
        threads_description : """ """

        delay : 0ms
        delay_description : """ """
        delay_type : "duration"

        period : 1000ms
        period_description : """ """
        period_type : "duration"
    }

    vxgw {
        enabled : false
        enabled_description : """ Whether the VxLAN Gateway service is active
         on this cluster node.  Note that any number of cluster nodes may
         have the VxGW service active; they will self-coordinate electing a
         leader that will take over all VxLAN management functions, and
         failover to passive nodes whenever necessary.  If you're using the
         VxLAN Gateway feature, it is recommended that you run at least two
         Cluster nodes with this service active.
         """

        network_buffer_size : 10000
        network_buffer_size_description : """ This property defines the size
        of the buffer that the service will use internally for the queues
        processing creations/updates on networks.  Its value should be at
        least the maximum number of virtual networks expected to exist in the
        system.  Don't modify unless instructed to do so in VxGW service logs.
        """
    }

    topology_api {
        enabled : false
        enabled_description : """
        Whether the service should be started or not."""

        socket_enabled : false
        socket_enabled_description : """
        Whether the plain socket interface should be active."""

        port : 8088
        port_description : """
        Port for the plain socket interface."""

        ws_enabled : false
        ws_enabled_description : """
        Whether the websocket interface should be active."""

        ws_port : 8080
        ws_port_description : """
        Port for the websocket interface."""

        ws_path : "/websocket"
        ws_path_description : """
        Path for the websocket url."""

        session_grace_period : 180s
        session_grace_period_description : """
        Time to maintain session subscriptions after an unexpected
        disconnection."""
        session_grace_period_type : "duration"

        session_buffer_size : 16384
        session_buffer_size_description : """
        Maximum number of pending 'on-the-fly' events; it should be at least
        128 and large enough to accomodate the maximum number of devices of
        a certain type. This value also corresponds to the maximum number of
        events that can be maintained during a disconnection."""
    }

    snoopy {
        host : "localhost"
        host_description : """ """

        port : 8088
        port_description : """ """

        ws_path : " "
        ws_path_description : """ """
    }

    conf_api {
        enabled : true
        enabled_description : """ """

        http_port: 8459
        http_port_description : """ """
    }

    rest_api {
        enabled : true
        enabled_description : """ """

        http_port: 8181
        http_port_description : """ """

        root_uri: "/midonet-api"
        root_uri_description: """ The root path for all APIs """
    }

    auth {
        provider_class : org.midonet.cluster.auth.keystone.v2_0.KeystoneService
        provider_class_description : """
        The class of the authentication provider. The MidoNet Cluster includes
        the following authentication providers:
        - org.midonet.cluster.auth.keystone.v2_0.KeystoneService: authentication
          provider using Keystone v2 identity service
        - org.midonet.cluster.auth.MockAuthService - mock authentication used
          for testing
        """

        admin_role : " "
        admin_role_description : """
        The security role, specifying the set of rights and privileges, used for
        the admin user.
        """

        tenant_admin_role : " "
        tenant_admin_role_description : """
        The security role, specifying the set of rights and privileges, used for
        the admin tenant user.
        """

        tenant_user_role : " "
        tenant_user_role_description : """
        The security role, specifying the set of rights and privileges, used for
        the tenant user.
        """

        keystone {
            tenant_name : " "
            tenant_name_description : """The tenant user name."""

            admin_token : " "
            admin_token_description : """
            The token used for administrative access to the Keystone server.
            """

            protocol : "http"
            protocol_description : """
            The protocol used to access the Keystone server (default is http).
            """

            host : "localhost"
            host_description : """
            The Keystone server host name.
            """

            port : 35357
            port_description : """
            The Keystone server port number.
            """
        }
    }

}
