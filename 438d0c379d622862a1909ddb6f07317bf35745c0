{
  "comments": [
    {
      "key": {
        "uuid": "1af78d9a_6b20219c",
        "filename": "midolman/src/main/java/org/midonet/midolman/host/state/HostZkManager.java",
        "patchSetId": 8
      },
      "lineNbr": 444,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-19T10:19:58Z",
      "side": 1,
      "message": "What does this do?",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_ab3e8927",
        "filename": "midolman/src/main/java/org/midonet/midolman/host/state/HostZkManager.java",
        "patchSetId": 8
      },
      "lineNbr": 444,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2014-12-19T16:11:48Z",
      "side": 1,
      "message": "It\u0027s used in HostMapperTest to ensure the path to the host exists in ZK (so that the alive status can be stored).",
      "parentUuid": "1af78d9a_6b20219c",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_8b858daf",
        "filename": "midolman/src/main/java/org/midonet/midolman/host/state/HostZkManager.java",
        "patchSetId": 8
      },
      "lineNbr": 444,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-19T16:36:52Z",
      "side": 1,
      "message": "oh, I meant the annotation :)",
      "parentUuid": "1af78d9a_ab3e8927",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_8b210db7",
        "filename": "midolman/src/main/java/org/midonet/midolman/host/state/HostZkManager.java",
        "patchSetId": 8
      },
      "lineNbr": 444,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2014-12-19T17:09:56Z",
      "side": 1,
      "message": "oh! It just informative.",
      "parentUuid": "1af78d9a_8b858daf",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_ce3043eb",
        "filename": "midolman/src/main/java/org/midonet/midolman/host/state/HostZkManager.java",
        "patchSetId": 8
      },
      "lineNbr": 444,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-19T17:43:28Z",
      "side": 1,
      "message": "Ah, I see. Cool!",
      "parentUuid": "1af78d9a_8b210db7",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_4b2565aa",
        "filename": "midolman/src/main/java/org/midonet/midolman/host/state/HostZkManager.java",
        "patchSetId": 8
      },
      "lineNbr": 452,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-19T10:19:58Z",
      "side": 1,
      "message": "Why a multi for a single op?",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_4b5f2573",
        "filename": "midolman/src/main/java/org/midonet/midolman/host/state/HostZkManager.java",
        "patchSetId": 8
      },
      "lineNbr": 452,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2014-12-19T16:11:48Z",
      "side": 1,
      "message": "That\u0027s the simplest way I found to create the host path without storing host information.",
      "parentUuid": "1af78d9a_4b2565aa",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_2bbc596c",
        "filename": "midolman/src/main/java/org/midonet/midolman/host/state/HostZkManager.java",
        "patchSetId": 8
      },
      "lineNbr": 452,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-19T16:36:52Z",
      "side": 1,
      "message": "Ah! You have the add method: zk.ad(path, null, CreateMode.Persistent) (but this is just a nitpick)",
      "parentUuid": "1af78d9a_4b5f2573",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_cb2b1593",
        "filename": "midolman/src/main/java/org/midonet/midolman/host/state/HostZkManager.java",
        "patchSetId": 8
      },
      "lineNbr": 452,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2014-12-19T17:09:56Z",
      "side": 1,
      "message": "Since this will go away in a little while, I\u0027ll leave this as is.",
      "parentUuid": "1af78d9a_2bbc596c",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_ab3969da",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/HostMapper.scala",
        "patchSetId": 8
      },
      "lineNbr": 39,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-19T10:19:58Z",
      "side": 1,
      "message": "s/tunnel/tunnelZone all over",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_ab53296b",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/HostMapper.scala",
        "patchSetId": 8
      },
      "lineNbr": 39,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2014-12-19T16:11:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1af78d9a_ab3969da",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_cb47954a",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/HostMapper.scala",
        "patchSetId": 8
      },
      "lineNbr": 86,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-19T10:19:58Z",
      "side": 1,
      "message": "simHost.tunnelZones +\u003d tunnel.id -\u003e tunnel.hosts(id) ?",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_ebe411ae",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/HostMapper.scala",
        "patchSetId": 8
      },
      "lineNbr": 86,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2014-12-19T16:11:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1af78d9a_cb47954a",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_eb4a5154",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/HostMapper.scala",
        "patchSetId": 8
      },
      "lineNbr": 110,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-19T10:19:58Z",
      "side": 1,
      "message": "Hum.. this seems overly complicated. If a host contains all the IDs of the tunnel zones it is in, why not request them directly, with a get?",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_2bc73914",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/HostMapper.scala",
        "patchSetId": 8
      },
      "lineNbr": 110,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2014-12-19T16:11:48Z",
      "side": 1,
      "message": "When retrieved form Zoom, the host only contains tunnelIds but not the IPs of the host in the tunnels it\u0027s a member of. That\u0027s why we need to obtain this information from the tunnel zones. See the comments above tunnels in the host class.",
      "parentUuid": "1af78d9a_eb4a5154",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_ab8849c7",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/HostMapper.scala",
        "patchSetId": 8
      },
      "lineNbr": 110,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-19T16:36:52Z",
      "side": 1,
      "message": "What I mean is: doesn\u0027t storage provide just a simple get? When you get a host, you get the ids, and you just request the values, which having to keep track of what streams you are subscribed to.",
      "parentUuid": "1af78d9a_2bc73914",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_4b172552",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/HostMapper.scala",
        "patchSetId": 8
      },
      "lineNbr": 110,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2014-12-19T17:09:56Z",
      "side": 1,
      "message": "It could be that the set of tunnels the host is a member of does not change but one of its IPs does change, isn\u0027it?\nIn that case we need to be notified of tunnel changes and get is not sufficient.",
      "parentUuid": "1af78d9a_ab8849c7",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_6e094f2c",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/HostMapper.scala",
        "patchSetId": 8
      },
      "lineNbr": 110,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-19T17:43:28Z",
      "side": 1,
      "message": "If the host \u003c-\u003e tunnel zone membership changes, with the current structure, zookeeper should fire a watcher (you have to delete a node under the host node, and re-add it to change the tunnel zone membership). I also think we\u0027re missing an explicit tunnel zone membership idea.",
      "parentUuid": "1af78d9a_4b172552",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_a0fea036",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/HostMapper.scala",
        "patchSetId": 8
      },
      "lineNbr": 110,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2014-12-29T10:06:02Z",
      "side": 1,
      "message": "This membership information is stored in the tunnel zones in the hosts field. If we want to change the membership of a tunnel zone, we can modify this field. What you are referring to is the old design, right? I\u0027m not sure I understand what the problem is here.\n\nAlso note that there is a general desire of fields in zoom objects to be immutable.",
      "parentUuid": "1af78d9a_6e094f2c",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_404a5c84",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/HostMapper.scala",
        "patchSetId": 8
      },
      "lineNbr": 110,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-29T10:31:09Z",
      "side": 1,
      "message": "I was referring to the old structure, I guess. Carry on then :p\n\nDon\u0027t we now index tunnel zones by host? To find out to which tunnel zone a host belongs we have to first load them? (Which is ok, since there is usually just 1)",
      "parentUuid": "1af78d9a_a0fea036",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_a008602e",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/HostMapper.scala",
        "patchSetId": 8
      },
      "lineNbr": 110,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2014-12-29T11:07:19Z",
      "side": 1,
      "message": "Yes currently you have to load all tunnel zones to understand which tunnel a host is a member of. At least that\u0027s what I got from reading the code.\nIf I understood the current code correctly, the new design will be faster since you don\u0027t need to load all zones.",
      "parentUuid": "1af78d9a_404a5c84",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_2b4d7973",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/HostMapper.scala",
        "patchSetId": 8
      },
      "lineNbr": 137,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-19T10:19:58Z",
      "side": 1,
      "message": "I\u0027m not sure why this is needed. Isn\u0027t this handled by the base class?",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_eb4d31c6",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/HostMapper.scala",
        "patchSetId": 8
      },
      "lineNbr": 137,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2014-12-19T16:11:48Z",
      "side": 1,
      "message": "removed",
      "parentUuid": "1af78d9a_2b4d7973",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_2b74599b",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/HostMapper.scala",
        "patchSetId": 8
      },
      "lineNbr": 143,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-19T10:19:58Z",
      "side": 1,
      "message": "Rx is awesome :D",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_8b50ed5f",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/HostMapper.scala",
        "patchSetId": 8
      },
      "lineNbr": 143,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2014-12-19T16:11:48Z",
      "side": 1,
      "message": "I like it too :-)",
      "parentUuid": "1af78d9a_2b74599b",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_8b362de6",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/devices/Host.scala",
        "patchSetId": 8
      },
      "lineNbr": 70,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-19T10:19:58Z",
      "side": 1,
      "message": "Why is this needed?",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_2bee198c",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/devices/Host.scala",
        "patchSetId": 8
      },
      "lineNbr": 70,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2014-12-19T16:11:48Z",
      "side": 1,
      "message": "In the host mapper, after updating the host. I was thinking it would be problematic to modify the host in place. Perhaps it is not. This is just to be safe.",
      "parentUuid": "1af78d9a_8b362de6",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_abafa92a",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/devices/Host.scala",
        "patchSetId": 8
      },
      "lineNbr": 70,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-19T16:36:52Z",
      "side": 1,
      "message": "Got it!",
      "parentUuid": "1af78d9a_2bee198c",
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_eb3371f4",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/devices/TunnelZone.scala",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-19T10:19:58Z",
      "side": 1,
      "message": "Doesn\u0027t seem like a case class to me.",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 4
      },
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_cb3035eb",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/devices/TunnelZone.scala",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-19T10:19:58Z",
      "side": 1,
      "message": "Remove?",
      "range": {
        "startLine": 56,
        "startChar": 21,
        "endLine": 56,
        "endChar": 23
      },
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_0bf35d74",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/devices/TunnelZone.scala",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2014-12-19T16:11:48Z",
      "side": 1,
      "message": "TunnelZone will need to be a case class for later. The same goes for the Host.",
      "parentUuid": "1af78d9a_cb3035eb",
      "range": {
        "startLine": 56,
        "startChar": 21,
        "endLine": 56,
        "endChar": 23
      },
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_cbf8354c",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/devices/TunnelZone.scala",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-19T16:36:52Z",
      "side": 1,
      "message": "Oh, why? It has an identity, so should it become a value?",
      "parentUuid": "1af78d9a_0bf35d74",
      "range": {
        "startLine": 56,
        "startChar": 21,
        "endLine": 56,
        "endChar": 23
      },
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_cb02f50a",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/devices/TunnelZone.scala",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2014-12-19T17:09:56Z",
      "side": 1,
      "message": "It allows to do matching on objects that are subclasses of Device (such as TunnelZone and Host).\n\nYou mean the id should be part of the constructor? I\u0027m not sure we can do that though because we\u0027re using ZoomConvert to build the object from the corresponding proto.",
      "parentUuid": "1af78d9a_cbf8354c",
      "range": {
        "startLine": 56,
        "startChar": 21,
        "endLine": 56,
        "endChar": 23
      },
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_6e6e6fcb",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/devices/TunnelZone.scala",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-19T17:43:28Z",
      "side": 1,
      "message": "Like pattern matching? It doesn\u0027t need to be a case class, it needs to define an unapply method. \n\nIf these objects will live in a map and have an id, you probably want to define your own equals method instead of relying on what case classes generate.",
      "parentUuid": "1af78d9a_cb02f50a",
      "range": {
        "startLine": 56,
        "startChar": 21,
        "endLine": 56,
        "endChar": 23
      },
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_60a4b857",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/devices/TunnelZone.scala",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2014-12-29T10:06:02Z",
      "side": 1,
      "message": "So it turns out I just need type matching and not pattern matching so I removed the case classes altogether. \n\nAs for inserting tunnel zones in maps, the key type used in the VTPM is UUID, so no need to redefine hashCode here. The same goes for Hosts.",
      "parentUuid": "1af78d9a_6e6e6fcb",
      "range": {
        "startLine": 56,
        "startChar": 21,
        "endLine": 56,
        "endChar": 23
      },
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_204f5094",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/devices/TunnelZone.scala",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1002754
      },
      "writtenOn": "2014-12-29T10:31:09Z",
      "side": 1,
      "message": "I was just pointing out that a case class generates structural equality for you.",
      "parentUuid": "1af78d9a_60a4b857",
      "range": {
        "startLine": 56,
        "startChar": 21,
        "endLine": 56,
        "endChar": 23
      },
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af78d9a_00069420",
        "filename": "midolman/src/main/scala/org/midonet/midolman/topology/devices/TunnelZone.scala",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1002820
      },
      "writtenOn": "2014-12-29T11:07:19Z",
      "side": 1,
      "message": "ok!",
      "parentUuid": "1af78d9a_204f5094",
      "range": {
        "startLine": 56,
        "startChar": 21,
        "endLine": 56,
        "endChar": 23
      },
      "revId": "438d0c379d622862a1909ddb6f07317bf35745c0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}